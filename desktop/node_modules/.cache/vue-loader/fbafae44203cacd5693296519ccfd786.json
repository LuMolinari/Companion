{"remainingRequest":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue","mtime":1618947537438},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Highlights.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyfile":"Highlights.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div>\r\n    <h1 style=\"text-align: center; color: white; padding: 20px; height:10%\">Highlights</h1>\r\n    <hr />\r\n    <div class=\"highlights-container\" v-if=\"highlightsAvailable\">\r\n        <div class=\"highlights-list\">\r\n          <!-- for loop to go through video folders -->\r\n          <div v-for=\"folder in videoList\" :key=\"folder.date\">\r\n            <div class=\"folder-tab\">\r\n              <div class=\"foldertab-menu\">\r\n                <img\r\n                  :src=\"setChampion(folder)\"\r\n                  alt=\"champion\"\r\n                  height=\"100px\"\r\n                  width=\"100px\"\r\n                />\r\n                <div class=\"vertical\">\r\n                  <h2>{{ folder.gameMode }}</h2>\r\n                  <h3>{{ folder.date }}</h3>\r\n                  <h3>{{ folder.time }}</h3>\r\n                </div>\r\n\r\n                <h3 class=\"result\">{{ folder.gameResult }}</h3>\r\n              </div>\r\n              <!-- for loop to go through videos in the folder -->\r\n              <div v-for=\"video in folder.videoList\" :key=\"video.videoAddress\" class=\"video-button\"  @click=\"setVideo(video.videoAddress)\">\r\n                  <img\r\n                    class=\"video-thumbnail\"\r\n                    :src=\"video.thumbnail_url\"\r\n                    alt=\"thumbnail\"\r\n                    height=\"75\"\r\n                    width=\"75\"\r\n                  />\r\n                  <h2>{{ video.highlightType }}</h2>\r\n                  <div class=\"highlight-details\">\r\n                    {{ video.videoStartTime }}<br />\r\n                    {{ video.duration }}<br />\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <!-- video side -->\r\n        <div class=\"video-side\">\r\n          <!-- used :src to dynamically set video -->\r\n          <video\r\n            class=\"video-player\"\r\n            height=\"480px\"\r\n            width=\"720px\"\r\n            :src=\"current_Video\"\r\n            controls\r\n            autoplay\r\n          ></video>\r\n\r\n          <div class=\"below-button\">\r\n            <div v-if=\"checkPreviousVideo(current_Video)\">\r\n              <button\r\n                class=\"video-button-below\"\r\n                v-on:click=\"getPreviousVideo(current_Video)\"\r\n              >\r\n                Previous\r\n              </button>\r\n            </div>\r\n\r\n            <div v-if=\"checkNextVideo(current_Video)\">\r\n              <button\r\n                class=\"video-button-below\"\r\n                v-on:click=\"getNextVideo(current_Video)\"\r\n              >\r\n                Next\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"no-highlights\" v-else>\r\n        <h2>No Highlights Found</h2>\r\n        <img\r\n          src=\"https://img.icons8.com/bubbles/500/000000/google-web-search.png\"\r\n          height=\"500\"\r\n          width=\"500\"\r\n        />\r\n\r\n        <h2>Try Playing Some Games</h2>\r\n      </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\nimport Dexie from \"dexie\";\r\nimport axios from \"axios\";\r\n// @ts-ignore\r\nimport champions from \"lol-champions\";\r\n\r\n//this class represents a video inside a folder\r\nclass Video {\r\n  public videoAddress: string;\r\n  public videoStartTime: string;\r\n  public duration: string;\r\n  public highlightType: string;\r\n  public thumbnail_url: string;\r\n}\r\n\r\n//this class represents a folder\r\nclass VideoFolder {\r\n  //if we query match id with riot we can probabyly get matchtype and champion used\r\n  public gameMode: string; //regular/aram/practice\r\n  public championURL: string;\r\n  public gameResult: string; //regular/aram/practice\r\n\r\n  public gameType: string; //regular/aram/practice\r\n  public champion: string; //url of champion img\r\n\r\n  //below is received from database\r\n  public date: string;\r\n  public time: string;\r\n  public videoList: Array<Video> = [];\r\n\r\n  setDate(date: string) {\r\n    this.date = date;\r\n  }\r\n\r\n  setTime(time: string) {\r\n    this.time = time;\r\n  }\r\n\r\n  addVideoToFolder(video: Video) {\r\n    this.videoList.push(video);\r\n  }\r\n}\r\n\r\n@Component\r\nexport default class Highlights extends Vue {\r\n  highlightsAvailable = false;\r\n  videoList: Array<VideoFolder> = [];\r\n  current_Video = \"\";\r\n\r\n  setVideo(newVideo: string) {\r\n    this.current_Video = newVideo;\r\n  }\r\n\r\n  setChampion(folder: VideoFolder) {\r\n    return folder.championURL;\r\n  }\r\n\r\n  checkNextVideo(video: string) {\r\n    var flag = false;\r\n    // check index of video passed\r\n    for (var i = 0; i < this.videoList.length; i++) {\r\n      for (var j = 0; j < this.videoList[i].videoList.length; j++) {\r\n        if (this.videoList[i].videoList[j].videoAddress == video) {\r\n          // Make sure this isn't the last video\r\n          if (j != this.videoList[i].videoList.length - 1) {\r\n            // there is a next video\r\n            flag = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  checkPreviousVideo(video: string) {\r\n    var flag = false;\r\n    // search for the current video to get\r\n    for (var i = 0; i < this.videoList.length; i++) {\r\n      for (var j = this.videoList[i].videoList.length - 1; j > 0; j--) {\r\n        if (this.videoList[i].videoList[j].videoAddress == video) {\r\n          // Make sure this isn't the first video\r\n          if (j != 0) {\r\n            // there is a previous video\r\n            flag = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  getNextVideo(video: string) {\r\n    // check index of video passed\r\n    for (var i = 0; i < this.videoList.length; i++) {\r\n      for (var j = 0; j < this.videoList[i].videoList.length; j++) {\r\n        if (this.videoList[i].videoList[j].videoAddress == video) {\r\n          // Make sure this isn't the last video\r\n          if (j != this.videoList[i].videoList.length - 1) {\r\n            // call setVideo with this next video\r\n            this.setVideo(this.videoList[i].videoList[j + 1].videoAddress);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getPreviousVideo(video: string) {\r\n    // search for the current video to get\r\n    for (var i = 0; i < this.videoList.length; i++) {\r\n      for (var j = this.videoList[i].videoList.length - 1; j > 0; j--) {\r\n        if (this.videoList[i].videoList[j].videoAddress == video) {\r\n          // Make sure this isn't the first video\r\n          if (j != 0) {\r\n            // call setVideo with this previous video\r\n            this.setVideo(this.videoList[i].videoList[j - 1].videoAddress);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async mounted() {\r\n    let self = this;\r\n    let setFirstVideo = false;\r\n    //fetch recent videos\r\n\r\n    //open local database\r\n    var localDB = new Dexie(\"highlightsDB\");\r\n    localDB.version(1).stores({\r\n      matches: \"match_id, match_start_time\",\r\n      videos:\r\n        \"media_url, match_id, thumbnail_url, highlight_start_time, duration, hightType\",\r\n    });\r\n\r\n    //check if matches exist in the database\r\n    localDB.table(\"matches\").count((count) => {\r\n      if (count != 0) {\r\n        this.highlightsAvailable = true;\r\n      }\r\n    });\r\n\r\n    //get last 5 most recent games\r\n    const recentGames = await localDB\r\n      .table(\"matches\")\r\n      .orderBy(\"match_start_time\")\r\n      .reverse()\r\n      .limit(5)\r\n      .toArray()\r\n      .catch((e) => console.log(e));\r\n\r\n    //get all other games\r\n    const olderGames = await localDB\r\n      .table(\"matches\")\r\n      .orderBy(\"match_start_time\")\r\n      .reverse()\r\n      .offset(5)\r\n      .toArray()\r\n      .catch((e) => console.log(e));\r\n\r\n    //display results\r\n    console.log(\"array of recent games: \", recentGames);\r\n    console.log(\"array of older games: \", olderGames);\r\n\r\n    //loop through last 5 games and use game id's to pull data\r\n    //@ts-ignore\r\n    for (let index = 0; index < recentGames.length; index++) {\r\n      let match_date = new Date(recentGames[index].match_start_time);\r\n\r\n      //create new match\r\n      let tempFolder = new VideoFolder();\r\n      console.log(\r\n        \"Calling: \",\r\n        \"https://na1.api.riotgames.com/lol/match/v4/matches/\" +\r\n          recentGames[index].match_id +\r\n          \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\"\r\n      );\r\n      await axios\r\n        .get(\r\n          \"https://na1.api.riotgames.com/lol/match/v4/matches/\" +\r\n            recentGames[index].match_id +\r\n            \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\"\r\n        )\r\n        .then((result) => {\r\n          console.log(\"result of riot call: \", result);\r\n          //get game mode\r\n          tempFolder.gameMode = result.data.gameMode;\r\n          console.log(\"gamemode: \", tempFolder.gameMode);\r\n          //find identity of out user from array;\r\n\r\n          if (result.data.participantIdentities.length === 10) {\r\n            for (let k = 0; k < result.data.participantIdentities.length; k++) {\r\n              //if participant identity matches namev in local storage\r\n              //if participant identities dont exist then it was a practice game\r\n\r\n              if (\r\n                result.data.participantIdentities[k].player.summonerName ===\r\n                window.localStorage.getItem(\"localUsername\")\r\n              ) {\r\n                //get game outcome\r\n                if (result.data.participants[k].stats.win === true) {\r\n                  tempFolder.gameResult = \"Victory\";\r\n                } else {\r\n                  tempFolder.gameResult = \"Defeat\";\r\n                }\r\n\r\n                //get champion used\r\n                for (let l = 0; l < champions.length; l++) {\r\n                  if (\r\n                    champions[l].key ===\r\n                    String(result.data.participants[k].championId)\r\n                  ) {\r\n                    tempFolder.championURL = champions[l].icon;\r\n                    break;\r\n                  }\r\n                }\r\n\r\n                break;\r\n              }\r\n            }\r\n          } else {\r\n            tempFolder.gameResult = \"Victory\";\r\n            //get champion used\r\n            for (let l = 0; l < champions.length; l++) {\r\n              if (\r\n                champions[l].key ===\r\n                String(result.data.participants[0].championId)\r\n              ) {\r\n                tempFolder.championURL = champions[l].icon;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      //set date and time from the database\r\n      tempFolder.setDate(match_date.toDateString());\r\n      tempFolder.setTime(match_date.toLocaleTimeString());\r\n\r\n      //get all the videos with matching ids\r\n      let videosInMatch = await localDB\r\n        .table(\"videos\")\r\n        .where(\"match_id\")\r\n        .equals(recentGames[index].match_id)\r\n        .toArray()\r\n        .catch((e) => console.log(e));\r\n      console.log(\"Videos Found: \", videosInMatch);\r\n\r\n      //@ts-ignore\r\n      for (let urls = 0; urls < videosInMatch.length; urls++) {\r\n        let tempVideo = new Video();\r\n\r\n        // console.log(\"duration: \", new Date  (videosInMatch[urls].duration).getSeconds()+\"s\");\r\n        // console.log(\"highlight_start_time: \", new Date  (videosInMatch[urls].highlight_start_time).toLocaleTimeString());\r\n        // console.log(\"hightType: \", videosInMatch[urls].hightType.charAt(0).toUpperCase() + videosInMatch[urls].hightType.slice(1)); //make first letter uppercase\r\n        // console.log(\"media_url: \", videosInMatch[urls].media_url);\r\n        // console.log(\"thumbnail_url: \",videosInMatch[urls].thumbnail_url);\r\n        if (!setFirstVideo) {\r\n          self.current_Video = videosInMatch[urls].media_url;\r\n          setFirstVideo = true;\r\n        }\r\n        tempVideo.videoAddress = videosInMatch[urls].media_url;\r\n        tempVideo.videoStartTime = new Date(\r\n          videosInMatch[urls].highlight_start_time\r\n        ).toLocaleTimeString();\r\n        tempVideo.duration =\r\n          new Date(videosInMatch[urls].duration).getSeconds() + \"s\";\r\n        tempVideo.highlightType =\r\n          videosInMatch[urls].hightType.charAt(0).toUpperCase() +\r\n          videosInMatch[urls].hightType.slice(1); //make first letter uppercase\r\n        tempVideo.thumbnail_url = videosInMatch[urls].thumbnail_url;\r\n\r\n        tempFolder.addVideoToFolder(tempVideo);\r\n      }\r\n\r\n      self.videoList.push(tempFolder);\r\n    }\r\n\r\n    //after this all the data is being displayed\r\n    //but now we need to delete the older games, so they dont pollute the database\r\n    //loop through older games and use game id's to delete data\r\n    //@ts-ignore\r\n    for (let index = 0; index < olderGames.length; index++) {\r\n      //get all the videos with matching ids\r\n      let olderVideos = await localDB\r\n        .table(\"videos\")\r\n        .where(\"match_id\")\r\n        .equals(olderGames[index].match_id)\r\n        .toArray()\r\n        .catch((e) => console.log(e));\r\n      console.log(\"Older Videos Found: \", olderVideos);\r\n\r\n      //loop through video adresses in matches\r\n      //@ts-ignore\r\n      for (let urls = 0; urls < olderVideos.length; urls++) {\r\n        //delete actual videos from local disk using overwolf\r\n        //@ts-ignore\r\n        overwolf.media.videos.deleteVideo(olderVideos[urls].media_url);\r\n      }\r\n\r\n      //then remove them from the videos database\r\n      localDB\r\n        .table(\"videos\")\r\n        .where(\"match_id\")\r\n        .equals(recentGames[index].match_id)\r\n        .delete()\r\n        .then((deleteCount) => {\r\n          console.log(\"Deleted older highlights videos: \", deleteCount);\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }\r\n\r\n    //get all other games\r\n    await localDB\r\n      .table(\"matches\")\r\n      .orderBy(\"match_start_time\")\r\n      .reverse()\r\n      .offset(5)\r\n      .delete()\r\n      .then((deleteCount) => {\r\n        console.log(\"Deleted old match data\", deleteCount);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }\r\n\r\n  created() {\r\n    // window resize\r\n    let WindowId;\r\n    //@ts-ignore\r\n    overwolf.windows.getCurrentWindow(function (res) {\r\n      WindowId = res.window.id;\r\n      console.log(\"Window id: \", WindowId);\r\n      let sizeSettings = {\r\n        window_id: WindowId,\r\n        width: 1600,\r\n        height: 800,\r\n        auto_dpi_resize: true, //relevant only for native windows\r\n      };\r\n      //@ts-ignore\r\n      overwolf.windows.changeSize(sizeSettings, (e) => {\r\n        console.log(\"change size callback: \", e);\r\n      });\r\n    });\r\n  }\r\n}\r\n</script>"]}]}