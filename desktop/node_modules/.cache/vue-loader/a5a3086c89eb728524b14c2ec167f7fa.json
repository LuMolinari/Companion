{"remainingRequest":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Home.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Home.vue","mtime":1618431748488},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Home.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Home.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <h1 class=\"project-name\">League Companion</h1>\r\n    <hr />\r\n    <div v-if=\"summonerDataAvailable\">\r\n      <!-- Info that is displayed from data pullled from launcher\r\n       img src is being dynamically set-->\r\n      <div class=\"summoner-label\">\r\n        <img\r\n          alt=\"Profile Icon\"\r\n          class=\"league_profile\"\r\n          :srcset=\"profile_icon_id_url\"              \r\n\r\n        />\r\n        <h1>{{ summonerName }}</h1>\r\n        <p>Level: {{ summonerLevel }}</p>\r\n      </div>\r\n      <img :srcset=\"splash_art_url\" alt=\"Random Art\" class=\"bottom-art\" />\r\n    </div>\r\n\r\n    <div v-else>\r\n      <!-- If the launcher is not running it cant display info, so this is the placeholder-->\r\n      <!-- TODO #8 We need to save the information pulled from the launcher so that the program\r\n       knows their summoner data. Whether locally or on a database, then we can have home page\r\n        check to see if we've already saved summoner data -->\r\n      <img\r\n        alt=\"League Companion\"\r\n        class=\"logo\"\r\n        height=\"300\"\r\n        width=\"300\"\r\n        src=\"https://img.icons8.com/bubbles/500/000000/league-of-legends.png\"\r\n      />\r\n      <p>Launch your league client to create overlay</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\nimport axios from \"axios\";\r\n\r\n@Component\r\nexport default class Home extends Vue {\r\n  infoAvailable = false;\r\n  //this is the data being pulled from the launcher\r\n  summoner_info = null;\r\n  summonerName = \"\";\r\n  profile_icon_id_url = \"\";\r\n  splash_art_url = \"\";\r\n  summonerLevel = \"\";\r\n\r\n  //get Local storage; using this to store user name and profile\r\n  myStorage = window.localStorage;\r\n\r\n  //This array is for the random picture on the bottom of the profile home page\r\n  championArray = [\r\n    \"Teemo\",\r\n    \"Thresh\",\r\n    \"Lux\",\r\n    \"Lucian\",\r\n    \"Soraka\",\r\n    \"Sona\",\r\n    \"Aatrox\",\r\n    \"Pantheon\",\r\n    \"Samira\",\r\n    \"Malphite\",\r\n    \"Fiddlesticks\",\r\n  ];\r\n\r\n  //getter is used by template to see if it needs to change what it displays\r\n  get summonerDataAvailable() {\r\n    return this.infoAvailable;\r\n  }\r\n\r\n  //mounted is used to gain user data from the launcher\r\n  mounted() {\r\n    let self = this;\r\n\r\n    //using session storage so we dont need to make api calls constantly once we open the app the first time\r\n    if (window.sessionStorage.getItem(\"sessionUsername\") === null) {\r\n      console.log(\"Session Data unavailable\");\r\n      //check to see if we stored the username before\r\n      if (window.localStorage.getItem(\"localUsername\") === null) {\r\n        //if there is no saved name then we need to set the listeners for the launcher\r\n        //that way we can get the name,level,and icon from the overwolf launcher.\r\n        console.log(\"Local data unavailable\\nSetting overwolf launcher listeners\")\r\n        //register event listeners\r\n        function registerEvents() {\r\n          // general events errors\r\n          // @ts-ignore\r\n          overwolf.games.events.onError.addListener(function (info) {\r\n            console.log(\"Error: \" + JSON.stringify(info));\r\n          });\r\n\r\n          // \"static\" data changed\r\n          // This will also be triggered the first time we register\r\n          // for events and will contain all the current information\r\n          // @ts-ignore\r\n          overwolf.games.launchers.events.onInfoUpdates.addListener(function (\r\n            info\r\n          ) {\r\n            console.log(\"Info UPDATE: \" + JSON.stringify(info));\r\n          });\r\n\r\n          // an event triggered\r\n          // @ts-ignore\r\n          overwolf.games.launchers.events.onNewEvents.addListener(function (\r\n            info\r\n          ) {\r\n            console.log(\"EVENT FIRED: \" + JSON.stringify(info));\r\n          });\r\n        }\r\n\r\n        function setFeatures() {\r\n          // @ts-ignore\r\n          overwolf.games.launchers.events.setRequiredFeatures(\r\n            10902,\r\n            [\r\n              \"game_flow\",\r\n              \"summoner_info\",\r\n              \"champ_select\",\r\n              \"lcu_info\",\r\n              \"lobby_info\",\r\n              \"end_game\",\r\n              \"game_info\",\r\n            ],\r\n            function (info) {\r\n              if (info.status == \"error\") {\r\n                console.log(\"Could not set required features: \" + info.reason);\r\n                console.log(\"Trying in 2 seconds\");\r\n                window.setTimeout(setFeatures, 2000);\r\n                return;\r\n              }\r\n              // @ts-ignore\r\n              overwolf.games.launchers.events.getInfo(10902, function (info) {\r\n                if (info.status === \"success\") {\r\n                  //filling in data from what the launcher recieves\r\n                  console.log(\"Pulling overwolf launcher data: \", info);\r\n\r\n\r\n                  self.summoner_info = info.res.summoner_info;\r\n                  self.summonerName = self.summoner_info.display_name;\r\n                  window.sessionStorage.setItem(\"sessionUsername\", self.summonerName);\r\n                  //save account id for use in stats page\r\n                  window.localStorage.setItem('encryptedAccountID', self.summoner_info.account_id);\r\n                  \r\n                  //set summoner name in localstorage\r\n                  window.localStorage.setItem(\r\n                    \"localUsername\",\r\n                    self.summoner_info.display_name\r\n                  );\r\n                  self.profile_icon_id_url =\r\n                    \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/profileicon/\" +\r\n                    self.summoner_info.profile_icon_id +\r\n                    \".png\";\r\n                  self.summonerLevel = self.summoner_info.summoner_level;\r\n\r\n\r\n                  window.sessionStorage.setItem(\"iconURL\", self.profile_icon_id_url);\r\n                  window.sessionStorage.setItem(\"summonerLevel\", self.summonerLevel);  \r\n\r\n                  //randomly chosing splash art from array\r\n                  self.splash_art_url =\r\n                    \"http://ddragon.leagueoflegends.com/cdn/img/champion/splash/\" +\r\n                    self.championArray[\r\n                      Math.floor(Math.random() * self.championArray.length)\r\n                    ] +\r\n                    \"_0.jpg\";\r\n\r\n                  self.infoAvailable = true;\r\n                }\r\n              });\r\n            }\r\n          );\r\n        }\r\n\r\n        //checks if correct launcher is running\r\n        function launcherRunning(launcherInfo) {\r\n          if (!launcherInfo) {\r\n            return false;\r\n          }\r\n\r\n          if (!launcherInfo.launchers[0]) {\r\n            return false;\r\n          }\r\n\r\n          // NOTE: we divide by 10 to get the launcher class id without it's sequence number\r\n          if (Math.floor(launcherInfo.launchers[0].id / 10) != 10902) {\r\n            return false;\r\n          }\r\n\r\n          console.log(\"League of Legends launcher running\");\r\n          return true;\r\n        }\r\n\r\n        //create starting listeners\r\n        // @ts-ignore\r\n        overwolf.games.launchers.onLaunched.addListener(function () {\r\n          registerEvents();\r\n          setTimeout(setFeatures, 1000);\r\n          console.log(\"onLaunched fired\");\r\n        });\r\n        // @ts-ignore\r\n        overwolf.games.launchers.getRunningLaunchersInfo(function (res) {\r\n          if (launcherRunning(res)) {\r\n            registerEvents();\r\n            setTimeout(setFeatures, 1000);\r\n          }\r\n          console.log(\"getRunningLaunchersInfo: \" + JSON.stringify(res));\r\n        });\r\n\r\n        // @ts-ignore\r\n        overwolf.games.launchers.onTerminated.addListener(function (res) {\r\n          setTimeout(window.close, 1000);\r\n        });\r\n      } else {\r\n\r\n        console.log(\"Local storage username available. \\nNeed to make axios call for rest of data\")\r\n\r\n        //we have an saved name so we use it to fill the home screen\r\n        self.summonerName = window.localStorage.getItem(\"localUsername\");\r\n        window.sessionStorage.setItem(\"sessionUsername\", self.summonerName);\r\n        self.infoAvailable = true;\r\n\r\n        //riot api call to gather summoner info using saved name\r\n        axios\r\n          .get(\r\n            \"https://na1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" +\r\n              self.summonerName +\r\n              \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\"\r\n          )\r\n          .then((result) => {\r\n            //gather level and current splach art from riot\r\n            self.profile_icon_id_url =\r\n              \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/profileicon/\" +\r\n              result.data.profileIconId +\r\n              \".png\";\r\n            self.summonerLevel = result.data.summonerLevel; \r\n\r\n            window.sessionStorage.setItem(\"iconURL\", self.profile_icon_id_url);\r\n            window.sessionStorage.setItem(\"summonerLevel\", self.summonerLevel);  \r\n            window.localStorage.setItem('encryptedAccountID', result.data.accountId);\r\n\r\n          })\r\n          .catch((error) => console.log(error));\r\n\r\n        //randomly chosing splash art from array\r\n        self.splash_art_url =\r\n          \"http://ddragon.leagueoflegends.com/cdn/img/champion/splash/\" +\r\n          self.championArray[\r\n            Math.floor(Math.random() * self.championArray.length)\r\n          ] +\r\n          \"_0.jpg\";\r\n      }\r\n    } else {\r\n      console.log(\"Session storage available.\")\r\n      //we have a session info so we use it to fill data\r\n      self.summonerName = window.sessionStorage.getItem(\"sessionUsername\");\r\n      self.profile_icon_id_url = window.sessionStorage.getItem(\"iconURL\");;\r\n      self.summonerLevel = window.sessionStorage.getItem(\"summonerLevel\");  \r\n      self.infoAvailable = true;\r\n\r\n      //riot api call to gather summoner info using saved name\r\n\r\n      //randomly chosing splash art from array\r\n      self.splash_art_url =\r\n        \"http://ddragon.leagueoflegends.com/cdn/img/champion/splash/\" +\r\n        self.championArray[\r\n          Math.floor(Math.random() * self.championArray.length)\r\n        ] +\r\n        \"_0.jpg\";\r\n    }\r\n  }\r\n\r\n  created() {\r\n    //runs after mounted()\r\n    \r\n    // window resize\r\n    let WindowId;\r\n    //@ts-ignore\r\n    overwolf.windows.getCurrentWindow(function (res) {\r\n      WindowId = res.window.id;\r\n\r\n    let sizeSettings = {\r\n        \"window_id\": WindowId,\r\n        \"width\":500,\r\n        \"height\":600,\r\n        \"auto_dpi_resize\":true //relevant only for native windows\r\n      };\r\n      //@ts-ignore\r\n      overwolf.windows.changeSize(sizeSettings ,console.log);\r\n    });\r\n  }\r\n}\r\n</script>"]}]}