{"remainingRequest":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Stats.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Stats.vue","mtime":1616301670872},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Stats.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"Stats.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <div v-if=\"summonerDataAvailable\">\r\n      <!-- Info that is displayed from data pullled from launcher\r\n       img src is being dynamically set-->\r\n      <div class=\"mini-summoner-label\">\r\n        <img\r\n          alt=\"Profile Icon\"\r\n          class=\"mini_league_profile\"\r\n          :srcset=\"profile_icon_id_url\"\r\n        />\r\n        <h1>{{ summonerName }}</h1>\r\n      </div>\r\n\r\n      <div class=\"last-game-stats\">\r\n        <div class=\"last-game-col1\">\r\n          <q>{{ lastMatch.gameMode }}</q>\r\n          {{ lastMatch.gameCreation }} <br />\r\n          {{ lastMatch.win }} <br />\r\n          {{ lastMatch.gameDuration }} <br />\r\n        </div>\r\n        <div class=\"last-game-col1\">\r\n          <div class=\"row\">\r\n            <img\r\n              alt=\"Profile Icon\"\r\n              class=\"minier_league_profile\"\r\n              :srcset=\"lastMatch.champArtURL\"\r\n            />\r\n            <div class=\"col\">\r\n              <img\r\n                alt=\"Profile Icon\"\r\n                class=\"miniest_league_profile\"\r\n                :srcset=\"lastMatch.spell1Icon\"\r\n              />\r\n              <img\r\n                alt=\"Profile Icon\"\r\n                class=\"miniest_league_profile\"\r\n                :srcset=\"lastMatch.spell2Icon\"\r\n              />\r\n            </div>\r\n          </div>\r\n          {{ lastMatch.championName }} <br />\r\n        </div>\r\n\r\n        <!-- KDA Column -->\r\n        <div class=\"last-game-col1\">\r\n          {{ lastMatch.kills }} / {{ lastMatch.deaths }} /\r\n          {{ lastMatch.assists }} <br />\r\n          {{ lastMatch.kda }} : 1 KDA <br />\r\n          {{ lastMatch.largestMultiKill }}\r\n        </div>\r\n\r\n        <!-- Item images -->\r\n        <div class=\"wrap-col\">\r\n          <div v-if=\"item0exists\">\r\n            <img\r\n              alt=\"Profile Icon\"\r\n              class=\"miniest_league_profile\"\r\n              :srcset=\"lastMatch.item0\"\r\n            />\r\n          </div>\r\n          <div v-if=\"item1exists\">\r\n            <img\r\n              alt=\"Profile Icon\"\r\n              class=\"miniest_league_profile\"\r\n              :srcset=\"lastMatch.item1\"\r\n            />\r\n          </div>\r\n          <div v-if=\"item2exists\">\r\n            <img\r\n              alt=\"Profile Icon\"\r\n              class=\"miniest_league_profile\"\r\n              :srcset=\"lastMatch.item2\"\r\n            />\r\n          </div>\r\n          <div v-if=\"item3exists\">\r\n            <img\r\n              alt=\"Profile Icon\"\r\n              class=\"miniest_league_profile\"\r\n              :srcset=\"lastMatch.item3\"\r\n            />\r\n          </div>\r\n          <div v-if=\"item4exists\">\r\n            <img\r\n              alt=\"Profile Icon\"\r\n              class=\"miniest_league_profile\"\r\n              :srcset=\"lastMatch.item4\"\r\n            />\r\n          </div>\r\n          <div v-if=\"item5exists\">\r\n            <img\r\n              alt=\"Profile Icon\"\r\n              class=\"miniest_league_profile\"\r\n              :srcset=\"lastMatch.item5\"\r\n            />\r\n          </div>\r\n          <div v-if=\"item6exists\">\r\n            <img\r\n              alt=\"Profile Icon\"\r\n              class=\"miniest_league_profile\"\r\n              :srcset=\"lastMatch.item6\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"last-game-col1\">\r\n          Lvl: {{ lastMatch.champLevel }} <br />\r\n          {{ lastMatch.totalMinionsKilled }} cs<br />\r\n        </div>\r\n      </div>\r\n      <div class=\"stats-overall\">\r\n        <u class=\"little-bigger\">Last 15 games Statistics</u>\r\n        <br />\r\n        <div class=\"grid-container\">\r\n          <div class=\"grid-item\">{{ stats.wins }} Wins</div>\r\n          <div class=\"grid-item\">{{ stats.losses }} Losses</div>\r\n          <div class=\"grid-item\">{{ stats.win_Rate }}Win Rate</div>\r\n          <div class=\"grid-item\">{{ stats.avg_Kills }} AVG Kills</div>\r\n          <div class=\"grid-item\">{{ stats.avg_Death }} Avg Death</div>\r\n          <div class=\"grid-item\">{{ stats.avg_assists }} Avg assists</div>\r\n          <div class=\"grid-item\">{{ stats.diff_Champions }} Diff Champions</div>\r\n          <div class=\"grid-item\">{{ stats.diff_Roles }} Diff Roles</div>\r\n          <div class=\"grid-item\">{{ stats.diff_Queues }} Diff Queues</div>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"stats-overall\">\r\n        <u class=\"little-bigger\">Recent Champions</u><br />\r\n        <div class=\"wrap\">\r\n          <div v-for=\"champion in recentChampions\" :key=\"champion.id\">\r\n            <div class=\"col-recent-champ\">\r\n              <img\r\n                class=\"recent-champs\"\r\n                :srcset=\"getChampURL(champion)\"\r\n                alt=\"champion\"\r\n                height=\"50\"\r\n                width=\"50\"\r\n              />\r\n              {{ champion.name }}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <div v-else>\r\n      <!-- If the launcher is not running it cant display info, so this is the placeholder-->\r\n      <!-- TODO #8 We need to save the information pulled from the launcher so that the program\r\n       knows their summoner data. Whether locally or on a database, then we can have home page\r\n        check to see if we've already saved summoner data -->\r\n      <img\r\n        alt=\"League Companion\"\r\n        class=\"logo\"\r\n        height=\"300\"\r\n        width=\"300\"\r\n        src=\"https://img.icons8.com/bubbles/500/000000/question-mark.png\"\r\n      />\r\n      <p>Launch your League Client to fetch your stats</p>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\nimport axios from \"axios\";\r\n// @ts-ignore\r\nimport spells from \"lol-spells\";\r\n// @ts-ignore\r\nimport champions from \"lol-champions\";\r\n\r\nclass Champion {\r\n  id: number;\r\n  name: string;\r\n  url: string;\r\n\r\n  constructor(id, name, url) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.url = url;\r\n  }\r\n}\r\n\r\n@Component\r\nexport default class Stats extends Vue {\r\n  infoAvailable = false;\r\n  summoner_info = null;\r\n  summonerName = \"Doublelift\";\r\n  profile_icon_id_url =\r\n    \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/profileicon/12.png\";\r\n  summonerLevel = \"\";\r\n\r\n  // these are needed for API calls for stats\r\n  encypted_summoner_id = \"\";\r\n  encypted_account_id = \"\";\r\n\r\n  recentChampions: Champion[] = new Array();\r\n\r\n  lastMatch = {\r\n    //ARAM & Normals\r\n    gameMode: \"ARAM\",\r\n    //game started & duration\r\n    gameCreation: new Date(1611790864204).toLocaleDateString(),\r\n    gameDuration: new Date(820543543).toTimeString(),\r\n    //win or lose\r\n    win: \"Win\",\r\n    //Champion Used\r\n    championId: 0,\r\n    championName: \"\",\r\n    champArtURL: \"\",\r\n    //Starter spells like Flash or Heal\r\n    //these are img urls, but i can look for the names if we need them\r\n    spell1Id: \"\",\r\n    spell1Icon: \"\",\r\n    spell2Id: \"\",\r\n    spell2Icon: \"\",\r\n\r\n    //Items used in match\r\n    item0: \"\",\r\n    item1: \"\",\r\n    item2: \"\",\r\n    item3: \"\",\r\n    item4: \"\",\r\n    item5: \"\",\r\n    item6: \"\",\r\n    //KDA\r\n    kills: 0,\r\n    deaths: 0,\r\n    assists: 0,\r\n    kda: \"-1.1\",\r\n    // multikills\r\n    largestMultiKill: \"\",\r\n    champLevel: 15,\r\n    //minion kills & cs\r\n    totalMinionsKilled: 31,\r\n    //optionally we can add Kill participation. calculated by kills plus assists and dividing that by their team's total kills.\r\n    //we can also add all the plalyers in the game\r\n    //this is what i modeled the data off of https://na.op.gg/summoner/userName=doublelift\r\n  };\r\n\r\n  //this object will be used for stats to display\r\n  stats = {\r\n    wins: 0,\r\n    avg_Kills: \"\",\r\n    diff_Champions: 0,\r\n    losses: 0,\r\n    avg_assists: \"\",\r\n    diff_Roles: 0,\r\n    win_Rate: \"\",\r\n    avg_Death: \"\",\r\n    diff_Queues: 0,\r\n  };\r\n\r\n  get summonerDataAvailable() {\r\n    return this.infoAvailable;\r\n  }\r\n\r\n  //this is for the v-for for champ images\r\n  getChampURL(champ: Champion) {\r\n    console.log(\"champ\", champ);\r\n    return champ.url;\r\n  }\r\n\r\n  //This page will use the same launcher info as before\r\n  //TODO: #9 Send User info between desktop components from home menu rather than use overwolf launcher API. will speed things up\r\n  //connect to overwolf API to gain user data\r\n  mounted() {\r\n    let self = this;\r\n\r\n    //register event listeners\r\n    function registerEvents() {\r\n      // general events errors\r\n      // @ts-ignore\r\n      overwolf.games.events.onError.addListener(function (info) {\r\n        console.log(\"Error: \" + JSON.stringify(info));\r\n      });\r\n\r\n      // \"static\" data changed\r\n      // This will also be triggered the first time we register\r\n      // for events and will contain all the current information\r\n      // @ts-ignore\r\n      overwolf.games.launchers.events.onInfoUpdates.addListener(function (\r\n        info\r\n      ) {\r\n        console.log(\"Info UPDATE: \" + JSON.stringify(info));\r\n      });\r\n\r\n      // an event triggered\r\n      // @ts-ignore\r\n      overwolf.games.launchers.events.onNewEvents.addListener(function (info) {\r\n        console.log(\"EVENT FIRED: \" + JSON.stringify(info));\r\n      });\r\n    }\r\n\r\n    function setFeatures() {\r\n      // @ts-ignore\r\n      overwolf.games.launchers.events.setRequiredFeatures(\r\n        10902,\r\n        [\r\n          \"game_flow\",\r\n          \"summoner_info\",\r\n          \"champ_select\",\r\n          \"lcu_info\",\r\n          \"lobby_info\",\r\n          \"end_game\",\r\n          \"game_info\",\r\n        ],\r\n        function (info) {\r\n          if (info.status == \"error\") {\r\n            console.log(\"Could not set required features: \" + info.reason);\r\n            console.log(\"Trying in 2 seconds\");\r\n            window.setTimeout(setFeatures, 2000);\r\n            return;\r\n          }\r\n\r\n          console.log(JSON.stringify(info));\r\n\r\n          // @ts-ignore\r\n          overwolf.games.launchers.events.getInfo(10902, function (info) {\r\n            if (info.status === \"success\") {\r\n              console.log(\"Summoner Info\", info.res.summoner_info.display_name);\r\n\r\n              //filling in data from what the launcher recieves\r\n              self.summoner_info = info.res.summoner_info;\r\n\r\n              //FOR TESTING PURPOSES\r\n              //self.summonerName = self.summoner_info.display_name;\r\n              //   self.profile_icon_id_url =\r\n              //     \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/profileicon/\" +\r\n              //     self.summoner_info.profile_icon_id +\r\n              //     \".png\";\r\n              self.summonerLevel = self.summoner_info.summoner_level;\r\n\r\n              self.infoAvailable = true;\r\n            }\r\n          });\r\n        }\r\n      );\r\n    }\r\n\r\n    function launcherRunning(launcherInfo) {\r\n      if (!launcherInfo) {\r\n        return false;\r\n      }\r\n\r\n      if (!launcherInfo.launchers[0]) {\r\n        return false;\r\n      }\r\n\r\n      // NOTE: we divide by 10 to get the launcher class id without it's sequence number\r\n      if (Math.floor(launcherInfo.launchers[0].id / 10) != 10902) {\r\n        return false;\r\n      }\r\n\r\n      console.log(\"League of Legends launcher running\");\r\n      return true;\r\n    }\r\n\r\n    //create starting listeners\r\n    // @ts-ignore\r\n    overwolf.games.launchers.onLaunched.addListener(function () {\r\n      registerEvents();\r\n      setTimeout(setFeatures, 1000);\r\n      console.log(\"onLaunched fired\");\r\n    });\r\n    // @ts-ignore\r\n    overwolf.games.launchers.getRunningLaunchersInfo(function (res) {\r\n      if (launcherRunning(res)) {\r\n        registerEvents();\r\n        setTimeout(setFeatures, 1000);\r\n      }\r\n      console.log(\"getRunningLaunchersInfo: \" + JSON.stringify(res));\r\n    });\r\n\r\n    // @ts-ignore\r\n    overwolf.games.launchers.onTerminated.addListener(function (res) {\r\n      setTimeout(window.close, 1000);\r\n    });\r\n  }\r\n\r\n  async created() {\r\n    //create variable for this\r\n    let self = this;\r\n    //create url to call for summoner data\r\n    let summonerInfoURL =\r\n      \"https://na1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" +\r\n      self.summonerName +\r\n      \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\";\r\n    //ACCOUNTID >> MATCHLIST >> LAST MATCH DATA\r\n    console.log(\"SummonerName being queried: \", self.summonerName);\r\n\r\n    //Use axios to call API and get summoner info\r\n    //ACCOUNT ID\r\n    await axios\r\n      .get(summonerInfoURL)\r\n      .then(async (summonerInfo) => {\r\n        //Save encrypted summoner data\r\n        console.log(\"Summoner API CALL RESPONCE: \", summonerInfo);\r\n\r\n        self.encypted_summoner_id = summonerInfo.data.id;\r\n        self.encypted_account_id = summonerInfo.data.accountId;\r\n        //MATCHLIST\r\n        //use axios to get a matchlist from RIOT API\r\n        console.log(\r\n          \"Matchlist queried using encrypted summoner Id: \",\r\n          self.encypted_account_id\r\n        );\r\n        let matchInfoURL =\r\n          \"https://na1.api.riotgames.com/lol/match/v4/matchlists/by-account/\" +\r\n          self.encypted_account_id +\r\n          \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\";\r\n\r\n        //Nested Axios Call to recieve data from most recent match and enter it in last match\r\n        await axios\r\n          .get(matchInfoURL)\r\n          .then(async (matchList) => {\r\n            var matchNums = 15;\r\n            if (matchList.data.totalGames < 15) {\r\n              matchNums = matchList.data.totalGames;\r\n            }\r\n            var killcount = 0;\r\n            var deathcount = 0;\r\n            var assistCount = 0;\r\n\r\n            //arrays to count roles, queues, and champions\r\n            var roleCount: string[] = new Array();\r\n            var queueCount: number[] = new Array();\r\n            var champIDs: number[] = new Array();\r\n\r\n            //go through 15 matches to build stats profile.\r\n            for (let imatch = 0; imatch < matchNums; imatch++) {\r\n              //collect individual match data\r\n              //add first match data if no other matches added yet\r\n              //adding roles\r\n              if (roleCount.length === 0) {\r\n                roleCount.push(matchList.data.matches[imatch].role);\r\n                console.log(\r\n                  \"adding first role: \",\r\n                  matchList.data.matches[imatch].role\r\n                );\r\n              } else {\r\n                if (!roleCount.includes(matchList.data.matches[imatch].role)) {\r\n                  roleCount.push(matchList.data.matches[imatch].role);\r\n                  console.log(\r\n                    \"adding new  role\",\r\n                    matchList.data.matches[imatch].role\r\n                  );\r\n                }\r\n              }\r\n\r\n              //adding queues\r\n              if (queueCount.length === 0) {\r\n                console.log(\r\n                  \"adding first queue: \",\r\n                  matchList.data.matches[imatch].queue\r\n                );\r\n                queueCount.push(matchList.data.matches[imatch].queue);\r\n              } else {\r\n                if (\r\n                  !queueCount.includes(matchList.data.matches[imatch].queue)\r\n                ) {\r\n                  queueCount.push(matchList.data.matches[imatch].queue);\r\n                  console.log(\r\n                    \"adding new  queue\",\r\n                    matchList.data.matches[imatch].queue\r\n                  );\r\n                }\r\n              }\r\n\r\n              //adding champ data\r\n              if (champIDs.length === 0) {\r\n                champIDs.push(matchList.data.matches[imatch].champion);\r\n              } else {\r\n                if (\r\n                  !champIDs.includes(matchList.data.matches[imatch].champion)\r\n                ) {\r\n                  champIDs.push(matchList.data.matches[imatch].champion);\r\n                  console.log(\r\n                    \"adding new  champion\",\r\n                    matchList.data.matches[imatch].champion\r\n                  );\r\n                }\r\n              }\r\n\r\n              console.log(\"Axios for match: \", imatch);\r\n              //call API for each match\r\n              await axios\r\n                .get(\r\n                  \"https://na1.api.riotgames.com/lol/match/v4/matches/\" +\r\n                    matchList.data.matches[imatch].gameId +\r\n                    \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\"\r\n                )\r\n                .then(async (mostRecentMatch) => {\r\n                  //assigning most recent match data to display by parsing the json\r\n\r\n                  console.log(mostRecentMatch.data);\r\n                  //setting basic game data for recent match\r\n                  //if i === 0, then this is the most recent match data\r\n                  if (imatch === 0) {\r\n                    self.lastMatch.gameMode = mostRecentMatch.data.gameMode;\r\n                    let date = new Date(mostRecentMatch.data.gameCreation);\r\n\r\n                    self.lastMatch.gameCreation =\r\n                      date.getMonth() +\r\n                      \" / \" +\r\n                      date.getDay() +\r\n                      \" / \" +\r\n                      date.getFullYear();\r\n                    self.lastMatch.gameDuration =\r\n                      new Date(mostRecentMatch.data.gameDuration * 1000)\r\n                        .getMinutes()\r\n                        .toLocaleString() + \" min\";\r\n                  }\r\n\r\n                  /*Search through participant identities to find the correct data*/\r\n                  for (let i = 0; i < 10; i++) {\r\n                    //if correct summoner is found fill data\r\n                    if (\r\n                      self.summonerName ===\r\n                      mostRecentMatch.data.participantIdentities[i].player\r\n                        .summonerName\r\n                    ) {\r\n                      if (\r\n                        mostRecentMatch.data.participants[i].stats.win === true\r\n                      ) {\r\n                        self.stats.wins = self.stats.wins + 1;\r\n                        console.log(\"Self.stats.wins++\", self.stats.wins);\r\n                        if (imatch === 0) {\r\n                          self.lastMatch.win = \"Victory\";\r\n                        }\r\n                      } else {\r\n                        self.stats.losses = self.stats.losses + 1;\r\n                        console.log(\"Self.stats.losses++\", self.stats.losses);\r\n\r\n                        if (imatch === 0) {\r\n                          self.lastMatch.win = \"Defeat\";\r\n                        }\r\n                      }\r\n                      //if last match then save it as image to be displayed at the top\r\n                      if (imatch === 0) {\r\n                        self.lastMatch.championId =\r\n                          mostRecentMatch.data.participants[i].championId;\r\n                        //need to add it/ instatiate array\r\n                      } else {\r\n                        //add champions to champion array to display\r\n                      }\r\n\r\n                      //if match index === 0 store item info from most recent match\r\n                      if (imatch === 0) {\r\n                        //item info\r\n                        //base item url http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/{{ItemNumber}}.png\r\n                        self.lastMatch.item0 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item0 +\r\n                          \".png\";\r\n\r\n                        self.lastMatch.item1 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item1 +\r\n                          \".png\";\r\n                        self.lastMatch.item2 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item2 +\r\n                          \".png\";\r\n                        self.lastMatch.item3 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item3 +\r\n                          \".png\";\r\n                        self.lastMatch.item4 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item4 +\r\n                          \".png\";\r\n                        self.lastMatch.item5 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item5 +\r\n                          \".png\";\r\n                        self.lastMatch.item6 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item6 +\r\n                          \".png\";\r\n                      }\r\n\r\n                      //KDA\r\n                      killcount +=\r\n                        mostRecentMatch.data.participants[i].stats.kills;\r\n                      if (imatch === 0) {\r\n                        self.lastMatch.kills =\r\n                          mostRecentMatch.data.participants[i].stats.kills;\r\n                      }\r\n\r\n                      deathcount +=\r\n                        mostRecentMatch.data.participants[i].stats.deaths;\r\n\r\n                      if (imatch === 0) {\r\n                        self.lastMatch.deaths =\r\n                          mostRecentMatch.data.participants[i].stats.deaths;\r\n                      }\r\n\r\n                      assistCount +=\r\n                        mostRecentMatch.data.participants[i].stats.assists;\r\n\r\n                      if (imatch === 0) {\r\n                        self.lastMatch.assists =\r\n                          mostRecentMatch.data.participants[i].stats.assists;\r\n                      }\r\n\r\n                      //calculate Kill/death ratio\r\n                      //these are only relevant to most recent match\r\n                      if (imatch === 0) {\r\n                        self.lastMatch.kda = (\r\n                          (self.lastMatch.kills + self.lastMatch.assists) /\r\n                          self.lastMatch.deaths\r\n                        ).toFixed(2);\r\n                        //need an if to get the right string here\r\n                        if (\r\n                          mostRecentMatch.data.participants[i].stats\r\n                            .largestMultiKill === 2\r\n                        ) {\r\n                          self.lastMatch.largestMultiKill = \"Double Kill\";\r\n                        } else if (\r\n                          mostRecentMatch.data.participants[i].stats\r\n                            .largestMultiKill === 3\r\n                        ) {\r\n                          self.lastMatch.largestMultiKill = \"Triple Kill\";\r\n                        } else if (\r\n                          mostRecentMatch.data.participants[i].stats\r\n                            .largestMultiKill === 4\r\n                        ) {\r\n                          self.lastMatch.largestMultiKill = \"QuadraKil\";\r\n                        } else if (\r\n                          mostRecentMatch.data.participants[i].stats\r\n                            .largestMultiKill === 5\r\n                        ) {\r\n                          self.lastMatch.largestMultiKill = \"Penta Kill\";\r\n                        } else if (\r\n                          mostRecentMatch.data.participants[i].stats\r\n                            .largestMultiKill === 6\r\n                        ) {\r\n                          self.lastMatch.largestMultiKill = \"Hexa Kill\";\r\n                        } else {\r\n                          self.lastMatch.largestMultiKill = \"\";\r\n                        }\r\n\r\n                        self.lastMatch.champLevel =\r\n                          mostRecentMatch.data.participants[i].stats.champLevel;\r\n\r\n                        self.lastMatch.totalMinionsKilled =\r\n                          mostRecentMatch.data.participants[\r\n                            i\r\n                          ].stats.totalMinionsKilled;\r\n\r\n                        // Find the spells by spell id - using the lol spells package for this.\r\n                        // spell info\r\n                        // http://ddragon.leagueoflegends.com/cdn/11.2.1/img/spell/{{spellname}}.png\r\n                        self.lastMatch.spell1Id =\r\n                          mostRecentMatch.data.participants[i].spell1Id;\r\n                        self.lastMatch.spell2Id =\r\n                          mostRecentMatch.data.participants[i].spell2Id;\r\n\r\n                        for (let i = 0; i < spells.length; i++) {\r\n                          //check for spell 1\r\n                          if (\r\n                            spells[i].key === String(self.lastMatch.spell1Id)\r\n                          ) {\r\n                            self.lastMatch.spell1Icon = spells[i].icon;\r\n                          } //check for spell 2\r\n                          else if (\r\n                            spells[i].key === String(self.lastMatch.spell2Id)\r\n                          ) {\r\n                            self.lastMatch.spell2Icon = spells[i].icon;\r\n                          }\r\n                        }\r\n                      }\r\n\r\n                      break;\r\n                    }\r\n                  }\r\n                })\r\n\r\n                //Below i'm just logging any errors from this axios calls\r\n                .catch((e) => console.log(\"Error: \", e));\r\n            }\r\n\r\n            console.log(\r\n              \"Async thread complete !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"\r\n            );\r\n\r\n            //using champion id's to enter data for array of images\r\n            //get most recent match data\r\n            for (let i = 0; i < champions.length; i++) {\r\n              if (champions[i].key === String(champIDs[0])) {\r\n                (self.lastMatch.championId = champions[i].key),\r\n                  (self.lastMatch.championName = champions[i].id);\r\n                self.lastMatch.champArtURL = champions[i].icon;\r\n\r\n                break;\r\n              }\r\n            }\r\n\r\n            champIDs.forEach((id) => {\r\n              console.log(id);\r\n              for (let i = 0; i < champions.length; i++) {\r\n                //if id and key matches then initialize data and end loop\r\n\r\n                if (champions[i].key === String(id)) {\r\n                  self.recentChampions.push(\r\n                    new Champion(\r\n                      champions[i].key,\r\n                      champions[i].id,\r\n                      champions[i].icon\r\n                    )\r\n                  );\r\n                  break;\r\n                }\r\n              }\r\n            });\r\n\r\n            //after the for loop through match list\r\n            //calculate averages\r\n            self.stats.avg_Kills = (killcount / matchNums).toFixed(2);\r\n            self.stats.avg_Death = (deathcount / matchNums).toFixed(2);\r\n            self.stats.avg_assists = (assistCount / matchNums).toFixed(2);\r\n            self.stats.diff_Roles = roleCount.length;\r\n            self.stats.diff_Queues = queueCount.length;\r\n            self.stats.diff_Champions = champIDs.length;\r\n            self.stats.win_Rate =\r\n              ((self.stats.wins / matchNums) * 100).toFixed(0) + \"%\";\r\n          })\r\n\r\n          .catch((e) => console.log(\"Error: \", e));\r\n      })\r\n      .catch((e) => console.log(\"Error: \", e));\r\n  }\r\n\r\n  // Check if the items exist before rendering them\r\n  get item0exists() {\r\n    return (\r\n      this.lastMatch.item0 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item1exists() {\r\n    return (\r\n      this.lastMatch.item1 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item2exists() {\r\n    return (\r\n      this.lastMatch.item2 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item3exists() {\r\n    return (\r\n      this.lastMatch.item3 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item4exists() {\r\n    return (\r\n      this.lastMatch.item4 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item5exists() {\r\n    return (\r\n      this.lastMatch.item5 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item6exists() {\r\n    return (\r\n      this.lastMatch.item6 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n}\r\n</script>"]}]}