{"remainingRequest":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue","mtime":1614291515365},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoNCmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAidnVlLXByb3BlcnR5LWRlY29yYXRvciI7DQoNCi8vYXJyYXkgb2YgdmlkZW8gYWRkcmVzc2VzDQpjbGFzcyBWaWRlb0ZvbGRlcnsNCiAgLy9kYXRlIG1heWJlPyBjYW4gYmUgcGFyc2VkIGZyb20gdGhlIGZvbGRlciBuYW1lIGFuZCBkaXNwbGF5ZWQNCiAgcHVibGljIGZvbGRlclBhdGg6c3RyaW5nOw0KICBwdWJsaWMgdmlkZW9MaXN0IDogQXJyYXk8c3RyaW5nPiA9IFtdOw0KDQogIGNvbnN0cnVjdG9yKCl7DQogICAgdGhpcy5mb2xkZXJQYXRoID0gIiI7DQogIH0NCg0KICBzZXRGb2xkZXIobmFtZTpzdHJpbmcpew0KICAgIHRoaXMuZm9sZGVyUGF0aCA9IG5hbWU7DQogIH0NCg0KICBhZGRWaWRlb1RvRm9sZGVyKHZpZGVvVVJMOnN0cmluZyl7DQogICAgdGhpcy52aWRlb0xpc3QucHVzaCh2aWRlb1VSTCk7DQogIH0NCn0NCg0KQENvbXBvbmVudA0KZXhwb3J0IGRlZmF1bHQgY2xhc3MgSGlnaGxpZ2h0cyBleHRlbmRzIFZ1ZSB7DQoNCiAgdmlkZW9MaXN0IDogQXJyYXk8VmlkZW9Gb2xkZXI+ID0gW107DQoNCg0KICBtb3VudGVkKCkgew0KICAgIGxldCBzZWxmID0gdGhpczsNCiAgICAvLyAvL0B0cy1pZ25vcmUNCiAgICAvLyAvL2RlbGV0ZSB2aWRlb3MgaWYgbW9yZSB0aGFuIGEgZ2lnYWJ5dGUgDQogICAgLy8gTkVFRCBUTyBSVU4gVEhJUyBJTiBBIFdBWSBJVCBIQVBQRU5TIEJFRk9SRSBHRVRWSURFT1MNCiAgICAvLyBvdmVyd29sZi5tZWRpYS52aWRlb3MuZGVsZXRlT2xkVmlkZW9zKDEsIGUgPT4gew0KICAgIC8vICAgY29uc29sZS5sb2coImRlbGV0ZWQgdmlkZW9zIiwgZSkNCiAgICAvLyB9KQ0KICAgIC8vZmV0Y2ggcmVjZW50IHZpZGVvcw0KICAgIC8vQHRzLWlnbm9yZQ0KICAgIG92ZXJ3b2xmLm1lZGlhLnZpZGVvcy5nZXRWaWRlb3MoZnVuY3Rpb24gKHJlcykgew0KICAgICAgY29uc29sZS5sb2coInJlc3VsdCBmcm9tIEdldCBWaWRvZXMiLCByZXMpOw0KICAgICAgDQogICAgICAvL3BhcnNlIHBvc3NpYmxlIHZpZGVvcw0KICAgICAgLy9pZiBzdWNjZXNzZnVsbHkgcmVjaWV2ZWQNCiAgICAgIGlmKHJlcy5zdGF0dXMgPT09ICJzdWNjZXNzIil7DQogICAgICAgIC8vc3RhcnQgZ2F0aGVyaW5nIHZpZGVvIHVybHMgYnkgbG9vcGluZyB0aHJvdWdoIHRoZW0NCiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHJlcy52aWRlb3MubGVuZ3RoOyBpbmRleCsrKSB7DQogICAgICAgICAgY29uc3QgZWxlbWVudCA9IHJlcy52aWRlb3NbaW5kZXhdOw0KICAgICAgICAgIA0KICAgICAgICAgIC8vZ2V0IGZvbGRlciBwYXRoDQogICAgICAgICAgbGV0IHBhdGggPSBlbGVtZW50LnN1YnN0cmluZygwLDEwMik7DQoNCiAgICAgICAgICAvL2NoZWNrIGlmIGFycmF5IG9mIGZvbGRlcnMgaXMgZW1wdHkNCiAgICAgICAgICBpZiggc2VsZi52aWRlb0xpc3QubGVuZ3RoID09PSAwKXsNCiAgICAgICAgICAgIC8vaWYgaXQgaXMgY3JlYXRlIGZpcnN0IGVsZW1lbnQNCiAgICAgICAgICAgIGxldCBuZXdGb2xkZXIgPSBuZXcgVmlkZW9Gb2xkZXIoKTsNCg0KICAgICAgICAgICAgLy9naXZlIGl0IGFuIGFkZHJlc3MNCiAgICAgICAgICAgIG5ld0ZvbGRlci5zZXRGb2xkZXIocGF0aCk7DQoNCiAgICAgICAgICAgIC8vYWRkIHZpZGVvIHRvIGFycmF5DQogICAgICAgICAgICBuZXdGb2xkZXIuYWRkVmlkZW9Ub0ZvbGRlcihlbGVtZW50KTsNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgLy9hZGQgZm9sZGVyIHRvIGFycmF5IG9mIGZvbGRlcnMNCiAgICAgICAgICAgIHNlbGYudmlkZW9MaXN0LnB1c2gobmV3Rm9sZGVyKTsNCiAgICAgICAgICB9IGVsc2Ugew0KICAgICAgICAgICAgLy9pZiBpdHMgbm90IGVtcHR5IHRoZW4gc2VlIGlmIGl0IG1hdGNoZXMgdGhlIGZvbGRlciBwYXRoIG9mIHRoZSBmb2xkZXIgYXQgdGhlIGVuZA0KICAgICAgICAgICAgaWYoc2VsZi52aWRlb0xpc3Rbc2VsZi52aWRlb0xpc3QubGVuZ3RoIC0gMV0uZm9sZGVyUGF0aCA9PT0gcGF0aCl7DQogICAgICAgICAgICAgIC8vaWYgaXQgZG9lcyBtYXRjaCB0aGVuIGFkZCBpdCB0byB0aGUgYXJyYXkgb2YgdmlkZW8gdXJscyBmb3IgdGhpcyBmb2xkZXINCiAgICAgICAgICAgICAgc2VsZi52aWRlb0xpc3Rbc2VsZi52aWRlb0xpc3QubGVuZ3RoIC0xXS5hZGRWaWRlb1RvRm9sZGVyKGVsZW1lbnQpOw0KDQogICAgICAgICAgICB9ZWxzZXsNCiAgICAgICAgICAgICAgLy9pZiBpdCBkb2VzIG5vdCBtYXRjaCB0aGUgZm9sZGVyIHBhdGggdGhlbiB3ZSBoYXZlIGEgbmV3IGZvbGRlcg0KICAgICAgICAgICAgICAvL3NvIHdlIGNyZWF0ZSBhIG5ldyBmb2xkZXIgb2JqZWN0LCB3aXRoIHRoaXMgbmV3IHBhdGggYW5kIGFkZCB0aGUgdXJsIHRvIHRoZSBhcnJheQ0KDQogICAgICAgICAgICAgICAgbGV0IG5ld0ZvbGRlciA9IG5ldyBWaWRlb0ZvbGRlcigpOw0KDQogICAgICAgICAgICAgICAgLy9naXZlIGl0IGFuIGFkZHJlc3MNCiAgICAgICAgICAgICAgICBuZXdGb2xkZXIuc2V0Rm9sZGVyKHBhdGgpOw0KDQogICAgICAgICAgICAgICAgLy9hZGQgdmlkZW8gdG8gYXJyYXkNCiAgICAgICAgICAgICAgICBuZXdGb2xkZXIuYWRkVmlkZW9Ub0ZvbGRlcihlbGVtZW50KTsNCiAgICAgICAgICAgICAgICANCiAgICAgICAgICAgICAgICAvL2FkZCBmb2xkZXIgdG8gYXJyYXkgb2YgZm9sZGVycw0KICAgICAgICAgICAgICAgIHNlbGYudmlkZW9MaXN0LnB1c2gobmV3Rm9sZGVyKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICB9DQogICAgDQogICAgICAgIH0NCg0KDQoNCg0KDQoNCiAgICAgIH0gZWxzZSB7DQogICAgICAgIGNvbnNvbGUubG9nKCJFcnJvciBnZXR0aW5nIHZpZGVvcyIpOw0KICAgICAgfQ0KDQogICAgICAgIGNvbnNvbGUubG9nKCJQYXJzZWQgVmlkb2VzOiIsIHNlbGYudmlkZW9MaXN0KQ0KDQogICAgfSk7DQoNCiAgICANCg0KDQogIH0NCg0KICBjcmVhdGVkKCkgew0KICAgIC8vIHdpbmRvdyByZXNpemUNCiAgICBsZXQgV2luZG93SWQ7DQogICAgLy9AdHMtaWdub3JlDQogICAgb3ZlcndvbGYud2luZG93cy5nZXRDdXJyZW50V2luZG93KGZ1bmN0aW9uIChyZXMpIHsNCiAgICAgIFdpbmRvd0lkID0gcmVzLndpbmRvdy5pZDsNCiAgICAgIGNvbnNvbGUubG9nKCJXaW5kb3cgaWQ6ICIsIFdpbmRvd0lkKTsNCiAgICAgIGxldCBzaXplU2V0dGluZ3MgPSB7DQogICAgICAgIHdpbmRvd19pZDogV2luZG93SWQsDQogICAgICAgIHdpZHRoOiAxNzAwLA0KICAgICAgICBoZWlnaHQ6IDgwMCwNCiAgICAgICAgYXV0b19kcGlfcmVzaXplOiB0cnVlLCAvL3JlbGV2YW50IG9ubHkgZm9yIG5hdGl2ZSB3aW5kb3dzDQogICAgICB9Ow0KICAgICAgLy9AdHMtaWdub3JlDQogICAgICBvdmVyd29sZi53aW5kb3dzLmNoYW5nZVNpemUoc2l6ZVNldHRpbmdzLCBlID0+ew0KICAgICAgICBjb25zb2xlLmxvZygiY2hhbmdlIHNpemUgY2FsbGJhY2s6ICIsICBlKQ0KICAgICAgfSk7DQogICAgfSk7DQogIH0NCn0NCg=="},{"version":3,"sources":["Highlights.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;AAOA;AACA;AACA;;AAEA;;AAEA;;;;;AAKA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Highlights.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"home-container\">\r\n    <h1>Highlights</h1>\r\n    <video height=\"500px\" width=\"600px\" controls>\r\n      <source \r\n      type=\"video/mp4\" \r\n      src=\"overwolf://media/videos/LoL+Companion+App/League+of+Legends/League+of+Legends_02-09-2021_23-19-43-959/League+of+Legends+02-09-2021+23-21-53-793.mp4\" />\r\n    </video>\r\n  </div>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\n\r\n//array of video addresses\r\nclass VideoFolder{\r\n  //date maybe? can be parsed from the folder name and displayed\r\n  public folderPath:string;\r\n  public videoList : Array<string> = [];\r\n\r\n  constructor(){\r\n    this.folderPath = \"\";\r\n  }\r\n\r\n  setFolder(name:string){\r\n    this.folderPath = name;\r\n  }\r\n\r\n  addVideoToFolder(videoURL:string){\r\n    this.videoList.push(videoURL);\r\n  }\r\n}\r\n\r\n@Component\r\nexport default class Highlights extends Vue {\r\n\r\n  videoList : Array<VideoFolder> = [];\r\n\r\n\r\n  mounted() {\r\n    let self = this;\r\n    // //@ts-ignore\r\n    // //delete videos if more than a gigabyte \r\n    // NEED TO RUN THIS IN A WAY IT HAPPENS BEFORE GETVIDEOS\r\n    // overwolf.media.videos.deleteOldVideos(1, e => {\r\n    //   console.log(\"deleted videos\", e)\r\n    // })\r\n    //fetch recent videos\r\n    //@ts-ignore\r\n    overwolf.media.videos.getVideos(function (res) {\r\n      console.log(\"result from Get Vidoes\", res);\r\n      \r\n      //parse possible videos\r\n      //if successfully recieved\r\n      if(res.status === \"success\"){\r\n        //start gathering video urls by looping through them\r\n        for (let index = 0; index < res.videos.length; index++) {\r\n          const element = res.videos[index];\r\n          \r\n          //get folder path\r\n          let path = element.substring(0,102);\r\n\r\n          //check if array of folders is empty\r\n          if( self.videoList.length === 0){\r\n            //if it is create first element\r\n            let newFolder = new VideoFolder();\r\n\r\n            //give it an address\r\n            newFolder.setFolder(path);\r\n\r\n            //add video to array\r\n            newFolder.addVideoToFolder(element);\r\n            \r\n            //add folder to array of folders\r\n            self.videoList.push(newFolder);\r\n          } else {\r\n            //if its not empty then see if it matches the folder path of the folder at the end\r\n            if(self.videoList[self.videoList.length - 1].folderPath === path){\r\n              //if it does match then add it to the array of video urls for this folder\r\n              self.videoList[self.videoList.length -1].addVideoToFolder(element);\r\n\r\n            }else{\r\n              //if it does not match the folder path then we have a new folder\r\n              //so we create a new folder object, with this new path and add the url to the array\r\n\r\n                let newFolder = new VideoFolder();\r\n\r\n                //give it an address\r\n                newFolder.setFolder(path);\r\n\r\n                //add video to array\r\n                newFolder.addVideoToFolder(element);\r\n                \r\n                //add folder to array of folders\r\n                self.videoList.push(newFolder);\r\n            }\r\n          }\r\n    \r\n        }\r\n\r\n\r\n\r\n\r\n\r\n\r\n      } else {\r\n        console.log(\"Error getting videos\");\r\n      }\r\n\r\n        console.log(\"Parsed Vidoes:\", self.videoList)\r\n\r\n    });\r\n\r\n    \r\n\r\n\r\n  }\r\n\r\n  created() {\r\n    // window resize\r\n    let WindowId;\r\n    //@ts-ignore\r\n    overwolf.windows.getCurrentWindow(function (res) {\r\n      WindowId = res.window.id;\r\n      console.log(\"Window id: \", WindowId);\r\n      let sizeSettings = {\r\n        window_id: WindowId,\r\n        width: 1700,\r\n        height: 800,\r\n        auto_dpi_resize: true, //relevant only for native windows\r\n      };\r\n      //@ts-ignore\r\n      overwolf.windows.changeSize(sizeSettings, e =>{\r\n        console.log(\"change size callback: \",  e)\r\n      });\r\n    });\r\n  }\r\n}\r\n</script>"]}]}