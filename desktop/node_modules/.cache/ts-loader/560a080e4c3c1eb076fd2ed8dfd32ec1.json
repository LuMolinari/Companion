{"remainingRequest":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js??ref--13-3!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue","mtime":1614297709884},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1610245779138},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9pbmhlcml0cyBmcm9tICJDOi9Vc2Vycy9Nb2xpbi9Db21wYW5pb24vZGVza3RvcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vaW5oZXJpdHMiOwppbXBvcnQgX2NyZWF0ZVN1cGVyIGZyb20gIkM6L1VzZXJzL01vbGluL0NvbXBhbmlvbi9kZXNrdG9wL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVTdXBlciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzovVXNlcnMvTW9saW4vQ29tcGFuaW9uL2Rlc2t0b3Avbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NsYXNzQ2FsbENoZWNrIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOi9Vc2Vycy9Nb2xpbi9Db21wYW5pb24vZGVza3RvcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSAidHNsaWIiOwppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSB9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOyAvL2FycmF5IG9mIHZpZGVvIGFkZHJlc3NlcwoKdmFyIFZpZGVvRm9sZGVyID0gLyojX19QVVJFX18qL2Z1bmN0aW9uICgpIHsKICBmdW5jdGlvbiBWaWRlb0ZvbGRlcigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBWaWRlb0ZvbGRlcik7CgogICAgdGhpcy52aWRlb0xpc3QgPSBbXTsKICAgIHRoaXMuZm9sZGVyUGF0aCA9ICIiOwogIH0KCiAgX2NyZWF0ZUNsYXNzKFZpZGVvRm9sZGVyLCBbewogICAga2V5OiAic2V0Rm9sZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRGb2xkZXIobmFtZSkgewogICAgICB0aGlzLmZvbGRlclBhdGggPSBuYW1lOwogICAgfQogIH0sIHsKICAgIGtleTogImFkZFZpZGVvVG9Gb2xkZXIiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGFkZFZpZGVvVG9Gb2xkZXIodmlkZW9VUkwpIHsKICAgICAgdGhpcy52aWRlb0xpc3QucHVzaCh2aWRlb1VSTCk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gVmlkZW9Gb2xkZXI7Cn0oKTsKCnZhciBIaWdobGlnaHRzID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKEhpZ2hsaWdodHMsIF9WdWUpOwoKICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEhpZ2hsaWdodHMpOwoKICBmdW5jdGlvbiBIaWdobGlnaHRzKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIaWdobGlnaHRzKTsKCiAgICBfdGhpcyA9IF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgX3RoaXMudmlkZW9MaXN0ID0gW107CiAgICBfdGhpcy5jdXJyZW50X1ZpZGVvID0gIm92ZXJ3b2xmOi8vbWVkaWEvdmlkZW9zL0xvTCtDb21wYW5pb24rQXBwL0xlYWd1ZStvZitMZWdlbmRzL0xlYWd1ZStvZitMZWdlbmRzXzAyLTA5LTIwMjFfMjMtMTktNDMtOTU5L0xlYWd1ZStvZitMZWdlbmRzKzAyLTA5LTIwMjErMjMtMjEtNTMtNzkzLm1wNCI7CiAgICByZXR1cm4gX3RoaXM7CiAgfQoKICBfY3JlYXRlQ2xhc3MoSGlnaGxpZ2h0cywgW3sKICAgIGtleTogIm1vdW50ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAgIHZhciBzZWxmID0gdGhpczsgLy8gLy9AdHMtaWdub3JlCiAgICAgIC8vIC8vZGVsZXRlIHZpZGVvcyBpZiBtb3JlIHRoYW4gYSBnaWdhYnl0ZQogICAgICAvLyBORUVEIFRPIFJVTiBUSElTIElOIEEgV0FZIElUIEhBUFBFTlMgQkVGT1JFIEdFVFZJREVPUwogICAgICAvLyBvdmVyd29sZi5tZWRpYS52aWRlb3MuZGVsZXRlT2xkVmlkZW9zKDEsIGUgPT4gewogICAgICAvLyAgIGNvbnNvbGUubG9nKCJkZWxldGVkIHZpZGVvcyIsIGUpCiAgICAgIC8vIH0pCiAgICAgIC8vZmV0Y2ggcmVjZW50IHZpZGVvcwoKICAgICAgY29uc29sZS5sb2coImN1cnJlbnQgdmlkZW86ICIsIHNlbGYuY3VycmVudF9WaWRlbyk7IC8vQHRzLWlnbm9yZScKCiAgICAgIG92ZXJ3b2xmLm1lZGlhLnZpZGVvcy5nZXRWaWRlb3MoZnVuY3Rpb24gKHJlcykgewogICAgICAgIGNvbnNvbGUubG9nKCJyZXN1bHQgZnJvbSBHZXQgVmlkb2VzIiwgcmVzKTsgLy9wYXJzZSBwb3NzaWJsZSB2aWRlb3MKICAgICAgICAvL2lmIHN1Y2Nlc3NmdWxseSByZWNpZXZlZAoKICAgICAgICBpZiAocmVzLnN0YXR1cyA9PT0gInN1Y2Nlc3MiKSB7CiAgICAgICAgICAvL3N0YXJ0IGdhdGhlcmluZyB2aWRlbyB1cmxzIGJ5IGxvb3BpbmcgdGhyb3VnaCB0aGVtCiAgICAgICAgICBmb3IgKHZhciBpbmRleCA9IDA7IGluZGV4IDwgcmVzLnZpZGVvcy5sZW5ndGg7IGluZGV4KyspIHsKICAgICAgICAgICAgdmFyIGVsZW1lbnQgPSByZXMudmlkZW9zW2luZGV4XTsgLy9nZXQgZm9sZGVyIHBhdGgKCiAgICAgICAgICAgIHZhciBwYXRoID0gZWxlbWVudC5zdWJzdHJpbmcoMCwgMTAyKTsgLy9jaGVjayBpZiBhcnJheSBvZiBmb2xkZXJzIGlzIGVtcHR5CgogICAgICAgICAgICBpZiAoc2VsZi52aWRlb0xpc3QubGVuZ3RoID09PSAwKSB7CiAgICAgICAgICAgICAgLy9pZiBpdCBpcyBjcmVhdGUgZmlyc3QgZWxlbWVudAogICAgICAgICAgICAgIHZhciBuZXdGb2xkZXIgPSBuZXcgVmlkZW9Gb2xkZXIoKTsgLy9naXZlIGl0IGFuIGFkZHJlc3MKCiAgICAgICAgICAgICAgbmV3Rm9sZGVyLnNldEZvbGRlcihwYXRoKTsgLy9hZGQgdmlkZW8gdG8gYXJyYXkKCiAgICAgICAgICAgICAgbmV3Rm9sZGVyLmFkZFZpZGVvVG9Gb2xkZXIoZWxlbWVudCk7IC8vIG1ha2UgZmlzdCB2aWRlbyB0aGUgbW9zdCByZWNlbnQgdmlkZW8KCiAgICAgICAgICAgICAgc2VsZi5jdXJyZW50X1ZpZGVvID0gZWxlbWVudDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiYWN0dWFsIGN1cnIgdmlkZW86ICIsIHNlbGYuY3VycmVudF9WaWRlbyk7IC8vYWRkIGZvbGRlciB0byBhcnJheSBvZiBmb2xkZXJzCgogICAgICAgICAgICAgIHNlbGYudmlkZW9MaXN0LnB1c2gobmV3Rm9sZGVyKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAvL2lmIGl0cyBub3QgZW1wdHkgdGhlbiBzZWUgaWYgaXQgbWF0Y2hlcyB0aGUgZm9sZGVyIHBhdGggb2YgdGhlIGZvbGRlciBhdCB0aGUgZW5kCiAgICAgICAgICAgICAgaWYgKHNlbGYudmlkZW9MaXN0W3NlbGYudmlkZW9MaXN0Lmxlbmd0aCAtIDFdLmZvbGRlclBhdGggPT09IHBhdGgpIHsKICAgICAgICAgICAgICAgIC8vaWYgaXQgZG9lcyBtYXRjaCB0aGVuIGFkZCBpdCB0byB0aGUgYXJyYXkgb2YgdmlkZW8gdXJscyBmb3IgdGhpcyBmb2xkZXIKICAgICAgICAgICAgICAgIHNlbGYudmlkZW9MaXN0W3NlbGYudmlkZW9MaXN0Lmxlbmd0aCAtIDFdLmFkZFZpZGVvVG9Gb2xkZXIoZWxlbWVudCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIC8vaWYgaXQgZG9lcyBub3QgbWF0Y2ggdGhlIGZvbGRlciBwYXRoIHRoZW4gd2UgaGF2ZSBhIG5ldyBmb2xkZXIKICAgICAgICAgICAgICAgIC8vc28gd2UgY3JlYXRlIGEgbmV3IGZvbGRlciBvYmplY3QsIHdpdGggdGhpcyBuZXcgcGF0aCBhbmQgYWRkIHRoZSB1cmwgdG8gdGhlIGFycmF5CiAgICAgICAgICAgICAgICB2YXIgX25ld0ZvbGRlciA9IG5ldyBWaWRlb0ZvbGRlcigpOyAvL2dpdmUgaXQgYW4gYWRkcmVzcwoKCiAgICAgICAgICAgICAgICBfbmV3Rm9sZGVyLnNldEZvbGRlcihwYXRoKTsgLy9hZGQgdmlkZW8gdG8gYXJyYXkKCgogICAgICAgICAgICAgICAgX25ld0ZvbGRlci5hZGRWaWRlb1RvRm9sZGVyKGVsZW1lbnQpOyAvL2FkZCBmb2xkZXIgdG8gYXJyYXkgb2YgZm9sZGVycwoKCiAgICAgICAgICAgICAgICBzZWxmLnZpZGVvTGlzdC5wdXNoKF9uZXdGb2xkZXIpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBjb25zb2xlLmxvZygiRXJyb3IgZ2V0dGluZyB2aWRlb3MiKTsKICAgICAgICB9CgogICAgICAgIGNvbnNvbGUubG9nKCJQYXJzZWQgVmlkb2VzOiIsIHNlbGYudmlkZW9MaXN0KTsKICAgICAgfSk7CiAgICB9CiAgfSwgewogICAga2V5OiAiY3JlYXRlZCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgICAgLy8gd2luZG93IHJlc2l6ZQogICAgICB2YXIgV2luZG93SWQ7IC8vQHRzLWlnbm9yZQoKICAgICAgb3ZlcndvbGYud2luZG93cy5nZXRDdXJyZW50V2luZG93KGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICBXaW5kb3dJZCA9IHJlcy53aW5kb3cuaWQ7CiAgICAgICAgY29uc29sZS5sb2coIldpbmRvdyBpZDogIiwgV2luZG93SWQpOwogICAgICAgIHZhciBzaXplU2V0dGluZ3MgPSB7CiAgICAgICAgICB3aW5kb3dfaWQ6IFdpbmRvd0lkLAogICAgICAgICAgd2lkdGg6IDE2MDAsCiAgICAgICAgICBoZWlnaHQ6IDgwMCwKICAgICAgICAgIGF1dG9fZHBpX3Jlc2l6ZTogdHJ1ZQogICAgICAgIH07IC8vQHRzLWlnbm9yZQoKICAgICAgICBvdmVyd29sZi53aW5kb3dzLmNoYW5nZVNpemUoc2l6ZVNldHRpbmdzLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgY29uc29sZS5sb2coImNoYW5nZSBzaXplIGNhbGxiYWNrOiAiLCBlKTsKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfV0pOwoKICByZXR1cm4gSGlnaGxpZ2h0czsKfShWdWUpOwoKSGlnaGxpZ2h0cyA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudF0sIEhpZ2hsaWdodHMpOwpleHBvcnQgZGVmYXVsdCBIaWdobGlnaHRzOw=="},{"version":3,"sources":["C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\n\r\n//array of video addresses\r\nclass VideoFolder {\r\n  //date maybe? can be parsed from the folder name and displayed\r\n  public folderPath: string;\r\n  public videoList: Array<string> = [];\r\n\r\n  constructor() {\r\n    this.folderPath = \"\";\r\n  }\r\n\r\n  setFolder(name: string) {\r\n    this.folderPath = name;\r\n  }\r\n\r\n  addVideoToFolder(videoURL: string) {\r\n    this.videoList.push(videoURL);\r\n  }\r\n}\r\n\r\n@Component\r\nexport default class Highlights extends Vue {\r\n  videoList: Array<VideoFolder> = [];\r\n  current_Video =\r\n    \"overwolf://media/videos/LoL+Companion+App/League+of+Legends/League+of+Legends_02-09-2021_23-19-43-959/League+of+Legends+02-09-2021+23-21-53-793.mp4\";\r\n\r\n  mounted() {\r\n    let self = this;\r\n    // //@ts-ignore\r\n    // //delete videos if more than a gigabyte\r\n    // NEED TO RUN THIS IN A WAY IT HAPPENS BEFORE GETVIDEOS\r\n    // overwolf.media.videos.deleteOldVideos(1, e => {\r\n    //   console.log(\"deleted videos\", e)\r\n    // })\r\n    //fetch recent videos\r\n\r\n    console.log(\"current video: \", self.current_Video);\r\n    //@ts-ignore'\r\n\r\n    overwolf.media.videos.getVideos(function (res) {\r\n      console.log(\"result from Get Vidoes\", res);\r\n\r\n      //parse possible videos\r\n      //if successfully recieved\r\n      if (res.status === \"success\") {\r\n        //start gathering video urls by looping through them\r\n        for (let index = 0; index < res.videos.length; index++) {\r\n          const element = res.videos[index];\r\n\r\n          //get folder path\r\n          let path = element.substring(0, 102);\r\n\r\n          //check if array of folders is empty\r\n          if (self.videoList.length === 0) {\r\n            //if it is create first element\r\n            let newFolder = new VideoFolder();\r\n\r\n            //give it an address\r\n            newFolder.setFolder(path);\r\n\r\n            //add video to array\r\n            newFolder.addVideoToFolder(element);\r\n\r\n            // make fist video the most recent video\r\n            self.current_Video = element;\r\n            console.log(\"actual curr video: \", self.current_Video);\r\n            //add folder to array of folders\r\n            self.videoList.push(newFolder);\r\n          } else {\r\n            //if its not empty then see if it matches the folder path of the folder at the end\r\n            if (self.videoList[self.videoList.length - 1].folderPath === path) {\r\n              //if it does match then add it to the array of video urls for this folder\r\n              self.videoList[self.videoList.length - 1].addVideoToFolder(\r\n                element\r\n              );\r\n            } else {\r\n              //if it does not match the folder path then we have a new folder\r\n              //so we create a new folder object, with this new path and add the url to the array\r\n\r\n              let newFolder = new VideoFolder();\r\n\r\n              //give it an address\r\n              newFolder.setFolder(path);\r\n\r\n              //add video to array\r\n              newFolder.addVideoToFolder(element);\r\n\r\n              //add folder to array of folders\r\n              self.videoList.push(newFolder);\r\n            }\r\n          }\r\n        }\r\n      } else {\r\n        console.log(\"Error getting videos\");\r\n      }\r\n\r\n      console.log(\"Parsed Vidoes:\", self.videoList);\r\n    });\r\n  }\r\n\r\n  created() {\r\n    // window resize\r\n    let WindowId;\r\n    //@ts-ignore\r\n    overwolf.windows.getCurrentWindow(function (res) {\r\n      WindowId = res.window.id;\r\n      console.log(\"Window id: \", WindowId);\r\n      let sizeSettings = {\r\n        window_id: WindowId,\r\n        width: 1600,\r\n        height: 800,\r\n        auto_dpi_resize: true, //relevant only for native windows\r\n      };\r\n      //@ts-ignore\r\n      overwolf.windows.changeSize(sizeSettings, (e) => {\r\n        console.log(\"change size callback: \", e);\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}]}