{"remainingRequest":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js??ref--13-3!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue","mtime":1616440149772},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1610245779138},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\nimport Dexie from \"dexie\";\r\nimport axios from \"axios\";\r\n// @ts-ignore\r\nimport champions from \"lol-champions\";\r\n\r\n//this class represents a video inside a folder\r\nclass Video {\r\n  public videoAddress: string;\r\n  public videoStartTime: string;\r\n  public duration: string;\r\n  public highlightType: string;\r\n  public thumbnail_url: string;\r\n}\r\n\r\n//this class represents a folder\r\nclass VideoFolder {\r\n  //if we query match id with riot we can probabyly get matchtype and champion used\r\n  public gameMode: string; //regular/aram/practice\r\n  public championURL: string;\r\n  public gameResult: string; //regular/aram/practice\r\n\r\n  public gameType: string; //regular/aram/practice\r\n  public champion: string; //url of champion img\r\n\r\n  //below is received from database\r\n  public date: string;\r\n  public time: string;\r\n  public videoList: Array<Video> = [];\r\n\r\n  setDate(date: string) {\r\n    this.date = date;\r\n  }\r\n\r\n  setTime(time: string) {\r\n    this.time = time;\r\n  }\r\n\r\n  addVideoToFolder(video: Video) {\r\n    this.videoList.push(video);\r\n  }\r\n}\r\n\r\n@Component\r\nexport default class Highlights extends Vue {\r\n  videoList: Array<VideoFolder> = [];\r\n  current_Video = \"\";\r\n\r\n  setVideo(newVideo: string) {\r\n    this.current_Video = newVideo;\r\n  }\r\n\r\n  checkNextVideo(video: string)\r\n  {\r\n    var flag = false;\r\n    // check index of video passed\r\n    for (var i = 0; i < this.videoList.length; i++) {\r\n      for (var j = 0; j < this.videoList[i].videoList.length; j++) {\r\n        if (this.videoList[i].videoList[j].videoAddress == video)\r\n        {\r\n          // Make sure this isn't the last video\r\n          if (j != (this.videoList[i].videoList.length - 1))\r\n          {\r\n            // there is a next video\r\n            flag = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  checkPreviousVideo(video: string)\r\n  {\r\n    var flag = false;\r\n    // search for the current video to get\r\n    for (var i = 0; i < this.videoList.length; i++) {\r\n      for (var j = (this.videoList[i].videoList.length - 1); j > 0; j--) {\r\n        if (this.videoList[i].videoList[j].videoAddress == video)\r\n        {\r\n          // Make sure this isn't the first video\r\n          if (j != 0)\r\n          {\r\n            // there is a previous video\r\n            flag = true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return flag;\r\n  }\r\n\r\n  getNextVideo(video: string) {\r\n    // check index of video passed\r\n    for (var i = 0; i < this.videoList.length; i++) {\r\n      for (var j = 0; j < this.videoList[i].videoList.length; j++) {\r\n        if (this.videoList[i].videoList[j].videoAddress == video)\r\n        {\r\n          // Make sure this isn't the last video\r\n          if (j != (this.videoList[i].videoList.length - 1))\r\n          {\r\n            // call setVideo with this next video\r\n            this.setVideo(this.videoList[i].videoList[j+1].videoAddress);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getPreviousVideo(video: string) {\r\n    // search for the current video to get\r\n    for (var i = 0; i < this.videoList.length; i++) {\r\n      for (var j = (this.videoList[i].videoList.length - 1); j > 0; j--) {\r\n        if (this.videoList[i].videoList[j].videoAddress == video)\r\n        {\r\n          // Make sure this isn't the first video\r\n          if (j != 0)\r\n          {\r\n            // call setVideo with this previous video\r\n            this.setVideo(this.videoList[i].videoList[j-1].videoAddress);\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async mounted() {\r\n    let self = this;\r\n    let setFirstVideo = false;\r\n    //fetch recent videos\r\n\r\n    //open local database\r\n    var localDB = new Dexie(\"highlightsDB\");\r\n    localDB.version(1).stores({\r\n      matches: \"match_id, match_start_time\",\r\n      videos:\r\n        \"media_url, match_id, thumbnail_url, highlight_start_time, duration, hightType\",\r\n    });\r\n\r\n    //get last 5 most recent games\r\n    const recentGames = await localDB\r\n      .table(\"matches\")\r\n      .orderBy(\"match_start_time\")\r\n      .reverse()\r\n      .limit(5)\r\n      .toArray()\r\n      .catch((e) => console.log(e));\r\n\r\n    //get all other games\r\n    const olderGames = await localDB\r\n      .table(\"matches\")\r\n      .orderBy(\"match_start_time\")\r\n      .reverse()\r\n      .offset(5)\r\n      .toArray()\r\n      .catch((e) => console.log(e));\r\n\r\n    //display results\r\n    console.log(\"array of recent games: \", recentGames);\r\n    console.log(\"array of older games: \", olderGames);\r\n\r\n    //loop through last 5 games and use game id's to pull data\r\n    //@ts-ignore\r\n    for (let index = 0; index < recentGames.length; index++) {\r\n      let match_date = new Date(recentGames[index].match_start_time);\r\n\r\n      //create new match\r\n      let tempFolder = new VideoFolder();\r\n      console.log(\r\n        \"Calling: \",\r\n        \"https://na1.api.riotgames.com/lol/match/v4/matches/\" +\r\n          recentGames[index].match_id +\r\n          \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\"\r\n      );\r\n      await axios\r\n        .get(\r\n          \"https://na1.api.riotgames.com/lol/match/v4/matches/\" +\r\n            recentGames[index].match_id +\r\n            \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\"\r\n        )\r\n        .then((result) => {\r\n          console.log(\"result of riot call: \", result);\r\n          //get game mode\r\n          tempFolder.gameMode = result.data.gameMode;\r\n          console.log(\"gamemode: \", tempFolder.gameMode);\r\n          //find identity of out user from array;\r\n\r\n          if (result.data.participantIdentities.length === 10) {\r\n            for (let k = 0; k < result.data.participantIdentities.length; k++) {\r\n              //if participant identity matches namev in local storage\r\n              //if participant identities dont exist then it was a practice game\r\n\r\n              if (\r\n                result.data.participantIdentities[k].player.summonerName ===\r\n                window.localStorage.getItem(\"localUsername\")\r\n              ) {\r\n                //get game outcome\r\n                if (result.data.participants[k].stats.win === true) {\r\n                  tempFolder.gameResult = \"Victory\";\r\n                } else {\r\n                  tempFolder.gameResult = \"Defeat\";\r\n                }\r\n\r\n                //get champion used\r\n                for (let l = 0; l < champions.length; l++) {\r\n                  if (\r\n                    champions[l].key ===\r\n                    String(result.data.participants[k].championId)\r\n                  ) {\r\n                    tempFolder.championURL = champions[l].icon;\r\n                    break;\r\n                  }\r\n                }\r\n\r\n                break;\r\n              }\r\n            }\r\n          } else {\r\n            tempFolder.gameResult = \"Win\";\r\n            //get champion used\r\n            for (let l = 0; l < champions.length; l++) {\r\n              if (\r\n                champions[l].key ===\r\n                String(result.data.participants[0].championId)\r\n              ) {\r\n                tempFolder.championURL = champions[l].icon;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      //set date and time from the database\r\n      tempFolder.setDate(match_date.toDateString());\r\n      tempFolder.setTime(match_date.toLocaleTimeString());\r\n\r\n      //get all the videos with matching ids\r\n      let videosInMatch = await localDB\r\n        .table(\"videos\")\r\n        .where(\"match_id\")\r\n        .equals(recentGames[index].match_id)\r\n        .toArray()\r\n        .catch((e) => console.log(e));\r\n      console.log(\"Videos Found: \", videosInMatch);\r\n\r\n      //@ts-ignore\r\n      for (let urls = 0; urls < videosInMatch.length; urls++) {\r\n        let tempVideo = new Video();\r\n\r\n        // console.log(\"duration: \", new Date  (videosInMatch[urls].duration).getSeconds()+\"s\");\r\n        // console.log(\"highlight_start_time: \", new Date  (videosInMatch[urls].highlight_start_time).toLocaleTimeString());\r\n        // console.log(\"hightType: \", videosInMatch[urls].hightType.charAt(0).toUpperCase() + videosInMatch[urls].hightType.slice(1)); //make first letter uppercase\r\n        // console.log(\"media_url: \", videosInMatch[urls].media_url);\r\n        // console.log(\"thumbnail_url: \",videosInMatch[urls].thumbnail_url);\r\n        if (!setFirstVideo) {\r\n          self.current_Video = videosInMatch[urls].media_url;\r\n          setFirstVideo = true;\r\n        }\r\n        tempVideo.videoAddress = videosInMatch[urls].media_url;\r\n        tempVideo.videoStartTime = new Date(\r\n          videosInMatch[urls].highlight_start_time\r\n        ).toLocaleTimeString();\r\n        tempVideo.duration =\r\n          new Date(videosInMatch[urls].duration).getSeconds() + \"s\";\r\n        tempVideo.highlightType =\r\n          videosInMatch[urls].hightType.charAt(0).toUpperCase() +\r\n          videosInMatch[urls].hightType.slice(1); //make first letter uppercase\r\n        tempVideo.thumbnail_url = videosInMatch[urls].thumbnail_url;\r\n\r\n        tempFolder.addVideoToFolder(tempVideo);\r\n      }\r\n\r\n      self.videoList.push(tempFolder);\r\n    }\r\n\r\n    //after this all the data is being displayed\r\n    //but now we need to delete the older games, so they dont pollute the database\r\n    //loop through older games and use game id's to delete data\r\n    //@ts-ignore\r\n    for (let index = 0; index < olderGames.length; index++) {\r\n      //get all the videos with matching ids\r\n      let olderVideos = await localDB\r\n        .table(\"videos\")\r\n        .where(\"match_id\")\r\n        .equals(olderGames[index].match_id)\r\n        .toArray()\r\n        .catch((e) => console.log(e));\r\n      console.log(\"Older Videos Found: \", olderVideos);\r\n\r\n      //loop through video adresses in matches\r\n      //@ts-ignore\r\n      for (let urls = 0; urls < olderVideos.length; urls++) {\r\n        //delete actual videos from local disk using overwolf\r\n        //@ts-ignore\r\n        overwolf.media.videos.deleteVideo(olderVideos[urls].media_url);\r\n      }\r\n\r\n      //then remove them from the videos database\r\n      localDB\r\n        .table(\"videos\")\r\n        .where(\"match_id\")\r\n        .equals(recentGames[index].match_id)\r\n        .delete()\r\n        .then((deleteCount) => {\r\n          console.log(\"Deleted older highlights videos: \", deleteCount);\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }\r\n\r\n    //get all other games\r\n    await localDB\r\n      .table(\"matches\")\r\n      .orderBy(\"match_start_time\")\r\n      .reverse()\r\n      .offset(5)\r\n      .delete()\r\n      .then((deleteCount) => {\r\n        console.log(\"Deleted old match data\", deleteCount);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }\r\n\r\n  created() {\r\n    // window resize\r\n    let WindowId;\r\n    //@ts-ignore\r\n    overwolf.windows.getCurrentWindow(function (res) {\r\n      WindowId = res.window.id;\r\n      console.log(\"Window id: \", WindowId);\r\n      let sizeSettings = {\r\n        window_id: WindowId,\r\n        width: 1600,\r\n        height: 800,\r\n        auto_dpi_resize: true, //relevant only for native windows\r\n      };\r\n      //@ts-ignore\r\n      overwolf.windows.changeSize(sizeSettings, (e) => {\r\n        console.log(\"change size callback: \", e);\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}]}