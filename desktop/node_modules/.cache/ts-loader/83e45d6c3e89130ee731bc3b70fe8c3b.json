{"remainingRequest":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js??ref--13-3!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Stats.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Stats.vue","mtime":1612644449416},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1610245779138},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Stats.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\nimport axios from \"axios\";\r\n// @ts-ignore\r\nimport spells from \"lol-spells\";\r\n// @ts-ignore\r\nimport champions from \"lol-champions\";\r\n\r\nclass Champion {\r\n  id: number;\r\n  name: string;\r\n  url: string;\r\n\r\n  constructor(id, name, url) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.url = url;\r\n  }\r\n}\r\n\r\n@Component\r\nexport default class Stats extends Vue {\r\n  infoAvailable = false;\r\n  summoner_info = null;\r\n  summonerName = \"Doublelift\";\r\n  profile_icon_id_url =\r\n    \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/profileicon/12.png\";\r\n  summonerLevel = \"\";\r\n\r\n  // these are needed for API calls for stats\r\n  encypted_summoner_id = \"\";\r\n  encypted_account_id = \"\";\r\n\r\n  recentChampions: Champion[] = new Array();\r\n\r\n  lastMatch = {\r\n    //ARAM & Normals\r\n    gameMode: \"ARAM\",\r\n    //game started & duration\r\n    gameCreation: new Date(1611790864204).toLocaleDateString(),\r\n    gameDuration: new Date(820543543).toTimeString(),\r\n    //win or lose\r\n    win: \"Win\",\r\n    //Champion Used\r\n    championId: 0,\r\n    championName: \"\",\r\n    champArtURL: \"\",\r\n    //Starter spells like Flash or Heal\r\n    //these are img urls, but i can look for the names if we need them\r\n    spell1Id: \"\",\r\n    spell1Icon: \"\",\r\n    spell2Id: \"\",\r\n    spell2Icon: \"\",\r\n\r\n    //Items used in match\r\n    item0: \"\",\r\n    item1: \"\",\r\n    item2: \"\",\r\n    item3: \"\",\r\n    item4: \"\",\r\n    item5: \"\",\r\n    item6: \"\",\r\n    //KDA\r\n    kills: 0,\r\n    deaths: 0,\r\n    assists: 0,\r\n    kda: \"-1.1\",\r\n    // multikills\r\n    largestMultiKill: \"\",\r\n    champLevel: 15,\r\n    //minion kills & cs\r\n    totalMinionsKilled: 31,\r\n    //optionally we can add Kill participation. calculated by kills plus assists and dividing that by their team's total kills.\r\n    //we can also add all the plalyers in the game\r\n    //this is what i modeled the data off of https://na.op.gg/summoner/userName=doublelift\r\n  };\r\n\r\n  //this object will be used for stats to display\r\n  stats = {\r\n    wins: 0,\r\n    avg_Kills: \"\",\r\n    diff_Champions: 0,\r\n    losses: 0,\r\n    avg_assists: \"\",\r\n    diff_Roles: 0,\r\n    win_Rate: \"\",\r\n    avg_Death: \"\",\r\n    diff_Queues: 0,\r\n  };\r\n\r\n  get summonerDataAvailable() {\r\n    return this.infoAvailable;\r\n  }\r\n\r\n  //this is for the v-for for champ images\r\n  getChampURL( champ:Champion){\r\n    console.log(\"champ\", champ)\r\n    return champ.url;\r\n  }\r\n\r\n  //This page will use the same launcher info as before\r\n  //TODO: #9 Send User info between desktop components from home menu rather than use overwolf launcher API. will speed things up\r\n  //connect to overwolf API to gain user data\r\n  mounted() {\r\n    let self = this;\r\n\r\n    //register event listeners\r\n    function registerEvents() {\r\n      // general events errors\r\n      // @ts-ignore\r\n      overwolf.games.events.onError.addListener(function (info) {\r\n        console.log(\"Error: \" + JSON.stringify(info));\r\n      });\r\n\r\n      // \"static\" data changed\r\n      // This will also be triggered the first time we register\r\n      // for events and will contain all the current information\r\n      // @ts-ignore\r\n      overwolf.games.launchers.events.onInfoUpdates.addListener(function (\r\n        info\r\n      ) {\r\n        console.log(\"Info UPDATE: \" + JSON.stringify(info));\r\n      });\r\n\r\n      // an event triggered\r\n      // @ts-ignore\r\n      overwolf.games.launchers.events.onNewEvents.addListener(function (info) {\r\n        console.log(\"EVENT FIRED: \" + JSON.stringify(info));\r\n      });\r\n    }\r\n\r\n    function setFeatures() {\r\n      // @ts-ignore\r\n      overwolf.games.launchers.events.setRequiredFeatures(\r\n        10902,\r\n        [\r\n          \"game_flow\",\r\n          \"summoner_info\",\r\n          \"champ_select\",\r\n          \"lcu_info\",\r\n          \"lobby_info\",\r\n          \"end_game\",\r\n          \"game_info\",\r\n        ],\r\n        function (info) {\r\n          if (info.status == \"error\") {\r\n            console.log(\"Could not set required features: \" + info.reason);\r\n            console.log(\"Trying in 2 seconds\");\r\n            window.setTimeout(setFeatures, 2000);\r\n            return;\r\n          }\r\n\r\n          console.log(JSON.stringify(info));\r\n\r\n          // @ts-ignore\r\n          overwolf.games.launchers.events.getInfo(10902, function (info) {\r\n            if (info.status === \"success\") {\r\n              console.log(\"Summoner Info\", info.res.summoner_info.display_name);\r\n\r\n              //filling in data from what the launcher recieves\r\n              self.summoner_info = info.res.summoner_info;\r\n\r\n              //FOR TESTING PURPOSES\r\n              //self.summonerName = self.summoner_info.display_name;\r\n              //   self.profile_icon_id_url =\r\n              //     \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/profileicon/\" +\r\n              //     self.summoner_info.profile_icon_id +\r\n              //     \".png\";\r\n              self.summonerLevel = self.summoner_info.summoner_level;\r\n\r\n              self.infoAvailable = true;\r\n            }\r\n          });\r\n        }\r\n      );\r\n    }\r\n\r\n    function launcherRunning(launcherInfo) {\r\n      if (!launcherInfo) {\r\n        return false;\r\n      }\r\n\r\n      if (!launcherInfo.launchers[0]) {\r\n        return false;\r\n      }\r\n\r\n      // NOTE: we divide by 10 to get the launcher class id without it's sequence number\r\n      if (Math.floor(launcherInfo.launchers[0].id / 10) != 10902) {\r\n        return false;\r\n      }\r\n\r\n      console.log(\"League of Legends launcher running\");\r\n      return true;\r\n    }\r\n\r\n    //create starting listeners\r\n    // @ts-ignore\r\n    overwolf.games.launchers.onLaunched.addListener(function () {\r\n      registerEvents();\r\n      setTimeout(setFeatures, 1000);\r\n      console.log(\"onLaunched fired\");\r\n    });\r\n    // @ts-ignore\r\n    overwolf.games.launchers.getRunningLaunchersInfo(function (res) {\r\n      if (launcherRunning(res)) {\r\n        registerEvents();\r\n        setTimeout(setFeatures, 1000);\r\n      }\r\n      console.log(\"getRunningLaunchersInfo: \" + JSON.stringify(res));\r\n    });\r\n\r\n    // @ts-ignore\r\n    overwolf.games.launchers.onTerminated.addListener(function (res) {\r\n      setTimeout(window.close, 1000);\r\n    });\r\n  }\r\n\r\n  async created() {\r\n    //create variable for this\r\n    let self = this;\r\n    //create url to call for summoner data\r\n    let summonerInfoURL =\r\n      \"https://na1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" +\r\n      self.summonerName +\r\n      \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\";\r\n    //ACCOUNTID >> MATCHLIST >> LAST MATCH DATA\r\n    console.log(\"SummonerName being queried: \", self.summonerName);\r\n\r\n    //Use axios to call API and get summoner info\r\n    //ACCOUNT ID\r\n    await axios\r\n      .get(summonerInfoURL)\r\n      .then(async (summonerInfo) => {\r\n        //Save encrypted summoner data\r\n        console.log(\"Summoner API CALL RESPONCE: \", summonerInfo);\r\n\r\n        self.encypted_summoner_id = summonerInfo.data.id;\r\n        self.encypted_account_id = summonerInfo.data.accountId;\r\n        //MATCHLIST\r\n        //use axios to get a matchlist from RIOT API\r\n        console.log(\r\n          \"Matchlist queried using encrypted summoner Id: \",\r\n          self.encypted_account_id\r\n        );\r\n        let matchInfoURL =\r\n          \"https://na1.api.riotgames.com/lol/match/v4/matchlists/by-account/\" +\r\n          self.encypted_account_id +\r\n          \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\";\r\n\r\n        //Nested Axios Call to recieve data from most recent match and enter it in last match\r\n        await axios\r\n          .get(matchInfoURL)\r\n          .then(async (matchList) => {\r\n\r\n            var matchNums = 15;\r\n            if (matchList.data.totalGames < 15) {\r\n              matchNums = matchList.data.totalGames;\r\n            }\r\n            var killcount = 0;\r\n            var deathcount = 0;\r\n            var assistCount = 0;\r\n\r\n            //arrays to count roles, queues, and champions\r\n            var roleCount: string[] = new Array();\r\n            var queueCount: number[] = new Array();\r\n            var champIDs: number[] = new Array();\r\n\r\n            //go through 15 matches to build stats profile.\r\n            for (let imatch = 0; imatch < matchNums; imatch++) {\r\n              //collect individual match data\r\n              //add first match data if no other matches added yet\r\n              //adding roles\r\n              if (roleCount.length === 0) {\r\n                roleCount.push(matchList.data.matches[imatch].role);\r\n                console.log(\r\n                  \"adding first role: \",\r\n                  matchList.data.matches[imatch].role\r\n                );\r\n              } else {\r\n                if (!roleCount.includes(matchList.data.matches[imatch].role)) {\r\n                  roleCount.push(matchList.data.matches[imatch].role);\r\n                  console.log(\r\n                    \"adding new  role\",\r\n                    matchList.data.matches[imatch].role\r\n                  );\r\n                }\r\n              }\r\n\r\n              //adding queues\r\n              if (queueCount.length === 0) {\r\n                console.log(\r\n                  \"adding first queue: \",\r\n                  matchList.data.matches[imatch].queue\r\n                );\r\n                queueCount.push(matchList.data.matches[imatch].queue);\r\n              } else {\r\n                if (\r\n                  !queueCount.includes(matchList.data.matches[imatch].queue)\r\n                ) {\r\n                  queueCount.push(matchList.data.matches[imatch].queue);\r\n                  console.log(\r\n                    \"adding new  queue\",\r\n                    matchList.data.matches[imatch].queue\r\n                  );\r\n                }\r\n              }\r\n\r\n              //adding champ data\r\n              if (champIDs.length === 0) {\r\n                champIDs.push(matchList.data.matches[imatch].champion);\r\n              } else {\r\n                if (\r\n                  !champIDs.includes(matchList.data.matches[imatch].champion)\r\n                ) {\r\n                  champIDs.push(matchList.data.matches[imatch].champion);\r\n                  console.log(\r\n                    \"adding new  champion\",\r\n                    matchList.data.matches[imatch].champion\r\n                  );\r\n                }\r\n              }\r\n\r\n              console.log(\"Axios for match: \", imatch);\r\n              //call API for each match\r\n              await axios\r\n                .get(\r\n                  \"https://na1.api.riotgames.com/lol/match/v4/matches/\" +\r\n                    matchList.data.matches[imatch].gameId +\r\n                    \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\"\r\n                )\r\n                .then(async (mostRecentMatch) => {\r\n                  //assigning most recent match data to display by parsing the json\r\n\r\n                  console.log(mostRecentMatch.data);\r\n                  //setting basic game data for recent match\r\n                  //if i === 0, then this is the most recent match data\r\n                  if (imatch === 0) {\r\n                    self.lastMatch.gameMode = mostRecentMatch.data.gameMode;\r\n                    let date = new Date(mostRecentMatch.data.gameCreation);\r\n\r\n                    self.lastMatch.gameCreation =\r\n                      date.getMonth() +\r\n                      \" / \" +\r\n                      date.getDay() +\r\n                      \" / \" +\r\n                      date.getFullYear();\r\n                    self.lastMatch.gameDuration =\r\n                      new Date(mostRecentMatch.data.gameDuration * 1000)\r\n                        .getMinutes()\r\n                        .toLocaleString() + \" min\";\r\n                  }\r\n\r\n                  /*Search through participant identities to find the correct data*/\r\n                  for (let i = 0; i < 10; i++) {\r\n                    //if correct summoner is found fill data\r\n                    if (\r\n                      self.summonerName ===\r\n                      mostRecentMatch.data.participantIdentities[i].player\r\n                        .summonerName\r\n                    ) {\r\n                      if (\r\n                        mostRecentMatch.data.participants[i].stats.win === true\r\n                      ) {\r\n                        self.stats.wins = self.stats.wins + 1;\r\n                        console.log(\"Self.stats.wins++\", self.stats.wins);\r\n                        if (imatch === 0) {\r\n                          self.lastMatch.win = \"Victory\";\r\n                        }\r\n                      } else {\r\n                        self.stats.losses = self.stats.losses + 1;\r\n                        console.log(\"Self.stats.losses++\", self.stats.losses);\r\n\r\n                        if (imatch === 0) {\r\n                          self.lastMatch.win = \"Defeat\";\r\n                        }\r\n                      }\r\n                      //if last match then save it as image to be displayed at the top\r\n                      if (imatch === 0) {\r\n                        self.lastMatch.championId =\r\n                          mostRecentMatch.data.participants[i].championId;\r\n                        //need to add it/ instatiate array\r\n                      } else {\r\n                        //add champions to champion array to display\r\n                      }\r\n\r\n                      //if match index === 0 store item info from most recent match\r\n                      if (imatch === 0) {\r\n                        //item info\r\n                        //base item url http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/{{ItemNumber}}.png\r\n                        self.lastMatch.item0 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item0 +\r\n                          \".png\";\r\n\r\n                        self.lastMatch.item1 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item1 +\r\n                          \".png\";\r\n                        self.lastMatch.item2 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item2 +\r\n                          \".png\";\r\n                        self.lastMatch.item3 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item3 +\r\n                          \".png\";\r\n                        self.lastMatch.item4 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item4 +\r\n                          \".png\";\r\n                        self.lastMatch.item5 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item5 +\r\n                          \".png\";\r\n                        self.lastMatch.item6 =\r\n                          \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/\" +\r\n                          mostRecentMatch.data.participants[i].stats.item6 +\r\n                          \".png\";\r\n                      }\r\n\r\n                      //KDA\r\n                      killcount +=\r\n                        mostRecentMatch.data.participants[i].stats.kills;\r\n                      if (imatch === 0) {\r\n                        self.lastMatch.kills =\r\n                          mostRecentMatch.data.participants[i].stats.kills;\r\n                      }\r\n\r\n                      deathcount +=\r\n                        mostRecentMatch.data.participants[i].stats.deaths;\r\n\r\n                      if (imatch === 0) {\r\n                        self.lastMatch.deaths =\r\n                          mostRecentMatch.data.participants[i].stats.deaths;\r\n                      }\r\n\r\n                      assistCount +=\r\n                        mostRecentMatch.data.participants[i].stats.assists;\r\n\r\n                      if (imatch === 0) {\r\n                        self.lastMatch.assists =\r\n                          mostRecentMatch.data.participants[i].stats.assists;\r\n                      }\r\n\r\n                      //calculate Kill/death ratio\r\n                      //these are only relevant to most recent match\r\n                      if (imatch === 0) {\r\n                        self.lastMatch.kda = (\r\n                          (self.lastMatch.kills + self.lastMatch.assists) /\r\n                          self.lastMatch.deaths\r\n                        ).toFixed(2);\r\n                        //need an if to get the right string here\r\n                        if (\r\n                          mostRecentMatch.data.participants[i].stats\r\n                            .largestMultiKill === 2\r\n                        ) {\r\n                          self.lastMatch.largestMultiKill = \"Double Kill\";\r\n                        } else if (\r\n                          mostRecentMatch.data.participants[i].stats\r\n                            .largestMultiKill === 3\r\n                        ) {\r\n                          self.lastMatch.largestMultiKill = \"Triple Kill\";\r\n                        } else if (\r\n                          mostRecentMatch.data.participants[i].stats\r\n                            .largestMultiKill === 4\r\n                        ) {\r\n                          self.lastMatch.largestMultiKill = \"QuadraKil\";\r\n                        } else if (\r\n                          mostRecentMatch.data.participants[i].stats\r\n                            .largestMultiKill === 5\r\n                        ) {\r\n                          self.lastMatch.largestMultiKill = \"Penta Kill\";\r\n                        } else if (\r\n                          mostRecentMatch.data.participants[i].stats\r\n                            .largestMultiKill === 6\r\n                        ) {\r\n                          self.lastMatch.largestMultiKill = \"Hexa Kill\";\r\n                        } else {\r\n                          self.lastMatch.largestMultiKill = \"\";\r\n                        }\r\n\r\n                        self.lastMatch.champLevel =\r\n                          mostRecentMatch.data.participants[i].stats.champLevel;\r\n\r\n                        self.lastMatch.totalMinionsKilled =\r\n                          mostRecentMatch.data.participants[\r\n                            i\r\n                          ].stats.totalMinionsKilled;\r\n\r\n                        // Find the spells by spell id - using the lol spells package for this.\r\n                        // spell info\r\n                        // http://ddragon.leagueoflegends.com/cdn/11.2.1/img/spell/{{spellname}}.png\r\n                        self.lastMatch.spell1Id =\r\n                          mostRecentMatch.data.participants[i].spell1Id;\r\n                        self.lastMatch.spell2Id =\r\n                          mostRecentMatch.data.participants[i].spell2Id;\r\n\r\n                        for (let i = 0; i < spells.length; i++) {\r\n                          //check for spell 1\r\n                          if (\r\n                            spells[i].key === String(self.lastMatch.spell1Id)\r\n                          ) {\r\n                            self.lastMatch.spell1Icon = spells[i].icon;\r\n                          } //check for spell 2\r\n                          else if (\r\n                            spells[i].key === String(self.lastMatch.spell2Id)\r\n                          ) {\r\n                            self.lastMatch.spell2Icon = spells[i].icon;\r\n                          }\r\n                        }\r\n                      }\r\n                    \r\n                      break;\r\n                    }\r\n                  }\r\n                })\r\n\r\n                //Below i'm just logging any errors from this axios calls\r\n                .catch((e) => console.log(\"Error: \", e));\r\n            }\r\n\r\n            console.log(\r\n              \"Async thread complete !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\"\r\n            );\r\n\r\n            //using champion id's to enter data for array of images\r\n            //get most recent match data\r\n            for (let i = 0; i < champions.length; i++) {\r\n              if (champions[i].key === String(champIDs[0])) {\r\n                (self.lastMatch.championId = champions[i].key),\r\n                  (self.lastMatch.championName = champions[i].id);\r\n                self.lastMatch.champArtURL = champions[i].icon;\r\n\r\n                break;\r\n              }\r\n            }\r\n\r\n            \r\n            champIDs.forEach((id) => {\r\n              console.log(id);\r\n              for (let i = 0; i < champions.length; i++) {\r\n                //if id and key matches then initialize data and end loop\r\n\r\n                if (champions[i].key === String(id)) {\r\n                  self.recentChampions.push(\r\n                    new Champion(\r\n                      champions[i].key,\r\n                      champions[i].id,\r\n                      champions[i].icon\r\n                    )\r\n                  );\r\n                  break;\r\n                }\r\n              }\r\n            });\r\n\r\n            //after the for loop through match list\r\n            //calculate averages\r\n            self.stats.avg_Kills = (killcount / matchNums).toFixed(2);\r\n            self.stats.avg_Death = (deathcount / matchNums).toFixed(2);\r\n            self.stats.avg_assists = (assistCount / matchNums).toFixed(2);\r\n            self.stats.diff_Roles = roleCount.length;\r\n            self.stats.diff_Queues = queueCount.length;\r\n            self.stats.diff_Champions = champIDs.length;\r\n            self.stats.win_Rate =\r\n              ((self.stats.wins / matchNums) * 100).toFixed(0) + \"%\";\r\n          })\r\n\r\n          .catch((e) => console.log(\"Error: \", e));\r\n      })\r\n      .catch((e) => console.log(\"Error: \", e));\r\n  }\r\n\r\n  // Check if the items exist before rendering them\r\n  get item0exists() {\r\n    return (\r\n      this.lastMatch.item0 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item1exists() {\r\n    return (\r\n      this.lastMatch.item1 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item2exists() {\r\n    return (\r\n      this.lastMatch.item2 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item3exists() {\r\n    return (\r\n      this.lastMatch.item3 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item4exists() {\r\n    return (\r\n      this.lastMatch.item4 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item5exists() {\r\n    return (\r\n      this.lastMatch.item5 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n  get item6exists() {\r\n    return (\r\n      this.lastMatch.item6 !=\r\n      \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/0.png\"\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}]}