{"remainingRequest":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js??ref--13-2!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Stats.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Stats.vue","mtime":1618444815917},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Stats.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\nimport axios, { AxiosResponse } from \"axios\";\r\n// @ts-ignore\r\nimport spells from \"lol-spells\";\r\n// @ts-ignore\r\nimport champions from \"lol-champions\";\r\nimport firebase from \"firebase/app\";\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBrMp64ttfGC2WiD28JiJXtfUXevFeShCk\",\r\n  authDomain: \"test-59db3.firebaseapp.com\",\r\n  databaseURL: \"https://test-59db3-default-rtdb.firebaseio.com\",\r\n  projectId: \"test-59db3\",\r\n  storageBucket: \"test-59db3.appspot.com\",\r\n  messagingSenderId: \"890513354906\",\r\n  appId: \"1:890513354906:web:ff2483ac34b4f91fb4af23\",\r\n  measurementId: \"G-FQST7TCZCR\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nclass Item {\r\n  icon: String;\r\n  name: string;\r\n  desc: String;\r\n  price: String;\r\n}\r\nclass Champion {\r\n  id: number;\r\n  name: string;\r\n  url: string;\r\n\r\n  constructor(id, name, url) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.url = url;\r\n  }\r\n}\r\n\r\n@Component\r\nexport default class Stats extends Vue {\r\n  infoAvailable = true;\r\n  summoner_info = null;\r\n  summonerName = \"Doublelift\";\r\n  profile_icon_id_url =\r\n    \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/profileicon/12.png\";\r\n  summonerLevel = \"\";\r\n\r\n  // these are needed for API calls for stats\r\n  encypted_summoner_id = \"\";\r\n  encypted_account_id = \"\";\r\n\r\n  recentChampions: Champion[] = new Array();\r\n\r\n  lastMatch = {\r\n    //ARAM & Normals\r\n    gameMode: \"ARAM\",\r\n    //game started & duration\r\n    gameCreation: \"\",\r\n    gameDuration: \"\",\r\n    //win or lose\r\n    win: \"Win\",\r\n    //Champion Used\r\n    championId: 0,\r\n    championName: \"\",\r\n    champArtURL: \"\",\r\n\r\n    //Starter spells like Flash or Heal\r\n    //these are img urls, but i can look for the names if we need them\r\n    spell1Name: \"\",\r\n    spell1Icon: \"\",\r\n    spell1Description: \"\",\r\n\r\n    spell2Name: \"\",\r\n    spell2Icon: \"\",\r\n    spell2Description: \"\",\r\n\r\n    //Items used in match\r\n    item0: new Item(),\r\n    item1: new Item(),\r\n    item2: new Item(),\r\n    item3: new Item(),\r\n    item4: new Item(),\r\n    item5: new Item(),\r\n    item6: new Item(),\r\n    //KDA\r\n    kills: 0,\r\n    deaths: 0,\r\n    assists: 0,\r\n    kda: \"-1.1\",\r\n    // multikills\r\n    largestMultiKill: \"\",\r\n    champLevel: 15,\r\n    //minion kills & cs\r\n    totalMinionsKilled: 31,\r\n    //optionally we can add Kill participation. calculated by kills plus assists and dividing that by their team's total kills.\r\n    //we can also add all the plalyers in the game\r\n    //this is what i modeled the data off of https://na.op.gg/summoner/userName=doublelift\r\n  };\r\n\r\n  //this object will be used for stats to display\r\n  stats = {\r\n    wins: 0,\r\n    avg_Kills: \"\",\r\n    diff_Champions: 0,\r\n    losses: 0,\r\n    avg_assists: \"\",\r\n    diff_Roles: 0,\r\n    win_Rate: \"\",\r\n    avg_Death: \"\",\r\n    diff_Queues: 0,\r\n  };\r\n\r\n  get summonerDataAvailable() {\r\n    return this.infoAvailable;\r\n  }\r\n\r\n  //this is for the v-for for champ images\r\n  getChampURL(champ: Champion) {\r\n    //console.log(\"champ\", champ);\r\n    return champ.url;\r\n  }\r\n  //This page will use the same launcher info as before\r\n  //TODO: #9 Send User info between desktop components from home menu rather than use overwolf launcher API. will speed things up\r\n  //connect to overwolf API to gain user data\r\n  async mounted() {\r\n    let self = this;\r\n\r\n    //if we havent presaved the accountID then we need to set listeners\r\n    if (window.localStorage.getItem(\"encryptedAccountID\") === null) {\r\n      //register event listeners\r\n      function registerEvents() {\r\n        // general events errors\r\n        // @ts-ignore\r\n        overwolf.games.events.onError.addListener(function (info) {\r\n          console.log(\"Error: \" + JSON.stringify(info));\r\n        });\r\n\r\n        // \"static\" data changed\r\n        // This will also be triggered the first time we register\r\n        // for events and will contain all the current information\r\n        // @ts-ignore\r\n        overwolf.games.launchers.events.onInfoUpdates.addListener(function (\r\n          info\r\n        ) {\r\n          console.log(\"Info UPDATE: \" + JSON.stringify(info));\r\n        });\r\n\r\n        // an event triggered\r\n        // @ts-ignore\r\n        overwolf.games.launchers.events.onNewEvents.addListener(function (\r\n          info\r\n        ) {\r\n          console.log(\"EVENT FIRED: \" + JSON.stringify(info));\r\n        });\r\n      }\r\n\r\n      function setFeatures() {\r\n        // @ts-ignore\r\n        overwolf.games.launchers.events.setRequiredFeatures(\r\n          10902,\r\n          [\r\n            \"game_flow\",\r\n            \"summoner_info\",\r\n            \"champ_select\",\r\n            \"lcu_info\",\r\n            \"lobby_info\",\r\n            \"end_game\",\r\n            \"game_info\",\r\n          ],\r\n          function (info) {\r\n            if (info.status == \"error\") {\r\n              console.log(\"Could not set required features: \" + info.reason);\r\n              console.log(\"Trying in 2 seconds\");\r\n              window.setTimeout(setFeatures, 2000);\r\n              return;\r\n            }\r\n\r\n            // @ts-ignore\r\n            overwolf.games.launchers.events.getInfo(\r\n              10902,\r\n              async function (info) {\r\n                if (info.status === \"success\") {\r\n                  console.log(\r\n                    \"Summoner Info\",\r\n                    info.res.summoner_info.display_name\r\n                  );\r\n\r\n                  //filling in data from what the launcher recieves\r\n                  self.summoner_info = info.res.summoner_info;\r\n\r\n                  self.summonerName = self.summoner_info.display_name;\r\n                  self.profile_icon_id_url =\r\n                    \"http://ddragon.leagueoflegends.com/cdn/11.2.1/img/profileicon/\" +\r\n                    self.summoner_info.profile_icon_id +\r\n                    \".png\";\r\n                  self.summonerLevel = self.summoner_info.summoner_level;\r\n\r\n                  self.infoAvailable = true;\r\n\r\n                  //save things in local storage\r\n                  window.sessionStorage.setItem(\r\n                    \"sessionUsername\",\r\n                    self.summonerName\r\n                  );\r\n                  window.sessionStorage.setItem(\r\n                    \"iconURL\",\r\n                    self.profile_icon_id_url\r\n                  );\r\n                  window.sessionStorage.setItem(\r\n                    \"summonerLevel\",\r\n                    self.summonerLevel\r\n                  );\r\n                  window.localStorage.setItem(\r\n                    \"localUsername\",\r\n                    self.summonerName\r\n                  );\r\n                  window.localStorage.setItem(\r\n                    \"encryptedAccountID\",\r\n                    self.summoner_info.account_id\r\n                  );\r\n\r\n                  let summonerInfoURL =\r\n                    \"https://na1.api.riotgames.com/lol/summoner/v4/summoners/by-name/\" +\r\n                    self.summonerName +\r\n                    \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\";\r\n                  //ACCOUNTID >> MATCHLIST >> LAST MATCH DATA\r\n                  console.log(\r\n                    \"SummonerName being queried: \",\r\n                    self.summonerName\r\n                  );\r\n\r\n                  //Use axios to call API and get summoner info\r\n                  //ACCOUNT ID\r\n                  await axios\r\n                    .get(summonerInfoURL)\r\n                    .then(async (summonerInfo) => {\r\n                      //Save encrypted summoner data\r\n                      console.log(\"Summoner API CALL RESPONCE: \", summonerInfo);\r\n\r\n                      self.encypted_summoner_id = summonerInfo.data.id;\r\n                      self.encypted_account_id = summonerInfo.data.accountId;\r\n                      //MATCHLIST\r\n                      //use axios to get a matchlist from RIOT API\r\n                      console.log(\r\n                        \"Matchlist queried using encrypted summoner Id: \",\r\n                        self.encypted_account_id\r\n                      );\r\n                      let matchInfoURL =\r\n                        \"https://na1.api.riotgames.com/lol/match/v4/matchlists/by-account/\" +\r\n                        self.encypted_account_id +\r\n                        \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\";\r\n\r\n                      //Nested Axios Call to recieve data from most recent match and enter it in last match\r\n                      await axios\r\n                        .get(matchInfoURL)\r\n                        .then(async (matchList) => {\r\n                          self.getStatsFromMatchlist(matchList);\r\n                        })\r\n                        .catch((e) => console.log(\"Error: \", e));\r\n                    })\r\n                    .catch((e) => console.log(\"Error: \", e));\r\n                }\r\n              }\r\n            );\r\n          }\r\n        );\r\n      }\r\n\r\n      function launcherRunning(launcherInfo) {\r\n        if (!launcherInfo) {\r\n          return false;\r\n        }\r\n\r\n        if (!launcherInfo.launchers[0]) {\r\n          return false;\r\n        }\r\n\r\n        // NOTE: we divide by 10 to get the launcher class id without it's sequence number\r\n        if (Math.floor(launcherInfo.launchers[0].id / 10) != 10902) {\r\n          return false;\r\n        }\r\n\r\n        console.log(\"League of Legends launcher running\");\r\n        return true;\r\n      }\r\n      //create starting listeners\r\n      // @ts-ignore\r\n      overwolf.games.launchers.onLaunched.addListener(function () {\r\n        registerEvents();\r\n        setTimeout(setFeatures, 1000);\r\n        console.log(\"onLaunched fired\");\r\n      });\r\n      // @ts-ignore\r\n      overwolf.games.launchers.getRunningLaunchersInfo(function (res) {\r\n        if (launcherRunning(res)) {\r\n          registerEvents();\r\n          setTimeout(setFeatures, 1000);\r\n        }\r\n        console.log(\"getRunningLaunchersInfo: \" + JSON.stringify(res));\r\n      });\r\n      // @ts-ignore\r\n      overwolf.games.launchers.onTerminated.addListener(function (res) {\r\n        setTimeout(window.close, 1000);\r\n      });\r\n    } else {\r\n      //we already have the accountId saved So we don't need to set listeners\r\n      let matchInfoURL =\r\n        \"https://na1.api.riotgames.com/lol/match/v4/matchlists/by-account/\" +\r\n        window.localStorage.getItem(\"encryptedAccountID\") +\r\n        \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\";\r\n      self.summonerName = window.localStorage.getItem(\"localUsername\");\r\n      await axios\r\n        .get(matchInfoURL)\r\n        .then(async (matchList) => {\r\n          self.getStatsFromMatchlist(matchList);\r\n        })\r\n        .catch((e) => console.log(\"Error: \", e));\r\n\r\n      self.profile_icon_id_url = window.sessionStorage.getItem(\"iconURL\");\r\n      self.infoAvailable = true;\r\n    }\r\n  }\r\n  async created() {\r\n    // window resize\r\n    let WindowId;\r\n    //@ts-ignore\r\n    overwolf.windows.getCurrentWindow(function (res) {\r\n      WindowId = res.window.id;\r\n      let sizeSettings = {\r\n        window_id: WindowId,\r\n        width: 500,\r\n        height: 600,\r\n        auto_dpi_resize: true, //relevant only for native windows\r\n      };\r\n      //@ts-ignore\r\n      overwolf.windows.changeSize(sizeSettings, console.log);\r\n    });\r\n  }\r\n\r\n  async getStatsFromMatchlist(matchList: AxiosResponse<any>) {\r\n    let self = this;\r\n\r\n    var matchNums = 15;\r\n    if (matchList.data.totalGames < 15) {\r\n      matchNums = matchList.data.totalGames;\r\n    }\r\n    var killcount = 0;\r\n    var deathcount = 0;\r\n    var assistCount = 0;\r\n\r\n    //arrays to count roles, queues, and champions\r\n    var roleCount: string[] = new Array();\r\n    var queueCount: number[] = new Array();\r\n    var champIDs: number[] = new Array();\r\n\r\n    //go through 15 matches to build stats profile.\r\n    for (let imatch = 0; imatch < matchNums; imatch++) {\r\n      //collect individual match data\r\n      //add first match data if no other matches added yet\r\n      //adding roles\r\n      if (roleCount.length === 0) {\r\n        roleCount.push(matchList.data.matches[imatch].role);\r\n        console.log(\"adding first role: \", matchList.data.matches[imatch].role);\r\n      } else {\r\n        if (!roleCount.includes(matchList.data.matches[imatch].role)) {\r\n          roleCount.push(matchList.data.matches[imatch].role);\r\n          //console.log(\"adding new  role\", matchList.data.matches[imatch].role);\r\n        }\r\n      }\r\n\r\n      //adding queues\r\n      if (queueCount.length === 0) {\r\n        console.log(\r\n          \"adding first queue: \",\r\n          matchList.data.matches[imatch].queue\r\n        );\r\n        queueCount.push(matchList.data.matches[imatch].queue);\r\n      } else {\r\n        if (!queueCount.includes(matchList.data.matches[imatch].queue)) {\r\n          queueCount.push(matchList.data.matches[imatch].queue);\r\n          // console.log(\r\n          //   \"adding new  queue\",\r\n          //   matchList.data.matches[imatch].queue\r\n          // );\r\n        }\r\n      }\r\n\r\n      //adding champ data\r\n      if (champIDs.length === 0) {\r\n        champIDs.push(matchList.data.matches[imatch].champion);\r\n      } else {\r\n        if (!champIDs.includes(matchList.data.matches[imatch].champion)) {\r\n          champIDs.push(matchList.data.matches[imatch].champion);\r\n          // console.log(\r\n          //   \"adding new  champion\",\r\n          //   matchList.data.matches[imatch].champion\r\n          // );\r\n        }\r\n      }\r\n\r\n      // console.log(\"Axios for match: \", imatch);\r\n      //call API for each match\r\n      await axios\r\n        .get(\r\n          \"https://na1.api.riotgames.com/lol/match/v4/matches/\" +\r\n            matchList.data.matches[imatch].gameId +\r\n            \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\"\r\n        )\r\n        .then(async (mostRecentMatch) => {\r\n          //assigning most recent match data to display by parsing the json\r\n\r\n          console.log(mostRecentMatch.data);\r\n          //setting basic game data for recent match\r\n          //if i === 0, then this is the most recent match data\r\n          if (imatch === 0) {\r\n            self.lastMatch.gameMode = mostRecentMatch.data.gameMode;\r\n            let date = new Date(mostRecentMatch.data.gameCreation);\r\n\r\n            self.lastMatch.gameCreation =\r\n              date.getMonth() +\r\n              1 +\r\n              \" / \" +\r\n              date.getUTCDate() +\r\n              \" / \" +\r\n              date.getFullYear();\r\n            self.lastMatch.gameDuration =\r\n              new Date(mostRecentMatch.data.gameDuration * 1000)\r\n                .getMinutes()\r\n                .toLocaleString() + \" min\";\r\n          }\r\n\r\n          /*Search through participant identities to find the correct data*/\r\n          for (let i = 0; i < 10; i++) {\r\n            //if correct summoner is found fill data\r\n            if (\r\n              self.summonerName ===\r\n              mostRecentMatch.data.participantIdentities[i].player.summonerName\r\n            ) {\r\n              if (mostRecentMatch.data.participants[i].stats.win === true) {\r\n                self.stats.wins = self.stats.wins + 1;\r\n                //console.log(\"Self.stats.wins++\", self.stats.wins);\r\n                if (imatch === 0) {\r\n                  self.lastMatch.win = \"Victory\";\r\n                }\r\n              } else {\r\n                self.stats.losses = self.stats.losses + 1;\r\n                // console.log(\"Self.stats.losses++\", self.stats.losses);\r\n\r\n                if (imatch === 0) {\r\n                  self.lastMatch.win = \"Defeat\";\r\n                }\r\n              }\r\n              //if last match then save it as image to be displayed at the top\r\n              if (imatch === 0) {\r\n                self.lastMatch.championId =\r\n                  mostRecentMatch.data.participants[i].championId;\r\n              }\r\n\r\n              //if match index === 0 store item info from most recent match\r\n              if (imatch === 0) {\r\n                console.log(\"We are in the first match\");\r\n                //item info\r\n                //base item url http://ddragon.leagueoflegends.com/cdn/11.2.1/img/item/{{ItemNumber}}.png\r\n                self.setItem(\r\n                  (self.lastMatch.item0 as unknown) as Item,\r\n                  mostRecentMatch.data.participants[i].stats.item0\r\n                );\r\n                self.setItem(\r\n                  (self.lastMatch.item1 as unknown) as Item,\r\n                  mostRecentMatch.data.participants[i].stats.item1\r\n                );\r\n                self.setItem(\r\n                  (self.lastMatch.item2 as unknown) as Item,\r\n                  mostRecentMatch.data.participants[i].stats.item2\r\n                );\r\n                self.setItem(\r\n                  (self.lastMatch.item3 as unknown) as Item,\r\n                  mostRecentMatch.data.participants[i].stats.item3\r\n                );\r\n                self.setItem(\r\n                  (self.lastMatch.item4 as unknown) as Item,\r\n                  mostRecentMatch.data.participants[i].stats.item4\r\n                );\r\n                self.setItem(\r\n                  (self.lastMatch.item5 as unknown) as Item,\r\n                  mostRecentMatch.data.participants[i].stats.item5\r\n                );\r\n                self.setItem(\r\n                  (self.lastMatch.item6 as unknown) as Item,\r\n                  mostRecentMatch.data.participants[i].stats.item6\r\n                );\r\n              }\r\n\r\n              //KDA\r\n              killcount += mostRecentMatch.data.participants[i].stats.kills;\r\n              if (imatch === 0) {\r\n                self.lastMatch.kills =\r\n                  mostRecentMatch.data.participants[i].stats.kills;\r\n              }\r\n\r\n              deathcount += mostRecentMatch.data.participants[i].stats.deaths;\r\n\r\n              if (imatch === 0) {\r\n                self.lastMatch.deaths =\r\n                  mostRecentMatch.data.participants[i].stats.deaths;\r\n              }\r\n\r\n              assistCount += mostRecentMatch.data.participants[i].stats.assists;\r\n\r\n              if (imatch === 0) {\r\n                self.lastMatch.assists =\r\n                  mostRecentMatch.data.participants[i].stats.assists;\r\n              }\r\n\r\n              //calculate Kill/death ratio\r\n              //these are only relevant to most recent match\r\n              if (imatch === 0) {\r\n                self.lastMatch.kda = (\r\n                  (self.lastMatch.kills + self.lastMatch.assists) /\r\n                  self.lastMatch.deaths\r\n                ).toFixed(2);\r\n                //need an if to get the right string here\r\n                if (\r\n                  mostRecentMatch.data.participants[i].stats\r\n                    .largestMultiKill === 2\r\n                ) {\r\n                  self.lastMatch.largestMultiKill = \"Double Kill\";\r\n                } else if (\r\n                  mostRecentMatch.data.participants[i].stats\r\n                    .largestMultiKill === 3\r\n                ) {\r\n                  self.lastMatch.largestMultiKill = \"Triple Kill\";\r\n                } else if (\r\n                  mostRecentMatch.data.participants[i].stats\r\n                    .largestMultiKill === 4\r\n                ) {\r\n                  self.lastMatch.largestMultiKill = \"QuadraKil\";\r\n                } else if (\r\n                  mostRecentMatch.data.participants[i].stats\r\n                    .largestMultiKill === 5\r\n                ) {\r\n                  self.lastMatch.largestMultiKill = \"Penta Kill\";\r\n                } else if (\r\n                  mostRecentMatch.data.participants[i].stats\r\n                    .largestMultiKill === 6\r\n                ) {\r\n                  self.lastMatch.largestMultiKill = \"Hexa Kill\";\r\n                } else {\r\n                  self.lastMatch.largestMultiKill = \"\";\r\n                }\r\n\r\n                self.lastMatch.champLevel =\r\n                  mostRecentMatch.data.participants[i].stats.champLevel;\r\n\r\n                self.lastMatch.totalMinionsKilled =\r\n                  mostRecentMatch.data.participants[i].stats.totalMinionsKilled;\r\n\r\n                // Find the spells by spell id - using the lol spells package for this.\r\n                // spell info\r\n                // http://ddragon.leagueoflegends.com/cdn/11.2.1/img/spell/{{spellname}}.png\r\n                let spell1Id = mostRecentMatch.data.participants[i].spell1Id;\r\n                let spell2Id = mostRecentMatch.data.participants[i].spell2Id;\r\n                for (let i = 0; i < spells.length; i++) {\r\n                  //check for spell 1\r\n                  console.log(\"comparing api id:\", spell2Id);\r\n                  console.log(\"To spells key: \", spells[i].key);\r\n                  if (spells[i].key == String(spell1Id)) {\r\n                    self.lastMatch.spell1Icon = spells[i].icon;\r\n                    self.lastMatch.spell1Name = spells[i].name;\r\n                    self.lastMatch.spell1Description = spells[i].description;\r\n                  } //check for spell 2\r\n                  else if (spells[i].key == String(spell2Id)) {\r\n                    self.lastMatch.spell2Icon = spells[i].icon;\r\n                    self.lastMatch.spell2Name = spells[i].name;\r\n                    self.lastMatch.spell2Description = spells[i].description;\r\n                  }\r\n                }\r\n              }\r\n\r\n              break;\r\n            }\r\n          }\r\n        })\r\n\r\n        //Below i'm just logging any errors from this axios calls\r\n        .catch((e) => console.log(\"Error: \", e));\r\n    }\r\n\r\n    console.log(\"Async thread complete !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\");\r\n\r\n    //using champion id's to enter data for array of images\r\n    //get most recent match data\r\n    for (let i = 0; i < champions.length; i++) {\r\n      if (champions[i].key === String(champIDs[0])) {\r\n        (self.lastMatch.championId = champions[i].key),\r\n          (self.lastMatch.championName = champions[i].name);\r\n        self.lastMatch.champArtURL = champions[i].icon;\r\n\r\n        break;\r\n      }\r\n    }\r\n\r\n    champIDs.forEach((id) => {\r\n      for (let i = 0; i < champions.length; i++) {\r\n        //if id and key matches then initialize data and end loop\r\n\r\n        if (champions[i].key === String(id)) {\r\n          self.recentChampions.push(\r\n            new Champion(champions[i].key, champions[i].name, champions[i].icon)\r\n          );\r\n          break;\r\n        }\r\n      }\r\n    });\r\n\r\n    //after the for loop through match list\r\n    //calculate averages\r\n    self.stats.avg_Kills = (killcount / matchNums).toFixed(2);\r\n    self.stats.avg_Death = (deathcount / matchNums).toFixed(2);\r\n    self.stats.avg_assists = (assistCount / matchNums).toFixed(2);\r\n    self.stats.diff_Roles = roleCount.length;\r\n    self.stats.diff_Queues = queueCount.length;\r\n    self.stats.diff_Champions = champIDs.length;\r\n    self.stats.win_Rate =\r\n      ((self.stats.wins / matchNums) * 100).toFixed(0) + \"%\";\r\n  }\r\n\r\n  setItem(thisItem: Item, arrayItem: any) {\r\n    //call to firebase to get item info\r\n    var checkdatabase = firebase.database().ref(\"items/\" + String(arrayItem));\r\n    checkdatabase.on(\"value\", (snapshot) => {\r\n      if (snapshot.val() != null) {\r\n        //check if keystone rune\r\n        thisItem.icon = snapshot.val().icon;\r\n        thisItem.name = snapshot.val().name;\r\n        thisItem.desc = snapshot.val().description;\r\n      } else {\r\n        thisItem.icon = null;\r\n      }\r\n    });\r\n\r\n    //if item was never found then initilaize to null\r\n  }\r\n\r\n  // Check if the items exist before rendering them\r\n\r\n  itemExists(item: Item) {\r\n    if (item.icon == null) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}]}