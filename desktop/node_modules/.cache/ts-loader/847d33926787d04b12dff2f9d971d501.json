{"remainingRequest":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js??ref--13-3!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue","mtime":1615412018941},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1610245779138},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmV2ZXJzZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzovVXNlcnMvTW9saW4vQ29tcGFuaW9uL2Rlc2t0b3Avbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkM6L1VzZXJzL01vbGluL0NvbXBhbmlvbi9kZXNrdG9wL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiQzovVXNlcnMvTW9saW4vQ29tcGFuaW9uL2Rlc2t0b3Avbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZVN1cGVyIjsKaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICJDOi9Vc2Vycy9Nb2xpbi9Db21wYW5pb24vZGVza3RvcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlQ2xhc3MiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIkM6L1VzZXJzL01vbGluL0NvbXBhbmlvbi9kZXNrdG9wL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAidnVlLXByb3BlcnR5LWRlY29yYXRvciI7CmltcG9ydCBEZXhpZSBmcm9tICJkZXhpZSI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7IC8vIEB0cy1pZ25vcmUKCmltcG9ydCBjaGFtcGlvbnMgZnJvbSAibG9sLWNoYW1waW9ucyI7IC8vdGhpcyBjbGFzcyByZXByZXNlbnRzIGEgdmlkZW8gaW5zaWRlIGEgZm9sZGVyCgp2YXIgVmlkZW8gPSBmdW5jdGlvbiBWaWRlbygpIHsKICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVmlkZW8pOwp9OyAvL3RoaXMgY2xhc3MgcmVwcmVzZW50cyBhIGZvbGRlcgoKCnZhciBWaWRlb0ZvbGRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgZnVuY3Rpb24gVmlkZW9Gb2xkZXIoKSB7CiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVmlkZW9Gb2xkZXIpOwoKICAgIHRoaXMudmlkZW9MaXN0ID0gW107CiAgfQoKICBfY3JlYXRlQ2xhc3MoVmlkZW9Gb2xkZXIsIFt7CiAgICBrZXk6ICJzZXREYXRlIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXREYXRlKGRhdGUpIHsKICAgICAgdGhpcy5kYXRlID0gZGF0ZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJzZXRUaW1lIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBzZXRUaW1lKHRpbWUpIHsKICAgICAgdGhpcy50aW1lID0gdGltZTsKICAgIH0KICB9LCB7CiAgICBrZXk6ICJhZGRWaWRlb1RvRm9sZGVyIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBhZGRWaWRlb1RvRm9sZGVyKHZpZGVvKSB7CiAgICAgIHRoaXMudmlkZW9MaXN0LnB1c2godmlkZW8pOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIFZpZGVvRm9sZGVyOwp9KCk7Cgp2YXIgSGlnaGxpZ2h0cyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1Z1ZSkgewogIF9pbmhlcml0cyhIaWdobGlnaHRzLCBfVnVlKTsKCiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihIaWdobGlnaHRzKTsKCiAgZnVuY3Rpb24gSGlnaGxpZ2h0cygpIHsKICAgIHZhciBfdGhpczsKCiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgSGlnaGxpZ2h0cyk7CgogICAgX3RoaXMgPSBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIF90aGlzLnZpZGVvTGlzdCA9IFtdOwogICAgX3RoaXMuY3VycmVudF9WaWRlbyA9ICIiOwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEhpZ2hsaWdodHMsIFt7CiAgICBrZXk6ICJzZXRWaWRlbyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gc2V0VmlkZW8obmV3VmlkZW8pIHsKICAgICAgdGhpcy5jdXJyZW50X1ZpZGVvID0gbmV3VmlkZW87CiAgICB9CiAgfSwgewogICAga2V5OiAic2V0Q2hhbXBpb24iLAogICAgdmFsdWU6IGZ1bmN0aW9uIHNldENoYW1waW9uKGZvbGRlcikgewogICAgICByZXR1cm4gZm9sZGVyLmNoYW1waW9uVVJMOwogICAgfQogIH0sIHsKICAgIGtleTogIm1vdW50ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9tb3VudGVkID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBzZWxmLCBzZXRGaXJzdFZpZGVvLCBsb2NhbERCLCByZWNlbnRHYW1lcywgb2xkZXJHYW1lcywgX2xvb3AsIGluZGV4LCBfaW5kZXgsIG9sZGVyVmlkZW9zLCB1cmxzOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBzZWxmID0gdGhpczsKICAgICAgICAgICAgICAgIHNldEZpcnN0VmlkZW8gPSBmYWxzZTsgLy9mZXRjaCByZWNlbnQgdmlkZW9zCiAgICAgICAgICAgICAgICAvL29wZW4gbG9jYWwgZGF0YWJhc2UKCiAgICAgICAgICAgICAgICBsb2NhbERCID0gbmV3IERleGllKCJoaWdobGlnaHRzREIiKTsKICAgICAgICAgICAgICAgIGxvY2FsREIudmVyc2lvbigxKS5zdG9yZXMoewogICAgICAgICAgICAgICAgICBtYXRjaGVzOiAibWF0Y2hfaWQsIG1hdGNoX3N0YXJ0X3RpbWUiLAogICAgICAgICAgICAgICAgICB2aWRlb3M6ICJtZWRpYV91cmwsIG1hdGNoX2lkLCB0aHVtYm5haWxfdXJsLCBoaWdobGlnaHRfc3RhcnRfdGltZSwgZHVyYXRpb24sIGhpZ2h0VHlwZSIKICAgICAgICAgICAgICAgIH0pOyAvL2dldCBsYXN0IDUgbW9zdCByZWNlbnQgZ2FtZXMKCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDY7CiAgICAgICAgICAgICAgICByZXR1cm4gbG9jYWxEQi50YWJsZSgibWF0Y2hlcyIpLm9yZGVyQnkoIm1hdGNoX3N0YXJ0X3RpbWUiKS5yZXZlcnNlKCkubGltaXQoNSkudG9BcnJheSgpWyJjYXRjaCJdKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDY6CiAgICAgICAgICAgICAgICByZWNlbnRHYW1lcyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA5OwogICAgICAgICAgICAgICAgcmV0dXJuIGxvY2FsREIudGFibGUoIm1hdGNoZXMiKS5vcmRlckJ5KCJtYXRjaF9zdGFydF90aW1lIikucmV2ZXJzZSgpLm9mZnNldCg1KS50b0FycmF5KClbImNhdGNoIl0oZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIG9sZGVyR2FtZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIC8vZGlzcGxheSByZXN1bHRzCiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiYXJyYXkgb2YgcmVjZW50IGdhbWVzOiAiLCByZWNlbnRHYW1lcyk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiYXJyYXkgb2Ygb2xkZXIgZ2FtZXM6ICIsIG9sZGVyR2FtZXMpOyAvL2xvb3AgdGhyb3VnaCBsYXN0IDUgZ2FtZXMgYW5kIHVzZSBnYW1lIGlkJ3MgdG8gcHVsbCBkYXRhCiAgICAgICAgICAgICAgICAvL0B0cy1pZ25vcmUKCiAgICAgICAgICAgICAgICBfbG9vcCA9IC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfbG9vcChpbmRleCkgewogICAgICAgICAgICAgICAgICB2YXIgbWF0Y2hfZGF0ZSwgdGVtcEZvbGRlciwgdmlkZW9zSW5NYXRjaCwgX3VybHMsIHRlbXBWaWRlbzsKCiAgICAgICAgICAgICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfbG9vcCQoX2NvbnRleHQpIHsKICAgICAgICAgICAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAgICAgICAgICAgbWF0Y2hfZGF0ZSA9IG5ldyBEYXRlKHJlY2VudEdhbWVzW2luZGV4XS5tYXRjaF9zdGFydF90aW1lKTsgLy9jcmVhdGUgbmV3IG1hdGNoCgogICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBGb2xkZXIgPSBuZXcgVmlkZW9Gb2xkZXIoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiQ2FsbGluZzogIiwgImh0dHBzOi8vbmExLmFwaS5yaW90Z2FtZXMuY29tL2xvbC9tYXRjaC92NC9tYXRjaGVzLyIgKyByZWNlbnRHYW1lc1tpbmRleF0ubWF0Y2hfaWQgKyAiP2FwaV9rZXk9UkdBUEktYzI2N2UzZTgtODdjZC00NGZlLTg5YWItYWZhOGY4ZmQxZGM5Iik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGF4aW9zLmdldCgiaHR0cHM6Ly9uYTEuYXBpLnJpb3RnYW1lcy5jb20vbG9sL21hdGNoL3Y0L21hdGNoZXMvIiArIHJlY2VudEdhbWVzW2luZGV4XS5tYXRjaF9pZCArICI/YXBpX2tleT1SR0FQSS1jMjY3ZTNlOC04N2NkLTQ0ZmUtODlhYi1hZmE4ZjhmZDFkYzkiKS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJyZXN1bHQgb2YgcmlvdCBjYWxsOiAiLCByZXN1bHQpOyAvL2dldCBnYW1lIG1vZGUKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wRm9sZGVyLmdhbWVNb2RlID0gcmVzdWx0LmRhdGEuZ2FtZU1vZGU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiZ2FtZW1vZGU6ICIsIHRlbXBGb2xkZXIuZ2FtZU1vZGUpOyAvL2ZpbmQgaWRlbnRpdHkgb2Ygb3V0IHVzZXIgZnJvbSBhcnJheTsKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzdWx0LmRhdGEucGFydGljaXBhbnRJZGVudGl0aWVzLmxlbmd0aCA9PT0gMTApIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCByZXN1bHQuZGF0YS5wYXJ0aWNpcGFudElkZW50aXRpZXMubGVuZ3RoOyBrKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL2lmIHBhcnRpY2lwYW50IGlkZW50aXR5IG1hdGNoZXMgbmFtZXYgaW4gbG9jYWwgc3RvcmFnZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vaWYgcGFydGljaXBhbnQgaWRlbnRpdGllcyBkb250IGV4aXN0IHRoZW4gaXQgd2FzIGEgcHJhY3RpY2UgZ2FtZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQuZGF0YS5wYXJ0aWNpcGFudElkZW50aXRpZXNba10ucGxheWVyLnN1bW1vbmVyTmFtZSA9PT0gd2luZG93LmxvY2FsU3RvcmFnZS5nZXRJdGVtKCJsb2NhbFVzZXJuYW1lIikpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vZ2V0IGdhbWUgb3V0Y29tZQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5kYXRhLnBhcnRpY2lwYW50c1trXS5zdGF0cy53aW4gPT09IHRydWUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcEZvbGRlci5nYW1lUmVzdWx0ID0gIlZpY3RvcnkiOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcEZvbGRlci5nYW1lUmVzdWx0ID0gIkRlZmVhdCI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IC8vZ2V0IGNoYW1waW9uIHVzZWQKCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIgbCA9IDA7IGwgPCBjaGFtcGlvbnMubGVuZ3RoOyBsKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGNoYW1waW9uc1tsXS5rZXkgPT09IFN0cmluZyhyZXN1bHQuZGF0YS5wYXJ0aWNpcGFudHNba10uY2hhbXBpb25JZCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wRm9sZGVyLmNoYW1waW9uVVJMID0gY2hhbXBpb25zW2xdLmljb247CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBGb2xkZXIuZ2FtZVJlc3VsdCA9ICJXaW4iOyAvL2dldCBjaGFtcGlvbiB1c2VkCgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBfbCA9IDA7IF9sIDwgY2hhbXBpb25zLmxlbmd0aDsgX2wrKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChjaGFtcGlvbnNbX2xdLmtleSA9PT0gU3RyaW5nKHJlc3VsdC5kYXRhLnBhcnRpY2lwYW50c1swXS5jaGFtcGlvbklkKSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcEZvbGRlci5jaGFtcGlvblVSTCA9IGNoYW1waW9uc1tfbF0uaWNvbjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgICAgICAgICAgIC8vc2V0IGRhdGUgYW5kIHRpbWUgZnJvbSB0aGUgZGF0YWJhc2UKICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wRm9sZGVyLnNldERhdGUobWF0Y2hfZGF0ZS50b0RhdGVTdHJpbmcoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcEZvbGRlci5zZXRUaW1lKG1hdGNoX2RhdGUudG9Mb2NhbGVUaW1lU3RyaW5nKCkpOyAvL2dldCBhbGwgdGhlIHZpZGVvcyB3aXRoIG1hdGNoaW5nIGlkcwoKICAgICAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gbG9jYWxEQi50YWJsZSgidmlkZW9zIikud2hlcmUoIm1hdGNoX2lkIikuZXF1YWxzKHJlY2VudEdhbWVzW2luZGV4XS5tYXRjaF9pZCkudG9BcnJheSgpWyJjYXRjaCJdKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICAgICAgICAgICAgdmlkZW9zSW5NYXRjaCA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIlZpZGVvcyBGb3VuZDogIiwgdmlkZW9zSW5NYXRjaCk7IC8vQHRzLWlnbm9yZQoKICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKF91cmxzID0gMDsgX3VybHMgPCB2aWRlb3NJbk1hdGNoLmxlbmd0aDsgX3VybHMrKykgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcFZpZGVvID0gbmV3IFZpZGVvKCk7IC8vIGNvbnNvbGUubG9nKCJkdXJhdGlvbjogIiwgbmV3IERhdGUgICh2aWRlb3NJbk1hdGNoW3VybHNdLmR1cmF0aW9uKS5nZXRTZWNvbmRzKCkrInMiKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJoaWdobGlnaHRfc3RhcnRfdGltZTogIiwgbmV3IERhdGUgICh2aWRlb3NJbk1hdGNoW3VybHNdLmhpZ2hsaWdodF9zdGFydF90aW1lKS50b0xvY2FsZVRpbWVTdHJpbmcoKSk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygiaGlnaHRUeXBlOiAiLCB2aWRlb3NJbk1hdGNoW3VybHNdLmhpZ2h0VHlwZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHZpZGVvc0luTWF0Y2hbdXJsc10uaGlnaHRUeXBlLnNsaWNlKDEpKTsgLy9tYWtlIGZpcnN0IGxldHRlciB1cHBlcmNhc2UKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJtZWRpYV91cmw6ICIsIHZpZGVvc0luTWF0Y2hbdXJsc10ubWVkaWFfdXJsKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJ0aHVtYm5haWxfdXJsOiAiLHZpZGVvc0luTWF0Y2hbdXJsc10udGh1bWJuYWlsX3VybCk7CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFzZXRGaXJzdFZpZGVvKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuY3VycmVudF9WaWRlbyA9IHZpZGVvc0luTWF0Y2hbX3VybHNdLm1lZGlhX3VybDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc2V0Rmlyc3RWaWRlbyA9IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGVtcFZpZGVvLnZpZGVvQWRkcmVzcyA9IHZpZGVvc0luTWF0Y2hbX3VybHNdLm1lZGlhX3VybDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBWaWRlby52aWRlb1N0YXJ0VGltZSA9IG5ldyBEYXRlKHZpZGVvc0luTWF0Y2hbX3VybHNdLmhpZ2hsaWdodF9zdGFydF90aW1lKS50b0xvY2FsZVRpbWVTdHJpbmcoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRlbXBWaWRlby5kdXJhdGlvbiA9IG5ldyBEYXRlKHZpZGVvc0luTWF0Y2hbX3VybHNdLmR1cmF0aW9uKS5nZXRTZWNvbmRzKCkgKyAicyI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wVmlkZW8uaGlnaGxpZ2h0VHlwZSA9IHZpZGVvc0luTWF0Y2hbX3VybHNdLmhpZ2h0VHlwZS5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHZpZGVvc0luTWF0Y2hbX3VybHNdLmhpZ2h0VHlwZS5zbGljZSgxKTsgLy9tYWtlIGZpcnN0IGxldHRlciB1cHBlcmNhc2UKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wVmlkZW8udGh1bWJuYWlsX3VybCA9IHZpZGVvc0luTWF0Y2hbX3VybHNdLnRodW1ibmFpbF91cmw7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0ZW1wRm9sZGVyLmFkZFZpZGVvVG9Gb2xkZXIodGVtcFZpZGVvKTsKICAgICAgICAgICAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYudmlkZW9MaXN0LnB1c2godGVtcEZvbGRlcik7CgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LCBfbG9vcCk7CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGluZGV4ID0gMDsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICAgIGlmICghKGluZGV4IDwgcmVjZW50R2FtZXMubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE5OwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmRlbGVnYXRlWWllbGQoX2xvb3AoaW5kZXgpLCAidDAiLCAxNik7CgogICAgICAgICAgICAgIGNhc2UgMTY6CiAgICAgICAgICAgICAgICBpbmRleCsrOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDE5OgogICAgICAgICAgICAgICAgX2luZGV4ID0gMDsKCiAgICAgICAgICAgICAgY2FzZSAyMDoKICAgICAgICAgICAgICAgIGlmICghKF9pbmRleCA8IG9sZGVyR2FtZXMubGVuZ3RoKSkgewogICAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDMwOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDIzOwogICAgICAgICAgICAgICAgcmV0dXJuIGxvY2FsREIudGFibGUoInZpZGVvcyIpLndoZXJlKCJtYXRjaF9pZCIpLmVxdWFscyhvbGRlckdhbWVzW19pbmRleF0ubWF0Y2hfaWQpLnRvQXJyYXkoKVsiY2F0Y2giXShmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyMzoKICAgICAgICAgICAgICAgIG9sZGVyVmlkZW9zID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygiT2xkZXIgVmlkZW9zIEZvdW5kOiAiLCBvbGRlclZpZGVvcyk7IC8vbG9vcCB0aHJvdWdoIHZpZGVvIGFkcmVzc2VzIGluIG1hdGNoZXMKICAgICAgICAgICAgICAgIC8vQHRzLWlnbm9yZQoKICAgICAgICAgICAgICAgIGZvciAodXJscyA9IDA7IHVybHMgPCBvbGRlclZpZGVvcy5sZW5ndGg7IHVybHMrKykgewogICAgICAgICAgICAgICAgICAvL2RlbGV0ZSBhY3R1YWwgdmlkZW9zIGZyb20gbG9jYWwgZGlzayB1c2luZyBvdmVyd29sZgogICAgICAgICAgICAgICAgICAvL0B0cy1pZ25vcmUKICAgICAgICAgICAgICAgICAgb3ZlcndvbGYubWVkaWEudmlkZW9zLmRlbGV0ZVZpZGVvKG9sZGVyVmlkZW9zW3VybHNdLm1lZGlhX3VybCk7CiAgICAgICAgICAgICAgICB9IC8vdGhlbiByZW1vdmUgdGhlbSBmcm9tIHRoZSB2aWRlb3MgZGF0YWJhc2UKCgogICAgICAgICAgICAgICAgbG9jYWxEQi50YWJsZSgidmlkZW9zIikud2hlcmUoIm1hdGNoX2lkIikuZXF1YWxzKHJlY2VudEdhbWVzW19pbmRleF0ubWF0Y2hfaWQpWyJkZWxldGUiXSgpLnRoZW4oZnVuY3Rpb24gKGRlbGV0ZUNvdW50KSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJEZWxldGVkIG9sZGVyIGhpZ2hsaWdodHMgdmlkZW9zOiAiLCBkZWxldGVDb3VudCk7CiAgICAgICAgICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAyNzoKICAgICAgICAgICAgICAgIF9pbmRleCsrOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyMDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDMwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzMjsKICAgICAgICAgICAgICAgIHJldHVybiBsb2NhbERCLnRhYmxlKCJtYXRjaGVzIikub3JkZXJCeSgibWF0Y2hfc3RhcnRfdGltZSIpLnJldmVyc2UoKS5vZmZzZXQoNSlbImRlbGV0ZSJdKCkudGhlbihmdW5jdGlvbiAoZGVsZXRlQ291bnQpIHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIkRlbGV0ZWQgb2xkIG1hdGNoIGRhdGEiLCBkZWxldGVDb3VudCk7CiAgICAgICAgICAgICAgICB9KVsiY2F0Y2giXShmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coZSk7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgICAgICByZXR1cm4gX21vdW50ZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIG1vdW50ZWQ7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJjcmVhdGVkIiwKICAgIHZhbHVlOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgICAvLyB3aW5kb3cgcmVzaXplCiAgICAgIHZhciBXaW5kb3dJZDsgLy9AdHMtaWdub3JlCgogICAgICBvdmVyd29sZi53aW5kb3dzLmdldEN1cnJlbnRXaW5kb3coZnVuY3Rpb24gKHJlcykgewogICAgICAgIFdpbmRvd0lkID0gcmVzLndpbmRvdy5pZDsKICAgICAgICBjb25zb2xlLmxvZygiV2luZG93IGlkOiAiLCBXaW5kb3dJZCk7CiAgICAgICAgdmFyIHNpemVTZXR0aW5ncyA9IHsKICAgICAgICAgIHdpbmRvd19pZDogV2luZG93SWQsCiAgICAgICAgICB3aWR0aDogMTYwMCwKICAgICAgICAgIGhlaWdodDogODAwLAogICAgICAgICAgYXV0b19kcGlfcmVzaXplOiB0cnVlCiAgICAgICAgfTsgLy9AdHMtaWdub3JlCgogICAgICAgIG92ZXJ3b2xmLndpbmRvd3MuY2hhbmdlU2l6ZShzaXplU2V0dGluZ3MsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICBjb25zb2xlLmxvZygiY2hhbmdlIHNpemUgY2FsbGJhY2s6ICIsIGUpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9XSk7CgogIHJldHVybiBIaWdobGlnaHRzOwp9KFZ1ZSk7CgpIaWdobGlnaHRzID0gX19kZWNvcmF0ZShbQ29tcG9uZW50XSwgSGlnaGxpZ2h0cyk7CmV4cG9ydCBkZWZhdWx0IEhpZ2hsaWdodHM7"},{"version":3,"sources":["C:\\Users\\Molin\\Companion\\desktop\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Molin\\Companion\\desktop\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\desktop\\src\\components\\Highlights.vue?vue&type=script&lang=ts&"],"names":[],"mappings":"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","sourcesContent":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\nimport { Component, Vue } from \"vue-property-decorator\";\r\nimport Dexie from \"dexie\";\r\nimport axios from \"axios\";\r\n// @ts-ignore\r\nimport champions from \"lol-champions\";\r\n\r\n//this class represents a video inside a folder\r\nclass Video {\r\n  public videoAddress: string;\r\n  public videoStartTime: string;\r\n  public duration: string;\r\n  public highlightType: string;\r\n  public thumbnail_url: string;\r\n}\r\n\r\n//this class represents a folder\r\nclass VideoFolder {\r\n  //if we query match id with riot we can probabyly get matchtype and champion used\r\n  public gameMode: string; //regular/aram/practice\r\n  public championURL: string;\r\n  public gameResult: string; //regular/aram/practice\r\n\r\n  public gameType: string; //regular/aram/practice\r\n  public champion: string; //url of champion img\r\n\r\n  //below is received from database\r\n  public date: string;\r\n  public time: string;\r\n  public videoList: Array<Video> = [];\r\n\r\n  setDate(date: string) {\r\n    this.date = date;\r\n  }\r\n\r\n  setTime(time: string) {\r\n    this.time = time;\r\n  }\r\n\r\n  addVideoToFolder(video: Video) {\r\n    this.videoList.push(video);\r\n  }\r\n}\r\n\r\n@Component\r\nexport default class Highlights extends Vue {\r\n  videoList: Array<VideoFolder> = [];\r\n  current_Video = \"\";\r\n\r\n  setVideo(newVideo: string) {\r\n    this.current_Video = newVideo;\r\n  }\r\n\r\n  setChampion(folder) {\r\n    return folder.championURL;\r\n  }\r\n\r\n  async mounted() {\r\n    let self = this;\r\n    let setFirstVideo = false;\r\n    //fetch recent videos\r\n\r\n    //open local database\r\n    var localDB = new Dexie(\"highlightsDB\");\r\n    localDB.version(1).stores({\r\n      matches: \"match_id, match_start_time\",\r\n      videos:\r\n        \"media_url, match_id, thumbnail_url, highlight_start_time, duration, hightType\",\r\n    });\r\n\r\n    //get last 5 most recent games\r\n    const recentGames = await localDB\r\n      .table(\"matches\")\r\n      .orderBy(\"match_start_time\")\r\n      .reverse()\r\n      .limit(5)\r\n      .toArray()\r\n      .catch((e) => console.log(e));\r\n\r\n    //get all other games\r\n    const olderGames = await localDB\r\n      .table(\"matches\")\r\n      .orderBy(\"match_start_time\")\r\n      .reverse()\r\n      .offset(5)\r\n      .toArray()\r\n      .catch((e) => console.log(e));\r\n\r\n    //display results\r\n    console.log(\"array of recent games: \", recentGames);\r\n    console.log(\"array of older games: \", olderGames);\r\n\r\n    //loop through last 5 games and use game id's to pull data\r\n    //@ts-ignore\r\n    for (let index = 0; index < recentGames.length; index++) {\r\n      let match_date = new Date(recentGames[index].match_start_time);\r\n\r\n      //create new match\r\n      let tempFolder = new VideoFolder();\r\n      console.log(\r\n        \"Calling: \",\r\n        \"https://na1.api.riotgames.com/lol/match/v4/matches/\" +\r\n          recentGames[index].match_id +\r\n          \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\"\r\n      );\r\n      await axios\r\n        .get(\r\n          \"https://na1.api.riotgames.com/lol/match/v4/matches/\" +\r\n            recentGames[index].match_id +\r\n            \"?api_key=RGAPI-c267e3e8-87cd-44fe-89ab-afa8f8fd1dc9\"\r\n        )\r\n        .then((result) => {\r\n          console.log(\"result of riot call: \", result);\r\n          //get game mode\r\n          tempFolder.gameMode = result.data.gameMode;\r\n          console.log(\"gamemode: \", tempFolder.gameMode);\r\n          //find identity of out user from array;\r\n\r\n          if (result.data.participantIdentities.length === 10) {\r\n            for (let k = 0; k < result.data.participantIdentities.length; k++) {\r\n              //if participant identity matches namev in local storage\r\n              //if participant identities dont exist then it was a practice game\r\n\r\n              if (\r\n                result.data.participantIdentities[k].player.summonerName ===\r\n                window.localStorage.getItem(\"localUsername\")\r\n              ) {\r\n                //get game outcome\r\n                if (result.data.participants[k].stats.win === true) {\r\n                  tempFolder.gameResult = \"Victory\";\r\n                } else {\r\n                  tempFolder.gameResult = \"Defeat\";\r\n                }\r\n\r\n                //get champion used\r\n                for (let l = 0; l < champions.length; l++) {\r\n                  if (\r\n                    champions[l].key ===\r\n                    String(result.data.participants[k].championId)\r\n                  ) {\r\n                    tempFolder.championURL = champions[l].icon;\r\n                    break;\r\n                  }\r\n                }\r\n\r\n                break;\r\n              }\r\n            }\r\n          } else {\r\n            tempFolder.gameResult = \"Win\";\r\n            //get champion used\r\n            for (let l = 0; l < champions.length; l++) {\r\n              if (\r\n                champions[l].key ===\r\n                String(result.data.participants[0].championId)\r\n              ) {\r\n                tempFolder.championURL = champions[l].icon;\r\n                break;\r\n              }\r\n            }\r\n          }\r\n        });\r\n      //set date and time from the database\r\n      tempFolder.setDate(match_date.toDateString());\r\n      tempFolder.setTime(match_date.toLocaleTimeString());\r\n\r\n      //get all the videos with matching ids\r\n      let videosInMatch = await localDB\r\n        .table(\"videos\")\r\n        .where(\"match_id\")\r\n        .equals(recentGames[index].match_id)\r\n        .toArray()\r\n        .catch((e) => console.log(e));\r\n      console.log(\"Videos Found: \", videosInMatch);\r\n\r\n      //@ts-ignore\r\n      for (let urls = 0; urls < videosInMatch.length; urls++) {\r\n        let tempVideo = new Video();\r\n\r\n        // console.log(\"duration: \", new Date  (videosInMatch[urls].duration).getSeconds()+\"s\");\r\n        // console.log(\"highlight_start_time: \", new Date  (videosInMatch[urls].highlight_start_time).toLocaleTimeString());\r\n        // console.log(\"hightType: \", videosInMatch[urls].hightType.charAt(0).toUpperCase() + videosInMatch[urls].hightType.slice(1)); //make first letter uppercase\r\n        // console.log(\"media_url: \", videosInMatch[urls].media_url);\r\n        // console.log(\"thumbnail_url: \",videosInMatch[urls].thumbnail_url);\r\n        if (!setFirstVideo) {\r\n          self.current_Video = videosInMatch[urls].media_url;\r\n          setFirstVideo = true;\r\n        }\r\n        tempVideo.videoAddress = videosInMatch[urls].media_url;\r\n        tempVideo.videoStartTime = new Date(\r\n          videosInMatch[urls].highlight_start_time\r\n        ).toLocaleTimeString();\r\n        tempVideo.duration =\r\n          new Date(videosInMatch[urls].duration).getSeconds() + \"s\";\r\n        tempVideo.highlightType =\r\n          videosInMatch[urls].hightType.charAt(0).toUpperCase() +\r\n          videosInMatch[urls].hightType.slice(1); //make first letter uppercase\r\n        tempVideo.thumbnail_url = videosInMatch[urls].thumbnail_url;\r\n\r\n        tempFolder.addVideoToFolder(tempVideo);\r\n      }\r\n\r\n      self.videoList.push(tempFolder);\r\n    }\r\n\r\n    //after this all the data is being displayed\r\n    //but now we need to delete the older games, so they dont pollute the database\r\n    //loop through older games and use game id's to delete data\r\n    //@ts-ignore\r\n    for (let index = 0; index < olderGames.length; index++) {\r\n      //get all the videos with matching ids\r\n      let olderVideos = await localDB\r\n        .table(\"videos\")\r\n        .where(\"match_id\")\r\n        .equals(olderGames[index].match_id)\r\n        .toArray()\r\n        .catch((e) => console.log(e));\r\n      console.log(\"Older Videos Found: \", olderVideos);\r\n\r\n      //loop through video adresses in matches\r\n      //@ts-ignore\r\n      for (let urls = 0; urls < olderVideos.length; urls++) {\r\n        //delete actual videos from local disk using overwolf\r\n        //@ts-ignore\r\n        overwolf.media.videos.deleteVideo(olderVideos[urls].media_url);\r\n      }\r\n\r\n      //then remove them from the videos database\r\n      localDB\r\n        .table(\"videos\")\r\n        .where(\"match_id\")\r\n        .equals(recentGames[index].match_id)\r\n        .delete()\r\n        .then((deleteCount) => {\r\n          console.log(\"Deleted older highlights videos: \", deleteCount);\r\n        })\r\n        .catch((e) => console.log(e));\r\n    }\r\n\r\n    //get all other games\r\n    await localDB\r\n      .table(\"matches\")\r\n      .orderBy(\"match_start_time\")\r\n      .reverse()\r\n      .offset(5)\r\n      .delete()\r\n      .then((deleteCount) => {\r\n        console.log(\"Deleted old match data\", deleteCount);\r\n      })\r\n      .catch((e) => console.log(e));\r\n  }\r\n\r\n  created() {\r\n    // window resize\r\n    let WindowId;\r\n    //@ts-ignore\r\n    overwolf.windows.getCurrentWindow(function (res) {\r\n      WindowId = res.window.id;\r\n      console.log(\"Window id: \", WindowId);\r\n      let sizeSettings = {\r\n        window_id: WindowId,\r\n        width: 1600,\r\n        height: 800,\r\n        auto_dpi_resize: true, //relevant only for native windows\r\n      };\r\n      //@ts-ignore\r\n      overwolf.windows.changeSize(sizeSettings, (e) => {\r\n        console.log(\"change size callback: \", e);\r\n      });\r\n    });\r\n  }\r\n}\r\n"],"sourceRoot":""}]}