{"remainingRequest":"C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\ts-loader\\index.js??ref--13-3!C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Luca\\Companion\\CoreApp\\background\\src\\App.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Luca\\Companion\\CoreApp\\background\\src\\App.vue","mtime":1608681494404},{"path":"C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1608685446369},{"path":"C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1608685447511},{"path":"C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\babel-loader\\lib\\index.js","mtime":1608685524005},{"path":"C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\ts-loader\\index.js","mtime":1608685447723},{"path":"C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1608685446369},{"path":"C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\vue-loader\\lib\\index.js","mtime":1608685551757}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQzpcXFVzZXJzXFxMdWNhXFxDb21wYW5pb25cXENvcmVBcHBcXGJhY2tncm91bmRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gIkM6XFxVc2Vyc1xcTHVjYVxcQ29tcGFuaW9uXFxDb3JlQXBwXFxiYWNrZ3JvdW5kXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzpcXFVzZXJzXFxMdWNhXFxDb21wYW5pb25cXENvcmVBcHBcXGJhY2tncm91bmRcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gIkM6XFxVc2Vyc1xcTHVjYVxcQ29tcGFuaW9uXFxDb3JlQXBwXFxiYWNrZ3JvdW5kXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIjsKaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tICJDOlxcVXNlcnNcXEx1Y2FcXENvbXBhbmlvblxcQ29yZUFwcFxcYmFja2dyb3VuZFxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vZ2V0UHJvdG90eXBlT2YiOwppbXBvcnQgX2luaGVyaXRzIGZyb20gIkM6XFxVc2Vyc1xcTHVjYVxcQ29tcGFuaW9uXFxDb3JlQXBwXFxiYWNrZ3JvdW5kXFxub2RlX21vZHVsZXNcXEBiYWJlbFxccnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCB7IF9fZGVjb3JhdGUgfSBmcm9tICJ0c2xpYiI7CmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IHdpbmRvd05hbWVzLCBmb3J0bml0ZUNsYXNzSWQgfSBmcm9tICIuLi8uLi9zaGFyZWQvY29uc3RhbnRzL2NvbnN0cyI7CmltcG9ydCB7IE9XR2FtZXMgfSBmcm9tICcuLi8uLi9zaGFyZWQvbGlicy9vdy1nYW1lcyc7CmltcG9ydCB7IE9XR2FtZUxpc3RlbmVyIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2xpYnMvb3ctZ2FtZS1saXN0ZW5lcic7CmltcG9ydCB7IE9XV2luZG93IH0gZnJvbSAnLi4vLi4vc2hhcmVkL2xpYnMvb3ctd2luZG93JzsgLy8gVGhlIGJhY2tncm91bmQgY29udHJvbGxlciBob2xkcyBhbGwgb2YgdGhlIGFwcCdzIGJhY2tncm91bmQgbG9naWMgLSBoZW5jZSBpdHMgbmFtZS4gaXQgaGFzCi8vIG1hbnkgcG9zc2libGUgdXNlIGNhc2VzLCBmb3IgZXhhbXBsZSBzaGFyaW5nIGRhdGEgYmV0d2VlbiB3aW5kb3dzLCBvciwgaW4gb3VyIGNhc2UsCi8vIG1hbmFnaW5nIHdoaWNoIHdpbmRvdyBpcyBjdXJyZW50bHkgcHJlc2VudGVkIHRvIHRoZSB1c2VyLiBUbyB0aGF0IGVuZCwgaXQgaG9sZHMgYSBkaWN0aW9uYXJ5Ci8vIG9mIHRoZSB3aW5kb3dzIGF2YWlsYWJsZSBpbiB0aGUgYXBwLgovLyBPdXIgYmFja2dyb3VuZCBjb250cm9sbGVyIGltcGxlbWVudHMgdGhlIFNpbmdsZXRvbiBkZXNpZ24gcGF0dGVybiwgc2luY2Ugb25seSBvbmUKLy8gaW5zdGFuY2Ugb2YgaXQgc2hvdWxkIGV4aXN0LgoKdmFyIEFwcCA9Ci8qI19fUFVSRV9fKi8KZnVuY3Rpb24gKF9WdWUpIHsKICBfaW5oZXJpdHMoQXBwLCBfVnVlKTsKCiAgZnVuY3Rpb24gQXBwKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBcHApOwoKICAgIF90aGlzID0gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgX2dldFByb3RvdHlwZU9mKEFwcCkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7CiAgICBfdGhpcy5fd2luZG93cyA9IHt9OwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEFwcCwgW3sKICAgIGtleTogIm1vdW50ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAgIHRoaXMuX3dpbmRvd3MgPSB7fTsgLy8gUG9wdWxhdGluZyB0aGUgYmFja2dyb3VuZCBjb250cm9sbGVyJ3Mgd2luZG93IGRpY3Rpb25hcnkKCiAgICAgIHRoaXMuX3dpbmRvd3Nbd2luZG93TmFtZXMuZGVza3RvcF0gPSBuZXcgT1dXaW5kb3cod2luZG93TmFtZXMuZGVza3RvcCk7CiAgICAgIHRoaXMuX3dpbmRvd3Nbd2luZG93TmFtZXMuaW5HYW1lXSA9IG5ldyBPV1dpbmRvdyh3aW5kb3dOYW1lcy5pbkdhbWUpOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZWQiLAogICAgLy8gV2hlbiBydW5uaW5nIHRoZSBhcHAsIHN0YXJ0IGxpc3RlbmluZyB0byBnYW1lcycgc3RhdHVzIGFuZCBkZWNpZGUgd2hpY2ggd2luZG93IHNob3VsZAogICAgLy8gYmUgbGF1bmNoZWQgZmlyc3QsIGJhc2VkIG9uIHdoZXRoZXIgRm9ydG5pdGUgaXMgY3VycmVudGx5IHJ1bm5pbmcKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfY3JlYXRlZCA9IF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgdmFyIGN1cnJXaW5kb3c7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgLy8gV2hlbiBhIEZvcnRuaXRlIGdhbWUgaXMgc3RhcnRlZCBvciBpcyBlbmRlZCwgdG9nZ2xlIHRoZSBhcHAncyB3aW5kb3dzCiAgICAgICAgICAgICAgICB0aGlzLl9nYW1lTGlzdGVuZXIgPSBuZXcgT1dHYW1lTGlzdGVuZXIoewogICAgICAgICAgICAgICAgICBvbkdhbWVTdGFydGVkOiB0aGlzLnRvZ2dsZVdpbmRvd3MuYmluZCh0aGlzKSwKICAgICAgICAgICAgICAgICAgb25HYW1lRW5kZWQ6IHRoaXMudG9nZ2xlV2luZG93cy5iaW5kKHRoaXMpCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICB0aGlzLl9nYW1lTGlzdGVuZXIuc3RhcnQoKTsKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmlzRm9ydG5pdGVSdW5uaW5nKCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIGlmICghX2NvbnRleHQuc2VudCkgewogICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSB3aW5kb3dOYW1lcy5pbkdhbWU7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IHdpbmRvd05hbWVzLmRlc2t0b3A7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIGN1cnJXaW5kb3cgPSBfY29udGV4dC50MDsKCiAgICAgICAgICAgICAgICB0aGlzLl93aW5kb3dzW2N1cnJXaW5kb3ddLnJlc3RvcmUoKTsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgICAgIHJldHVybiBfY3JlYXRlZC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gY3JlYXRlZDsKICAgIH0oKQogIH0sIHsKICAgIGtleTogInRvZ2dsZVdpbmRvd3MiLAogICAgdmFsdWU6IGZ1bmN0aW9uIHRvZ2dsZVdpbmRvd3MoaW5mbykgewogICAgICBpZiAoIWluZm8gfHwgIXRoaXMuaXNHYW1lRm9ydG5pdGUoaW5mbykpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIGlmIChpbmZvLmlzUnVubmluZykgewogICAgICAgIHRoaXMuX3dpbmRvd3Nbd2luZG93TmFtZXMuZGVza3RvcF0uY2xvc2UoKTsKCiAgICAgICAgdGhpcy5fd2luZG93c1t3aW5kb3dOYW1lcy5pbkdhbWVdLnJlc3RvcmUoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLl93aW5kb3dzW3dpbmRvd05hbWVzLmluR2FtZV0uY2xvc2UoKTsKCiAgICAgICAgdGhpcy5fd2luZG93c1t3aW5kb3dOYW1lcy5kZXNrdG9wXS5yZXN0b3JlKCk7CiAgICAgIH0KICAgIH0KICB9LCB7CiAgICBrZXk6ICJpc0ZvcnRuaXRlUnVubmluZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2lzRm9ydG5pdGVSdW5uaW5nID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGluZm87CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBPV0dhbWVzLmdldFJ1bm5pbmdHYW1lSW5mbygpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBpbmZvID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgaW5mbyAmJiBpbmZvLmlzUnVubmluZyAmJiB0aGlzLmlzR2FtZUZvcnRuaXRlKGluZm8pKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gaXNGb3J0bml0ZVJ1bm5pbmcoKSB7CiAgICAgICAgcmV0dXJuIF9pc0ZvcnRuaXRlUnVubmluZy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gaXNGb3J0bml0ZVJ1bm5pbmc7CiAgICB9KCkgLy8gSWRlbnRpZnkgd2hldGhlciB0aGUgUnVubmluZ0dhbWVJbmZvIG9iamVjdCB3ZSBoYXZlIHJlZmVyZW5jZXMgRm9ydG5pdGUKCiAgfSwgewogICAga2V5OiAiaXNHYW1lRm9ydG5pdGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIGlzR2FtZUZvcnRuaXRlKGluZm8pIHsKICAgICAgcmV0dXJuIGluZm8uY2xhc3NJZCA9PT0gZm9ydG5pdGVDbGFzc0lkOwogICAgfQogIH1dKTsKCiAgcmV0dXJuIEFwcDsKfShWdWUpOwoKQXBwID0gX19kZWNvcmF0ZShbQ29tcG9uZW50XSwgQXBwKTsKZXhwb3J0IGRlZmF1bHQgQXBwOw=="},{"version":3,"sources":["C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Luca\\Companion\\CoreApp\\background\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Luca\\Companion\\CoreApp\\background\\src\\App.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;;AAIA,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;AACA,SAAS,WAAT,EAAsB,eAAtB,QAA6C,+BAA7C;AACA,SAAS,OAAT,QAAwB,4BAAxB;AACA,SAAS,cAAT,QAA+B,oCAA/B;AACA,SAAS,QAAT,QAAyB,6BAAzB,C,CAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAqB,GAArB;AAAA;AAAA;AAAA;;AAAA,iBAAA;AAAA;;AAAA;;;AACY,UAAA,QAAA,GAAW,EAAX;AADZ;AAiDC;;AAjDD;AAAA;AAAA,8BAIW;AACH,WAAK,QAAL,GAAgB,EAAhB,CADG,CAEH;;AACA,WAAK,QAAL,CAAc,WAAW,CAAC,OAA1B,IAAqC,IAAI,QAAJ,CAAa,WAAW,CAAC,OAAzB,CAArC;AACA,WAAK,QAAL,CAAc,WAAW,CAAC,MAA1B,IAAoC,IAAI,QAAJ,CAAa,WAAW,CAAC,MAAzB,CAApC;AAEH;AAVL;AAAA;AAYI;AACA;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeO;AACA,qBAAK,aAAL,GAAqB,IAAI,cAAJ,CAAmB;AACpC,kBAAA,aAAa,EAAE,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CADqB;AAEpC,kBAAA,WAAW,EAAE,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB;AAFuB,iBAAnB,CAArB;;AAIC,qBAAK,aAAL,CAAmB,KAAnB;;AApBR;AAAA,uBAqBiC,KAAK,iBAAL,EArBjC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,8BAqB4D,WAAW,CAAC,MArBxE;AAAA;AAAA;;AAAA;AAAA,8BAqBiF,WAAW,CAAC,OArB7F;;AAAA;AAqBc,gBAAA,UArBd;;AAsBQ,qBAAK,QAAL,CAAc,UAAd,EAA0B,OAA1B;;AAtBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kCAyB0B,IAzB1B,EAyB8B;AACtB,UAAI,CAAC,IAAD,IAAS,CAAC,KAAK,cAAL,CAAoB,IAApB,CAAd,EAAyC;AACrC;AACH;;AAED,UAAI,IAAI,CAAC,SAAT,EAAoB;AAChB,aAAK,QAAL,CAAc,WAAW,CAAC,OAA1B,EAAmC,KAAnC;;AACA,aAAK,QAAL,CAAc,WAAW,CAAC,MAA1B,EAAkC,OAAlC;AACH,OAHD,MAGO;AACH,aAAK,QAAL,CAAc,WAAW,CAAC,MAA1B,EAAkC,KAAlC;;AACA,aAAK,QAAL,CAAc,WAAW,CAAC,OAA1B,EAAmC,OAAnC;AACH;AACJ;AArCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwC2B,OAAO,CAAC,kBAAR,EAxC3B;;AAAA;AAwCc,gBAAA,IAxCd;AAAA,kDA0Ce,IAAI,IAAI,IAAI,CAAC,SAAb,IAA0B,KAAK,cAAL,CAAoB,IAApB,CA1CzC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QA6CI;;AA7CJ;AAAA;AAAA,mCA8C2B,IA9C3B,EA8CgD;AACxC,aAAO,IAAI,CAAC,OAAL,KAAiB,eAAxB;AACH;AAhDL;;AAAA;AAAA,EAAiC,GAAjC,CAAA;;AAAqB,GAAG,GAAA,UAAA,CAAA,CADvB,SACuB,CAAA,EAAH,GAAG,CAAH;eAAA,G","sourcesContent":["\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport { windowNames, fortniteClassId } from \"../../shared/constants/consts\";\nimport { OWGames } from '../../shared/libs/ow-games';\nimport { OWGameListener } from '../../shared/libs/ow-game-listener';\nimport { OWWindow } from '../../shared/libs/ow-window';\n// @ts-ignore\nimport RunningGameInfo = overwolf.games.RunningGameInfo;\n// The background controller holds all of the app's background logic - hence its name. it has\n// many possible use cases, for example sharing data between windows, or, in our case,\n// managing which window is currently presented to the user. To that end, it holds a dictionary\n// of the windows available in the app.\n// Our background controller implements the Singleton design pattern, since only one\n// instance of it should exist.\n@Component\nexport default class App extends Vue {\n    private _windows = {};\n    private _gameListener: OWGameListener;\n\n    mounted() {\n        this._windows = {};\n        // Populating the background controller's window dictionary\n        this._windows[windowNames.desktop] = new OWWindow(windowNames.desktop);\n        this._windows[windowNames.inGame] = new OWWindow(windowNames.inGame);\n\n    };\n\n    // When running the app, start listening to games' status and decide which window should\n    // be launched first, based on whether Fortnite is currently running\n   async created() {\n       // When a Fortnite game is started or is ended, toggle the app's windows\n       this._gameListener = new OWGameListener({\n           onGameStarted: this.toggleWindows.bind(this),\n           onGameEnded: this.toggleWindows.bind(this)\n       });\n        this._gameListener.start();\n        const currWindow = await this.isFortniteRunning() ? windowNames.inGame : windowNames.desktop;\n        this._windows[currWindow].restore();\n    }\n\n    private toggleWindows(info) {\n        if (!info || !this.isGameFortnite(info)) {\n            return;\n        }\n\n        if (info.isRunning) {\n            this._windows[windowNames.desktop].close();\n            this._windows[windowNames.inGame].restore();\n        } else {\n            this._windows[windowNames.inGame].close();\n            this._windows[windowNames.desktop].restore();\n        }\n    }\n\n    private async isFortniteRunning(): Promise<boolean> {\n        const info = await OWGames.getRunningGameInfo();\n\n        return info && info.isRunning && this.isGameFortnite(info);\n    }\n\n    // Identify whether the RunningGameInfo object we have references Fortnite\n    private isGameFortnite(info: RunningGameInfo) {\n        return info.classId === fortniteClassId;\n    }\n}\n"],"sourceRoot":""}]}