{"remainingRequest":"C:\\Users\\Molin\\Companion\\in-game\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\in-game\\src\\App.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\in-game\\src\\App.vue","mtime":1611190309519},{"path":"C:\\Users\\Molin\\Companion\\in-game\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\in-game\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\in-game\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\in-game\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmltcG9ydCB7Q29tcG9uZW50LCBWdWV9IGZyb20gInZ1ZS1wcm9wZXJ0eS1kZWNvcmF0b3IiOwppbXBvcnQge09XR2FtZXNFdmVudHN9IGZyb20gIi4uLy4uL3NoYXJlZC9saWJzL293LWdhbWVzLWV2ZW50cyI7CmltcG9ydCB7aG90a2V5cywgaW50ZXJlc3RpbmdGZWF0dXJlcywgd2luZG93TmFtZXN9IGZyb20gIi4uLy4uL3NoYXJlZC9jb25zdGFudHMvY29uc3RzIjsKaW1wb3J0IHtPV0hvdGtleXN9IGZyb20gIi4uLy4uL3NoYXJlZC9saWJzL293LWhvdGtleXMiOwppbXBvcnQge09XV2luZG93fSBmcm9tICIuLi8uLi9zaGFyZWQvbGlicy9vdy13aW5kb3ciOwovLyBAdHMtaWdub3JlCmxldCBXaW5kb3dTdGF0ZSA9IG92ZXJ3b2xmLndpbmRvd3MuV2luZG93U3RhdGU7CgoKCgpAQ29tcG9uZW50CmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcCBleHRlbmRzIFZ1ZXsKICAgIHByaXZhdGUgX2dhbWVFdmVudHNMaXN0ZW5lcjogT1dHYW1lc0V2ZW50czsKICAgIHByaXZhdGUgX2V2ZW50c0xvZzogSFRNTEVsZW1lbnQ7CiAgICBwcml2YXRlIF9pbmZvTG9nOiBIVE1MRWxlbWVudDsKICAgIHB1YmxpYyBldmVudHM6IEFycmF5PGFueT4gPSBbXTsKICAgIHB1YmxpYyBpbmZvczogQXJyYXk8YW55PiA9IFtdOwogICAgX2JhY2tncm91bmRXaW5kb3c6IE9XV2luZG93OwogICAgY3VycldpbmRvdzogT1dXaW5kb3c7CiAgICBfbW9kYWw6IEhUTUxFbGVtZW50OwogICAgX2Nsb3NlQnV0dG9uOiBIVE1MRWxlbWVudDsKICAgIF9taW5pbWl6ZUhlYWRlckJ1dHRvbjogSFRNTEVsZW1lbnQ7CiAgICBfZXhpdEJ1dHRvbjogSFRNTEVsZW1lbnQ7CiAgICBfbWluaW1pemVCdXR0b246IEhUTUxFbGVtZW50OwogICAgX2hlYWRlcjogSFRNTEVsZW1lbnQ7CiAgICBfdmVyc2lvbjogSFRNTEVsZW1lbnQ7CgogICAgX3Nob3dFeGl0TWluaW1pemVNb2RhbCgpIHsKICAgICAgICB0aGlzLl9tb2RhbC5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKICAgIH0KICAgIF9oaWRlRXhpdE1pbmltaXplTW9kYWwoKSB7CiAgICAgICAgdGhpcy5fbW9kYWwuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIH0KICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5fZXZlbnRzTG9nID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2V2ZW50c0xvZycpOwogICAgICAgIHRoaXMuX2luZm9Mb2cgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaW5mb0xvZycpOwoKICAgICAgICB0aGlzLnNldFRvZ2dsZUhvdGtleUJlaGF2aW9yKCk7CiAgICAgICAgdGhpcy5zZXRUb2dnbGVIb3RrZXlUZXh0KCk7CiAgICAgICAgLy8gTGlzdGVuIHRvIFggYnV0dG9uIGNsaWNrCiAgICAgICAgdGhpcy5fY2xvc2VCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCB0aGlzLl9zaG93RXhpdE1pbmltaXplTW9kYWwpOwogICAgICAgIC8vIExpc3RlbiB0byBtaW5pbWl6ZSBjbGljawogICAgICAgIHRoaXMuX21pbmltaXplSGVhZGVyQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgKCkgPT4gewogICAgICAgICAgICB0aGlzLl9iYWNrZ3JvdW5kV2luZG93Lm1pbmltaXplKCk7CiAgICAgICAgfSk7CiAgICAgICAgLy8gQ2xvc2UgYXBwIG9uIGV4aXQgY2xpY2sKICAgICAgICB0aGlzLl9leGl0QnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgKCkgPT4gewogICAgICAgICAgICB0aGlzLl9iYWNrZ3JvdW5kV2luZG93LmNsb3NlKCk7CiAgICAgICAgfSk7CiAgICAgICAgLy8gTWluaW1pemUgYXBwIG9uIG1pbmltaXplIGNsaWNrCiAgICAgICAgdGhpcy5fbWluaW1pemVCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCAoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuX2JhY2tncm91bmRXaW5kb3cubWluaW1pemUoKTsKICAgICAgICAgICAgdGhpcy5faGlkZUV4aXRNaW5pbWl6ZU1vZGFsKCk7CiAgICAgICAgfSk7CiAgICAgICAgLy8gV2hlbiB0aGUgdXNlciBjbGlja3MgYW55d2hlcmUgb3V0c2lkZSBvZiB0aGUgbW9kYWwsIGNsb3NlIGl0CiAgICAgICAgd2luZG93Lm9uY2xpY2sgPSAoZXZlbnQpID0+IHsKICAgICAgICAgICAgaWYgKGV2ZW50LnRhcmdldCA9PSB0aGlzLl9tb2RhbCkgewogICAgICAgICAgICAgICAgdGhpcy5faGlkZUV4aXRNaW5pbWl6ZU1vZGFsKCk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIHRoaXMuY3VycldpbmRvdy5kcmFnTW92ZSh0aGlzLl9oZWFkZXIpOwoKICAgIH0KCiAgICBwdWJsaWMgY3JlYXRlZCgpIHsKICAgICAgICAvLyBCYWNrZ3JvdW5kIHdpbmRvdzoKICAgICAgICB0aGlzLl9iYWNrZ3JvdW5kV2luZG93ID0gbmV3IE9XV2luZG93KCdiYWNrZ3JvdW5kJyk7CiAgICAgICAgdGhpcy5jdXJyV2luZG93ID0gbmV3IE9XV2luZG93KCdpbl9nYW1lJyk7CiAgICAgICAgLy8gUGFnZSBlbGVtZW50czoKICAgICAgICB0aGlzLl9tb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJleGl0TWluaW1pemVNb2RhbCIpOwogICAgICAgIHRoaXMuX2Nsb3NlQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNsb3NlQnV0dG9uIik7CiAgICAgICAgdGhpcy5fbWluaW1pemVIZWFkZXJCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibWluaW1pemVCdXR0b24iKTsKICAgICAgICB0aGlzLl9leGl0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImV4aXQiKTsKICAgICAgICB0aGlzLl9taW5pbWl6ZUJ1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtaW5pbWl6ZSIpOwogICAgICAgIHRoaXMuX2hlYWRlciA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoImFwcC1oZWFkZXIiKVswXSBhcyBIVE1MRWxlbWVudDsKICAgICAgICB0aGlzLl92ZXJzaW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInZlcnNpb24iKTsKICAgICAgICB0aGlzLl9nYW1lRXZlbnRzTGlzdGVuZXIgPSBuZXcgT1dHYW1lc0V2ZW50cyh7CiAgICAgICAgICAgICAgICBvbkluZm9VcGRhdGVzOiB0aGlzLm9uSW5mb1VwZGF0ZXMuYmluZCh0aGlzKSwKICAgICAgICAgICAgICAgIG9uTmV3RXZlbnRzOiB0aGlzLm9uTmV3RXZlbnRzLmJpbmQodGhpcykKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaW50ZXJlc3RpbmdGZWF0dXJlcyk7CiAgICAgICAgdGhpcy5fZ2FtZUV2ZW50c0xpc3RlbmVyLnN0YXJ0KCk7CiAgICB9CgogICAgcHJpdmF0ZSBvbkluZm9VcGRhdGVzKGluZm8pIHsKICAgICAgdGhpcy5pbmZvcy5wdXNoKGluZm8pOwogICAgfQoKICAgIC8vIFNwZWNpYWwgZXZlbnRzIHdpbGwgYmUgaGlnaGxpZ2h0ZWQgaW4gdGhlIGV2ZW50IGxvZwogICAgcHJpdmF0ZSBvbk5ld0V2ZW50cyhlKSB7CiAgICAgICAgdGhpcy5ldmVudHMucHVzaChlKTsKICAgIH0KCiAgICAvLyBEaXNwbGF5cyB0aGUgdG9nZ2xlIG1pbmltaXplL3Jlc3RvcmUgaG90a2V5IGluIHRoZSB3aW5kb3cgaGVhZGVyCiAgICBwcml2YXRlIGFzeW5jIHNldFRvZ2dsZUhvdGtleVRleHQoKSB7CiAgICAgICAgY29uc3QgaG90a2V5VGV4dCA9IGF3YWl0IE9XSG90a2V5cy5nZXRIb3RrZXlUZXh0KGhvdGtleXMudG9nZ2xlKTsKICAgICAgICBjb25zdCBob3RrZXlFbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2hvdGtleScpOwogICAgICAgIGhvdGtleUVsZW0udGV4dENvbnRlbnQgPSBob3RrZXlUZXh0OwogICAgfQoKICAgIC8vIFNldHMgdG9nZ2xlSW5HYW1lV2luZG93IGFzIHRoZSBiZWhhdmlvciBmb3IgdGhlIEN0cmwrRiBob3RrZXkKICAgIHByaXZhdGUgYXN5bmMgc2V0VG9nZ2xlSG90a2V5QmVoYXZpb3IoKSB7CiAgICAgICAgY29uc3QgdG9nZ2xlSW5HYW1lV2luZG93ID0gYXN5bmMgaG90a2V5UmVzdWx0ID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coYHByZXNzZWQgaG90a2V5IGZvciAke2hvdGtleVJlc3VsdC5mZWF0dXJlSWR9YCk7CiAgICAgICAgICAgIGNvbnN0IGluR2FtZVN0YXRlID0gYXdhaXQgdGhpcy5nZXRXaW5kb3dTdGF0ZSgpOwoKICAgICAgICAgICAgaWYgKGluR2FtZVN0YXRlLndpbmRvd19zdGF0ZSA9PT0gV2luZG93U3RhdGUuTk9STUFMIHx8CiAgICAgICAgICAgICAgICBpbkdhbWVTdGF0ZS53aW5kb3dfc3RhdGUgPT09IFdpbmRvd1N0YXRlLk1BWElNSVpFRCkgewogICAgICAgICAgICAgICAgdGhpcy5jdXJyV2luZG93Lm1pbmltaXplKCk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoaW5HYW1lU3RhdGUud2luZG93X3N0YXRlID09PSBXaW5kb3dTdGF0ZS5NSU5JTUlaRUQgfHwKICAgICAgICAgICAgICAgIGluR2FtZVN0YXRlLndpbmRvd19zdGF0ZSA9PT0gV2luZG93U3RhdGUuQ0xPU0VEKSB7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJXaW5kb3cucmVzdG9yZSgpOwogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBPV0hvdGtleXMub25Ib3RrZXlEb3duKGhvdGtleXMudG9nZ2xlLCB0b2dnbGVJbkdhbWVXaW5kb3cpOwogICAgfQogICAgcHVibGljIGFzeW5jIGdldFdpbmRvd1N0YXRlKCkgewogICAgICAgIHJldHVybiBhd2FpdCB0aGlzLmN1cnJXaW5kb3cuZ2V0V2luZG93U3RhdGUoKTsKICAgIH0KfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n        <div id=\"logs\">\r\n            <div id=\"events\" class=\"logColumn\">\r\n                <h1>Game Events</h1>\r\n                <div id=\"eventsLog\" class=\"dataText\">\r\n                    <p v-for=\"event in events\" :key=\"event\">\r\n                        {{event}}\r\n                    </p>\r\n                </div>\r\n                <button id=\"copyEvents\" class=\"logCopy\">\r\n                    COPY GAME EVENTS\r\n                </button>\r\n            </div>\r\n            <div id=\"infoUpdates\" class=\"logColumn\">\r\n                <h1>Info Updates</h1>\r\n                <div id=\"infoLog\" class=\"dataText\">\r\n                    <p v-for=\"info in infos\" :key=\"info\">\r\n                        {{info}}\r\n                    </p>\r\n                </div>\r\n                <button id=\"copyInfo\" class=\"logCopy\">\r\n                    COPY INFO UPDATES\r\n                </button>\r\n            </div>\r\n        </div>\r\n<!--        <div id=\"other\">-->\r\n<!--            <h1>Real time Game Data</h1>-->\r\n<!--            <p id=\"infoParagraph\">-->\r\n<!--                The background controller of this app is listening to all the game-->\r\n<!--                events and info updates, and sends them to this window, that prints-->\r\n<!--                them to the screen. Some specific events (startMatch, Kill and Death)-->\r\n<!--                are painted in <span style=\"color: #00DEFA\">teal</span> and logged to-->\r\n<!--                the developers console.-->\r\n<!--            </p>-->\r\n<!--            <div id=\"ad\"></div>-->\r\n<!--            <p id=\"sampleAdText\">-->\r\n<!--                This is a sample ad (400x300px) of the best size-->\r\n<!--            </p>-->\r\n<!--        </div>-->\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n\r\n    import {Component, Vue} from \"vue-property-decorator\";\r\n    import {OWGamesEvents} from \"../../shared/libs/ow-games-events\";\r\n    import {hotkeys, interestingFeatures, windowNames} from \"../../shared/constants/consts\";\r\n    import {OWHotkeys} from \"../../shared/libs/ow-hotkeys\";\r\n    import {OWWindow} from \"../../shared/libs/ow-window\";\r\n    // @ts-ignore\r\n    let WindowState = overwolf.windows.WindowState;\r\n\r\n\r\n    \r\n\r\n    @Component\r\n    export default class App extends Vue{\r\n        private _gameEventsListener: OWGamesEvents;\r\n        private _eventsLog: HTMLElement;\r\n        private _infoLog: HTMLElement;\r\n        public events: Array<any> = [];\r\n        public infos: Array<any> = [];\r\n        _backgroundWindow: OWWindow;\r\n        currWindow: OWWindow;\r\n        _modal: HTMLElement;\r\n        _closeButton: HTMLElement;\r\n        _minimizeHeaderButton: HTMLElement;\r\n        _exitButton: HTMLElement;\r\n        _minimizeButton: HTMLElement;\r\n        _header: HTMLElement;\r\n        _version: HTMLElement;\r\n\r\n        _showExitMinimizeModal() {\r\n            this._modal.style.display = \"block\";\r\n        }\r\n        _hideExitMinimizeModal() {\r\n            this._modal.style.display = \"none\";\r\n        }\r\n        mounted() {\r\n            this._eventsLog = document.getElementById('eventsLog');\r\n            this._infoLog = document.getElementById('infoLog');\r\n\r\n            this.setToggleHotkeyBehavior();\r\n            this.setToggleHotkeyText();\r\n            // Listen to X button click\r\n            this._closeButton.addEventListener(\"click\", this._showExitMinimizeModal);\r\n            // Listen to minimize click\r\n            this._minimizeHeaderButton.addEventListener(\"click\", () => {\r\n                this._backgroundWindow.minimize();\r\n            });\r\n            // Close app on exit click\r\n            this._exitButton.addEventListener(\"click\", () => {\r\n                this._backgroundWindow.close();\r\n            });\r\n            // Minimize app on minimize click\r\n            this._minimizeButton.addEventListener(\"click\", () => {\r\n                this._backgroundWindow.minimize();\r\n                this._hideExitMinimizeModal();\r\n            });\r\n            // When the user clicks anywhere outside of the modal, close it\r\n            window.onclick = (event) => {\r\n                if (event.target == this._modal) {\r\n                    this._hideExitMinimizeModal();\r\n                }\r\n            };\r\n            this.currWindow.dragMove(this._header);\r\n\r\n        }\r\n\r\n        public created() {\r\n            // Background window:\r\n            this._backgroundWindow = new OWWindow('background');\r\n            this.currWindow = new OWWindow('in_game');\r\n            // Page elements:\r\n            this._modal = document.getElementById(\"exitMinimizeModal\");\r\n            this._closeButton = document.getElementById(\"closeButton\");\r\n            this._minimizeHeaderButton = document.getElementById(\"minimizeButton\");\r\n            this._exitButton = document.getElementById(\"exit\");\r\n            this._minimizeButton = document.getElementById(\"minimize\");\r\n            this._header = document.getElementsByClassName(\"app-header\")[0] as HTMLElement;\r\n            this._version = document.getElementById(\"version\");\r\n            this._gameEventsListener = new OWGamesEvents({\r\n                    onInfoUpdates: this.onInfoUpdates.bind(this),\r\n                    onNewEvents: this.onNewEvents.bind(this)\r\n                },\r\n                interestingFeatures);\r\n            this._gameEventsListener.start();\r\n        }\r\n\r\n        private onInfoUpdates(info) {\r\n          this.infos.push(info);\r\n        }\r\n\r\n        // Special events will be highlighted in the event log\r\n        private onNewEvents(e) {\r\n            this.events.push(e);\r\n        }\r\n\r\n        // Displays the toggle minimize/restore hotkey in the window header\r\n        private async setToggleHotkeyText() {\r\n            const hotkeyText = await OWHotkeys.getHotkeyText(hotkeys.toggle);\r\n            const hotkeyElem = document.getElementById('hotkey');\r\n            hotkeyElem.textContent = hotkeyText;\r\n        }\r\n\r\n        // Sets toggleInGameWindow as the behavior for the Ctrl+F hotkey\r\n        private async setToggleHotkeyBehavior() {\r\n            const toggleInGameWindow = async hotkeyResult => {\r\n                console.log(`pressed hotkey for ${hotkeyResult.featureId}`);\r\n                const inGameState = await this.getWindowState();\r\n\r\n                if (inGameState.window_state === WindowState.NORMAL ||\r\n                    inGameState.window_state === WindowState.MAXIMIZED) {\r\n                    this.currWindow.minimize();\r\n                } else if (inGameState.window_state === WindowState.MINIMIZED ||\r\n                    inGameState.window_state === WindowState.CLOSED) {\r\n                    this.currWindow.restore();\r\n                }\r\n            }\r\n\r\n            OWHotkeys.onHotkeyDown(hotkeys.toggle, toggleInGameWindow);\r\n        }\r\n        public async getWindowState() {\r\n            return await this.currWindow.getWindowState();\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n</style>\r\n"]}]}