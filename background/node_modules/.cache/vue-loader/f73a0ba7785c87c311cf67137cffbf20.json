{"remainingRequest":"C:\\Users\\Molin\\Companion\\background\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Molin\\Companion\\background\\src\\App.vue?vue&type=script&lang=ts&","dependencies":[{"path":"C:\\Users\\Molin\\Companion\\background\\src\\App.vue","mtime":1611268660860},{"path":"C:\\Users\\Molin\\Companion\\background\\node_modules\\babel-loader\\lib\\index.js","mtime":1610329795007},{"path":"C:\\Users\\Molin\\Companion\\background\\node_modules\\ts-loader\\index.js","mtime":1610329799503},{"path":"C:\\Users\\Molin\\Companion\\background\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1610245778946},{"path":"C:\\Users\\Molin\\Companion\\background\\node_modules\\vue-loader\\lib\\index.js","mtime":1610329801347}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCmltcG9ydCB7IENvbXBvbmVudCwgVnVlIH0gZnJvbSAndnVlLXByb3BlcnR5LWRlY29yYXRvcic7CmltcG9ydCB7IHdpbmRvd05hbWVzLCBsZWFndWVDbGFzc0lkIH0gZnJvbSAiLi4vLi4vc2hhcmVkL2NvbnN0YW50cy9jb25zdHMiOwppbXBvcnQgeyBPV0dhbWVzIH0gZnJvbSAnLi4vLi4vc2hhcmVkL2xpYnMvb3ctZ2FtZXMnOwppbXBvcnQgeyBPV0dhbWVMaXN0ZW5lciB9IGZyb20gJy4uLy4uL3NoYXJlZC9saWJzL293LWdhbWUtbGlzdGVuZXInOwppbXBvcnQgeyBPV1dpbmRvdyB9IGZyb20gJy4uLy4uL3NoYXJlZC9saWJzL293LXdpbmRvdyc7Ci8vIEB0cy1pZ25vcmUKaW1wb3J0IFJ1bm5pbmdHYW1lSW5mbyA9IG92ZXJ3b2xmLmdhbWVzLlJ1bm5pbmdHYW1lSW5mbzsKLy8gVGhlIGJhY2tncm91bmQgY29udHJvbGxlciBob2xkcyBhbGwgb2YgdGhlIGFwcCdzIGJhY2tncm91bmQgbG9naWMgLSBoZW5jZSBpdHMgbmFtZS4gaXQgaGFzCi8vIG1hbnkgcG9zc2libGUgdXNlIGNhc2VzLCBmb3IgZXhhbXBsZSBzaGFyaW5nIGRhdGEgYmV0d2VlbiB3aW5kb3dzLCBvciwgaW4gb3VyIGNhc2UsCi8vIG1hbmFnaW5nIHdoaWNoIHdpbmRvdyBpcyBjdXJyZW50bHkgcHJlc2VudGVkIHRvIHRoZSB1c2VyLiBUbyB0aGF0IGVuZCwgaXQgaG9sZHMgYSBkaWN0aW9uYXJ5Ci8vIG9mIHRoZSB3aW5kb3dzIGF2YWlsYWJsZSBpbiB0aGUgYXBwLgovLyBPdXIgYmFja2dyb3VuZCBjb250cm9sbGVyIGltcGxlbWVudHMgdGhlIFNpbmdsZXRvbiBkZXNpZ24gcGF0dGVybiwgc2luY2Ugb25seSBvbmUKLy8gaW5zdGFuY2Ugb2YgaXQgc2hvdWxkIGV4aXN0LgpAQ29tcG9uZW50CmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFwcCBleHRlbmRzIFZ1ZSB7CiAgICBwcml2YXRlIF93aW5kb3dzID0ge307CiAgICBwcml2YXRlIF9nYW1lTGlzdGVuZXI6IE9XR2FtZUxpc3RlbmVyOwoKICAgIG1vdW50ZWQoKSB7CiAgICAgICAgdGhpcy5fd2luZG93cyA9IHt9OwogICAgICAgIC8vIFBvcHVsYXRpbmcgdGhlIGJhY2tncm91bmQgY29udHJvbGxlcidzIHdpbmRvdyBkaWN0aW9uYXJ5CiAgICAgICAgdGhpcy5fd2luZG93c1t3aW5kb3dOYW1lcy5kZXNrdG9wXSA9IG5ldyBPV1dpbmRvdyh3aW5kb3dOYW1lcy5kZXNrdG9wKTsKICAgICAgICB0aGlzLl93aW5kb3dzW3dpbmRvd05hbWVzLmluR2FtZV0gPSBuZXcgT1dXaW5kb3cod2luZG93TmFtZXMuaW5HYW1lKTsKCiAgICB9OwoKICAgIC8vIFdoZW4gcnVubmluZyB0aGUgYXBwLCBzdGFydCBsaXN0ZW5pbmcgdG8gZ2FtZXMnIHN0YXR1cyBhbmQgZGVjaWRlIHdoaWNoIHdpbmRvdyBzaG91bGQKICAgIC8vIGJlIGxhdW5jaGVkIGZpcnN0LCBiYXNlZCBvbiB3aGV0aGVyIEZvcnRuaXRlIGlzIGN1cnJlbnRseSBydW5uaW5nCiAgIGFzeW5jIGNyZWF0ZWQoKSB7CiAgICAgICAvLyBXaGVuIGEgTGVhZ3VlIGdhbWUgaXMgc3RhcnRlZCBvciBpcyBlbmRlZCwgdG9nZ2xlIHRoZSBhcHAncyB3aW5kb3dzCiAgICAgICB0aGlzLl9nYW1lTGlzdGVuZXIgPSBuZXcgT1dHYW1lTGlzdGVuZXIoewogICAgICAgICAgIG9uR2FtZVN0YXJ0ZWQ6IHRoaXMudG9nZ2xlV2luZG93cy5iaW5kKHRoaXMpLAogICAgICAgICAgIG9uR2FtZUVuZGVkOiB0aGlzLnRvZ2dsZVdpbmRvd3MuYmluZCh0aGlzKQogICAgICAgfSk7CiAgICAgICAgdGhpcy5fZ2FtZUxpc3RlbmVyLnN0YXJ0KCk7CiAgICAgICAgY29uc3QgY3VycldpbmRvdyA9IGF3YWl0IHRoaXMuaXNMZWFndWVSdW5uaW5nKCkgPyB3aW5kb3dOYW1lcy5pbkdhbWUgOiB3aW5kb3dOYW1lcy5kZXNrdG9wOwogICAgICAgIHRoaXMuX3dpbmRvd3NbY3VycldpbmRvd10ucmVzdG9yZSgpOwogICAgfQoKICAgIHByaXZhdGUgdG9nZ2xlV2luZG93cyhpbmZvKSB7CiAgICAgICAgaWYgKCFpbmZvIHx8ICF0aGlzLmlzR2FtZUxlYWd1ZShpbmZvKSkgewogICAgICAgICAgICByZXR1cm47CiAgICAgICAgfQoKICAgICAgICBpZiAoaW5mby5pc1J1bm5pbmcpIHsKICAgICAgICAgICAgdGhpcy5fd2luZG93c1t3aW5kb3dOYW1lcy5kZXNrdG9wXS5jbG9zZSgpOwogICAgICAgICAgICB0aGlzLl93aW5kb3dzW3dpbmRvd05hbWVzLmluR2FtZV0ucmVzdG9yZSgpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMuX3dpbmRvd3Nbd2luZG93TmFtZXMuaW5HYW1lXS5jbG9zZSgpOwogICAgICAgICAgICB0aGlzLl93aW5kb3dzW3dpbmRvd05hbWVzLmRlc2t0b3BdLnJlc3RvcmUoKTsKICAgICAgICB9CiAgICB9CgogICAgcHJpdmF0ZSBhc3luYyBpc0xlYWd1ZVJ1bm5pbmcoKTogUHJvbWlzZTxib29sZWFuPiB7CiAgICAgICAgY29uc3QgaW5mbyA9IGF3YWl0IE9XR2FtZXMuZ2V0UnVubmluZ0dhbWVJbmZvKCk7CgogICAgICAgIHJldHVybiBpbmZvICYmIGluZm8uaXNSdW5uaW5nICYmIHRoaXMuaXNHYW1lTGVhZ3VlKGluZm8pOwogICAgfQoKICAgIC8vIElkZW50aWZ5IHdoZXRoZXIgdGhlIFJ1bm5pbmdHYW1lSW5mbyBvYmplY3Qgd2UgaGF2ZSByZWZlcmVuY2VzIEZvcnRuaXRlCiAgICBwcml2YXRlIGlzR2FtZUxlYWd1ZShpbmZvOiBSdW5uaW5nR2FtZUluZm8pIHsKICAgICAgICByZXR1cm4gaW5mby5jbGFzc0lkID09PSBsZWFndWVDbGFzc0lkOwogICAgfQp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n</template>\r\n\r\n<script lang=\"ts\">\r\n    import { Component, Vue } from 'vue-property-decorator';\r\n    import { windowNames, leagueClassId } from \"../../shared/constants/consts\";\r\n    import { OWGames } from '../../shared/libs/ow-games';\r\n    import { OWGameListener } from '../../shared/libs/ow-game-listener';\r\n    import { OWWindow } from '../../shared/libs/ow-window';\r\n    // @ts-ignore\r\n    import RunningGameInfo = overwolf.games.RunningGameInfo;\r\n    // The background controller holds all of the app's background logic - hence its name. it has\r\n    // many possible use cases, for example sharing data between windows, or, in our case,\r\n    // managing which window is currently presented to the user. To that end, it holds a dictionary\r\n    // of the windows available in the app.\r\n    // Our background controller implements the Singleton design pattern, since only one\r\n    // instance of it should exist.\r\n    @Component\r\n    export default class App extends Vue {\r\n        private _windows = {};\r\n        private _gameListener: OWGameListener;\r\n\r\n        mounted() {\r\n            this._windows = {};\r\n            // Populating the background controller's window dictionary\r\n            this._windows[windowNames.desktop] = new OWWindow(windowNames.desktop);\r\n            this._windows[windowNames.inGame] = new OWWindow(windowNames.inGame);\r\n\r\n        };\r\n\r\n        // When running the app, start listening to games' status and decide which window should\r\n        // be launched first, based on whether Fortnite is currently running\r\n       async created() {\r\n           // When a League game is started or is ended, toggle the app's windows\r\n           this._gameListener = new OWGameListener({\r\n               onGameStarted: this.toggleWindows.bind(this),\r\n               onGameEnded: this.toggleWindows.bind(this)\r\n           });\r\n            this._gameListener.start();\r\n            const currWindow = await this.isLeagueRunning() ? windowNames.inGame : windowNames.desktop;\r\n            this._windows[currWindow].restore();\r\n        }\r\n\r\n        private toggleWindows(info) {\r\n            if (!info || !this.isGameLeague(info)) {\r\n                return;\r\n            }\r\n\r\n            if (info.isRunning) {\r\n                this._windows[windowNames.desktop].close();\r\n                this._windows[windowNames.inGame].restore();\r\n            } else {\r\n                this._windows[windowNames.inGame].close();\r\n                this._windows[windowNames.desktop].restore();\r\n            }\r\n        }\r\n\r\n        private async isLeagueRunning(): Promise<boolean> {\r\n            const info = await OWGames.getRunningGameInfo();\r\n\r\n            return info && info.isRunning && this.isGameLeague(info);\r\n        }\r\n\r\n        // Identify whether the RunningGameInfo object we have references Fortnite\r\n        private isGameLeague(info: RunningGameInfo) {\r\n            return info.classId === leagueClassId;\r\n        }\r\n    }\r\n</script>\r\n\r\n<style>\r\n</style>\r\n"]}]}