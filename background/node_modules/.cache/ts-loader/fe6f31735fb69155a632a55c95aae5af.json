{"remainingRequest":"S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\thread-loader\\dist\\cjs.js!S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\babel-loader\\lib\\index.js!S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\ts-loader\\index.js??ref--13-3!S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\src\\App.vue?vue&type=script&lang=ts&","dependencies":[{"path":"S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\src\\App.vue","mtime":1612241986644},{"path":"S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1612241981279},{"path":"S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1612241985731},{"path":"S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\babel-loader\\lib\\index.js","mtime":1612241981172},{"path":"S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\ts-loader\\index.js","mtime":1612241985767},{"path":"S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1612241981279},{"path":"S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\vue-loader\\lib\\index.js","mtime":1612241986328}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiUzovQ1NVTkZhbGwyMDIwL0NPTVA0OTAvUmVwb3NpdG9yeS9Db21wYW5pb24vYmFja2dyb3VuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiUzovQ1NVTkZhbGwyMDIwL0NPTVA0OTAvUmVwb3NpdG9yeS9Db21wYW5pb24vYmFja2dyb3VuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIlM6L0NTVU5GYWxsMjAyMC9DT01QNDkwL1JlcG9zaXRvcnkvQ29tcGFuaW9uL2JhY2tncm91bmQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2NyZWF0ZUNsYXNzIjsKaW1wb3J0IF9pbmhlcml0cyBmcm9tICJTOi9DU1VORmFsbDIwMjAvQ09NUDQ5MC9SZXBvc2l0b3J5L0NvbXBhbmlvbi9iYWNrZ3JvdW5kL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9pbmhlcml0cyI7CmltcG9ydCBfY3JlYXRlU3VwZXIgZnJvbSAiUzovQ1NVTkZhbGwyMDIwL0NPTVA0OTAvUmVwb3NpdG9yeS9Db21wYW5pb24vYmFja2dyb3VuZC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlU3VwZXIiOwppbXBvcnQgeyBfX2RlY29yYXRlIH0gZnJvbSAidHNsaWIiOwppbXBvcnQgeyBDb21wb25lbnQsIFZ1ZSB9IGZyb20gJ3Z1ZS1wcm9wZXJ0eS1kZWNvcmF0b3InOwppbXBvcnQgeyB3aW5kb3dOYW1lcywgbGVhZ3VlQ2xhc3NJZCB9IGZyb20gIi4uLy4uL3NoYXJlZC9jb25zdGFudHMvY29uc3RzIjsKaW1wb3J0IHsgT1dHYW1lcyB9IGZyb20gJy4uLy4uL3NoYXJlZC9saWJzL293LWdhbWVzJzsKaW1wb3J0IHsgT1dHYW1lTGlzdGVuZXIgfSBmcm9tICcuLi8uLi9zaGFyZWQvbGlicy9vdy1nYW1lLWxpc3RlbmVyJzsKaW1wb3J0IHsgT1dXaW5kb3cgfSBmcm9tICcuLi8uLi9zaGFyZWQvbGlicy9vdy13aW5kb3cnOyAvLyBUaGUgYmFja2dyb3VuZCBjb250cm9sbGVyIGhvbGRzIGFsbCBvZiB0aGUgYXBwJ3MgYmFja2dyb3VuZCBsb2dpYyAtIGhlbmNlIGl0cyBuYW1lLiBpdCBoYXMKLy8gbWFueSBwb3NzaWJsZSB1c2UgY2FzZXMsIGZvciBleGFtcGxlIHNoYXJpbmcgZGF0YSBiZXR3ZWVuIHdpbmRvd3MsIG9yLCBpbiBvdXIgY2FzZSwKLy8gbWFuYWdpbmcgd2hpY2ggd2luZG93IGlzIGN1cnJlbnRseSBwcmVzZW50ZWQgdG8gdGhlIHVzZXIuIFRvIHRoYXQgZW5kLCBpdCBob2xkcyBhIGRpY3Rpb25hcnkKLy8gb2YgdGhlIHdpbmRvd3MgYXZhaWxhYmxlIGluIHRoZSBhcHAuCi8vIE91ciBiYWNrZ3JvdW5kIGNvbnRyb2xsZXIgaW1wbGVtZW50cyB0aGUgU2luZ2xldG9uIGRlc2lnbiBwYXR0ZXJuLCBzaW5jZSBvbmx5IG9uZQovLyBpbnN0YW5jZSBvZiBpdCBzaG91bGQgZXhpc3QuCgp2YXIgQXBwID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfVnVlKSB7CiAgX2luaGVyaXRzKEFwcCwgX1Z1ZSk7CgogIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQXBwKTsKCiAgZnVuY3Rpb24gQXBwKCkgewogICAgdmFyIF90aGlzOwoKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBcHApOwoKICAgIF90aGlzID0gX3N1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICBfdGhpcy5fd2luZG93cyA9IHt9OwogICAgcmV0dXJuIF90aGlzOwogIH0KCiAgX2NyZWF0ZUNsYXNzKEFwcCwgW3sKICAgIGtleTogIm1vdW50ZWQiLAogICAgdmFsdWU6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAgIHRoaXMuX3dpbmRvd3MgPSB7fTsgLy8gUG9wdWxhdGluZyB0aGUgYmFja2dyb3VuZCBjb250cm9sbGVyJ3Mgd2luZG93IGRpY3Rpb25hcnkKCiAgICAgIHRoaXMuX3dpbmRvd3Nbd2luZG93TmFtZXMuZGVza3RvcF0gPSBuZXcgT1dXaW5kb3cod2luZG93TmFtZXMuZGVza3RvcCk7CiAgICAgIHRoaXMuX3dpbmRvd3Nbd2luZG93TmFtZXMuaW5HYW1lXSA9IG5ldyBPV1dpbmRvdyh3aW5kb3dOYW1lcy5pbkdhbWUpOwogICAgfQogIH0sIHsKICAgIGtleTogImNyZWF0ZWQiLAogICAgLy8gV2hlbiBydW5uaW5nIHRoZSBhcHAsIHN0YXJ0IGxpc3RlbmluZyB0byBnYW1lcycgc3RhdHVzIGFuZCBkZWNpZGUgd2hpY2ggd2luZG93IHNob3VsZAogICAgLy8gYmUgbGF1bmNoZWQgZmlyc3QsIGJhc2VkIG9uIHdoZXRoZXIgRm9ydG5pdGUgaXMgY3VycmVudGx5IHJ1bm5pbmcKICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfY3JlYXRlZCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZSgpIHsKICAgICAgICB2YXIgY3VycldpbmRvdzsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICAvLyBXaGVuIGEgTGVhZ3VlIGdhbWUgaXMgc3RhcnRlZCBvciBpcyBlbmRlZCwgdG9nZ2xlIHRoZSBhcHAncyB3aW5kb3dzCiAgICAgICAgICAgICAgICB0aGlzLl9nYW1lTGlzdGVuZXIgPSBuZXcgT1dHYW1lTGlzdGVuZXIoewogICAgICAgICAgICAgICAgICBvbkdhbWVTdGFydGVkOiB0aGlzLnRvZ2dsZVdpbmRvd3MuYmluZCh0aGlzKSwKICAgICAgICAgICAgICAgICAgb25HYW1lRW5kZWQ6IHRoaXMudG9nZ2xlV2luZG93cy5iaW5kKHRoaXMpCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICB0aGlzLl9nYW1lTGlzdGVuZXIuc3RhcnQoKTsKCiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmlzTGVhZ3VlUnVubmluZygpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBpZiAoIV9jb250ZXh0LnNlbnQpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7CiAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gd2luZG93TmFtZXMuaW5HYW1lOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDk7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA4OgogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSB3aW5kb3dOYW1lcy5kZXNrdG9wOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBjdXJyV2luZG93ID0gX2NvbnRleHQudDA7CgogICAgICAgICAgICAgICAgdGhpcy5fd2luZG93c1tjdXJyV2luZG93XS5yZXN0b3JlKCk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCB0aGlzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgICAgICByZXR1cm4gX2NyZWF0ZWQuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGNyZWF0ZWQ7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJ0b2dnbGVXaW5kb3dzIiwKICAgIHZhbHVlOiBmdW5jdGlvbiB0b2dnbGVXaW5kb3dzKGluZm8pIHsKICAgICAgaWYgKCFpbmZvIHx8ICF0aGlzLmlzR2FtZUxlYWd1ZShpbmZvKSkgewogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKGluZm8uaXNSdW5uaW5nKSB7CiAgICAgICAgdGhpcy5fd2luZG93c1t3aW5kb3dOYW1lcy5kZXNrdG9wXS5jbG9zZSgpOwoKICAgICAgICB0aGlzLl93aW5kb3dzW3dpbmRvd05hbWVzLmluR2FtZV0ucmVzdG9yZSgpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuX3dpbmRvd3Nbd2luZG93TmFtZXMuaW5HYW1lXS5jbG9zZSgpOwoKICAgICAgICB0aGlzLl93aW5kb3dzW3dpbmRvd05hbWVzLmRlc2t0b3BdLnJlc3RvcmUoKTsKICAgICAgfQogICAgfQogIH0sIHsKICAgIGtleTogImlzTGVhZ3VlUnVubmluZyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2lzTGVhZ3VlUnVubmluZyA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGluZm87CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMjsKICAgICAgICAgICAgICAgIHJldHVybiBPV0dhbWVzLmdldFJ1bm5pbmdHYW1lSW5mbygpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBpbmZvID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIiwgaW5mbyAmJiBpbmZvLmlzUnVubmluZyAmJiB0aGlzLmlzR2FtZUxlYWd1ZShpbmZvKSk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcyk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGlzTGVhZ3VlUnVubmluZygpIHsKICAgICAgICByZXR1cm4gX2lzTGVhZ3VlUnVubmluZy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gaXNMZWFndWVSdW5uaW5nOwogICAgfSgpIC8vIElkZW50aWZ5IHdoZXRoZXIgdGhlIFJ1bm5pbmdHYW1lSW5mbyBvYmplY3Qgd2UgaGF2ZSByZWZlcmVuY2VzIEZvcnRuaXRlCgogIH0sIHsKICAgIGtleTogImlzR2FtZUxlYWd1ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gaXNHYW1lTGVhZ3VlKGluZm8pIHsKICAgICAgcmV0dXJuIGluZm8uY2xhc3NJZCA9PT0gbGVhZ3VlQ2xhc3NJZDsKICAgIH0KICB9XSk7CgogIHJldHVybiBBcHA7Cn0oVnVlKTsKCkFwcCA9IF9fZGVjb3JhdGUoW0NvbXBvbmVudF0sIEFwcCk7CmV4cG9ydCBkZWZhdWx0IEFwcDs="},{"version":3,"sources":["S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!S:\\CSUNFall2020\\COMP490\\Repository\\Companion\\background\\src\\App.vue?vue&type=script&lang=ts&"],"names":[],"mappings":";;;;;;;AAIA,SAAS,SAAT,EAAoB,GAApB,QAA+B,wBAA/B;AACA,SAAS,WAAT,EAAsB,aAAtB,QAA2C,+BAA3C;AACA,SAAS,OAAT,QAAwB,4BAAxB;AACA,SAAS,cAAT,QAA+B,oCAA/B;AACA,SAAS,QAAT,QAAyB,6BAAzB,C,CAGA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAqB,GAArB;AAAA;;AAAA;;AAAA,iBAAA;AAAA;;AAAA;;;AACY,UAAA,QAAA,GAAW,EAAX;AADZ;AAiDC;;AAjDD;AAAA;AAAA,8BAIW;AACH,WAAK,QAAL,GAAgB,EAAhB,CADG,CAEH;;AACA,WAAK,QAAL,CAAc,WAAW,CAAC,OAA1B,IAAqC,IAAI,QAAJ,CAAa,WAAW,CAAC,OAAzB,CAArC;AACA,WAAK,QAAL,CAAc,WAAW,CAAC,MAA1B,IAAoC,IAAI,QAAJ,CAAa,WAAW,CAAC,MAAzB,CAApC;AAEH;AAVL;AAAA;AAYI;AACA;AAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeO;AACA,qBAAK,aAAL,GAAqB,IAAI,cAAJ,CAAmB;AACpC,kBAAA,aAAa,EAAE,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB,CADqB;AAEpC,kBAAA,WAAW,EAAE,KAAK,aAAL,CAAmB,IAAnB,CAAwB,IAAxB;AAFuB,iBAAnB,CAArB;;AAIC,qBAAK,aAAL,CAAmB,KAAnB;;AApBR;AAAA,uBAqBiC,KAAK,eAAL,EArBjC;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,8BAqB0D,WAAW,CAAC,MArBtE;AAAA;AAAA;;AAAA;AAAA,8BAqB+E,WAAW,CAAC,OArB3F;;AAAA;AAqBc,gBAAA,UArBd;;AAsBQ,qBAAK,QAAL,CAAc,UAAd,EAA0B,OAA1B;;AAtBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,kCAyB0B,IAzB1B,EAyB8B;AACtB,UAAI,CAAC,IAAD,IAAS,CAAC,KAAK,YAAL,CAAkB,IAAlB,CAAd,EAAuC;AACnC;AACH;;AAED,UAAI,IAAI,CAAC,SAAT,EAAoB;AAChB,aAAK,QAAL,CAAc,WAAW,CAAC,OAA1B,EAAmC,KAAnC;;AACA,aAAK,QAAL,CAAc,WAAW,CAAC,MAA1B,EAAkC,OAAlC;AACH,OAHD,MAGO;AACH,aAAK,QAAL,CAAc,WAAW,CAAC,MAA1B,EAAkC,KAAlC;;AACA,aAAK,QAAL,CAAc,WAAW,CAAC,OAA1B,EAAmC,OAAnC;AACH;AACJ;AArCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAwC2B,OAAO,CAAC,kBAAR,EAxC3B;;AAAA;AAwCc,gBAAA,IAxCd;AAAA,kDA0Ce,IAAI,IAAI,IAAI,CAAC,SAAb,IAA0B,KAAK,YAAL,CAAkB,IAAlB,CA1CzC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QA6CI;;AA7CJ;AAAA;AAAA,iCA8CyB,IA9CzB,EA8C8C;AACtC,aAAO,IAAI,CAAC,OAAL,KAAiB,aAAxB;AACH;AAhDL;;AAAA;AAAA,EAAiC,GAAjC,CAAA;;AAAqB,GAAG,GAAA,UAAA,CAAA,CADvB,SACuB,CAAA,EAAH,GAAG,CAAH;eAAA,G","sourcesContent":["\n\n\n\nimport { Component, Vue } from 'vue-property-decorator';\nimport { windowNames, leagueClassId } from \"../../shared/constants/consts\";\nimport { OWGames } from '../../shared/libs/ow-games';\nimport { OWGameListener } from '../../shared/libs/ow-game-listener';\nimport { OWWindow } from '../../shared/libs/ow-window';\n// @ts-ignore\nimport RunningGameInfo = overwolf.games.RunningGameInfo;\n// The background controller holds all of the app's background logic - hence its name. it has\n// many possible use cases, for example sharing data between windows, or, in our case,\n// managing which window is currently presented to the user. To that end, it holds a dictionary\n// of the windows available in the app.\n// Our background controller implements the Singleton design pattern, since only one\n// instance of it should exist.\n@Component\nexport default class App extends Vue {\n    private _windows = {};\n    private _gameListener: OWGameListener;\n\n    mounted() {\n        this._windows = {};\n        // Populating the background controller's window dictionary\n        this._windows[windowNames.desktop] = new OWWindow(windowNames.desktop);\n        this._windows[windowNames.inGame] = new OWWindow(windowNames.inGame);\n\n    };\n\n    // When running the app, start listening to games' status and decide which window should\n    // be launched first, based on whether Fortnite is currently running\n   async created() {\n       // When a League game is started or is ended, toggle the app's windows\n       this._gameListener = new OWGameListener({\n           onGameStarted: this.toggleWindows.bind(this),\n           onGameEnded: this.toggleWindows.bind(this)\n       });\n        this._gameListener.start();\n        const currWindow = await this.isLeagueRunning() ? windowNames.inGame : windowNames.desktop;\n        this._windows[currWindow].restore();\n    }\n\n    private toggleWindows(info) {\n        if (!info || !this.isGameLeague(info)) {\n            return;\n        }\n\n        if (info.isRunning) {\n            this._windows[windowNames.desktop].close();\n            this._windows[windowNames.inGame].restore();\n        } else {\n            this._windows[windowNames.inGame].close();\n            this._windows[windowNames.desktop].restore();\n        }\n    }\n\n    private async isLeagueRunning(): Promise<boolean> {\n        const info = await OWGames.getRunningGameInfo();\n\n        return info && info.isRunning && this.isGameLeague(info);\n    }\n\n    // Identify whether the RunningGameInfo object we have references Fortnite\n    private isGameLeague(info: RunningGameInfo) {\n        return info.classId === leagueClassId;\n    }\n}\n"],"sourceRoot":""}]}